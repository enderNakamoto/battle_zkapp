/*! For license information please see interact.bundle.js.LICENSE.txt */
(()=>{var __webpack_modules__={156:(e,t,a)=>{const n=a(829);function r(e,t,a){const n=e[t]+e[a];let r=e[t+1]+e[a+1];n>=4294967296&&r++,e[t]=n,e[t+1]=r}function i(e,t,a,n){let r=e[t]+a;a<0&&(r+=4294967296);let i=e[t+1]+n;r>=4294967296&&i++,e[t]=r,e[t+1]=i}function o(e,t){return e[t]^e[t+1]<<8^e[t+2]<<16^e[t+3]<<24}function p(e,t,a,n,o,p){const s=_[o],d=_[o+1],m=_[p],u=_[p+1];r(l,e,t),i(l,e,s,d);let c=l[n]^l[e],f=l[n+1]^l[e+1];l[n]=f,l[n+1]=c,r(l,a,n),c=l[t]^l[a],f=l[t+1]^l[a+1],l[t]=c>>>24^f<<8,l[t+1]=f>>>24^c<<8,r(l,e,t),i(l,e,m,u),c=l[n]^l[e],f=l[n+1]^l[e+1],l[n]=c>>>16^f<<16,l[n+1]=f>>>16^c<<16,r(l,a,n),c=l[t]^l[a],f=l[t+1]^l[a+1],l[t]=f>>>31^c<<1,l[t+1]=c>>>31^f<<1}const s=new Uint32Array([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]),d=new Uint8Array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3].map((function(e){return 2*e}))),l=new Uint32Array(32),_=new Uint32Array(32);function m(e,t){let a=0;for(a=0;a<16;a++)l[a]=e.h[a],l[a+16]=s[a];for(l[24]=l[24]^e.t,l[25]=l[25]^e.t/4294967296,t&&(l[28]=~l[28],l[29]=~l[29]),a=0;a<32;a++)_[a]=o(e.b,4*a);for(a=0;a<12;a++)p(0,8,16,24,d[16*a+0],d[16*a+1]),p(2,10,18,26,d[16*a+2],d[16*a+3]),p(4,12,20,28,d[16*a+4],d[16*a+5]),p(6,14,22,30,d[16*a+6],d[16*a+7]),p(0,10,20,30,d[16*a+8],d[16*a+9]),p(2,12,22,24,d[16*a+10],d[16*a+11]),p(4,14,16,26,d[16*a+12],d[16*a+13]),p(6,8,18,28,d[16*a+14],d[16*a+15]);for(a=0;a<16;a++)e.h[a]=e.h[a]^l[a]^l[a+16]}const u=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);function c(e,t,a,n){if(0===e||e>64)throw new Error("Illegal output length, expected 0 < length <= 64");if(t&&t.length>64)throw new Error("Illegal key, expected Uint8Array with 0 < length <= 64");if(a&&16!==a.length)throw new Error("Illegal salt, expected Uint8Array with length is 16");if(n&&16!==n.length)throw new Error("Illegal personal, expected Uint8Array with length is 16");const r={b:new Uint8Array(128),h:new Uint32Array(16),t:0,c:0,outlen:e};u.fill(0),u[0]=e,t&&(u[1]=t.length),u[2]=1,u[3]=1,a&&u.set(a,32),n&&u.set(n,48);for(let e=0;e<16;e++)r.h[e]=s[e]^o(u,4*e);return t&&(f(r,t),r.c=128),r}function f(e,t){for(let a=0;a<t.length;a++)128===e.c&&(e.t+=e.c,m(e,!1),e.c=0),e.b[e.c++]=t[a]}function h(e){for(e.t+=e.c;e.c<128;)e.b[e.c++]=0;m(e,!0);const t=new Uint8Array(e.outlen);for(let a=0;a<e.outlen;a++)t[a]=e.h[a>>2]>>8*(3&a);return t}function g(e,t,a,r,i){a=a||64,e=n.normalizeInput(e),r&&(r=n.normalizeInput(r)),i&&(i=n.normalizeInput(i));const o=c(a,t,r,i);return f(o,e),h(o)}e.exports={blake2b:g,blake2bHex:function(e,t,a,r,i){const o=g(e,t,a,r,i);return n.toHex(o)},blake2bInit:c,blake2bUpdate:f,blake2bFinal:h}},843:(e,t,a)=>{const n=a(829);function r(e,t){return e[t]^e[t+1]<<8^e[t+2]<<16^e[t+3]<<24}function i(e,t,a,n,r,i){d[e]=d[e]+d[t]+r,d[n]=o(d[n]^d[e],16),d[a]=d[a]+d[n],d[t]=o(d[t]^d[a],12),d[e]=d[e]+d[t]+i,d[n]=o(d[n]^d[e],8),d[a]=d[a]+d[n],d[t]=o(d[t]^d[a],7)}function o(e,t){return e>>>t^e<<32-t}const p=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),s=new Uint8Array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0]),d=new Uint32Array(16),l=new Uint32Array(16);function _(e,t){let a=0;for(a=0;a<8;a++)d[a]=e.h[a],d[a+8]=p[a];for(d[12]^=e.t,d[13]^=e.t/4294967296,t&&(d[14]=~d[14]),a=0;a<16;a++)l[a]=r(e.b,4*a);for(a=0;a<10;a++)i(0,4,8,12,l[s[16*a+0]],l[s[16*a+1]]),i(1,5,9,13,l[s[16*a+2]],l[s[16*a+3]]),i(2,6,10,14,l[s[16*a+4]],l[s[16*a+5]]),i(3,7,11,15,l[s[16*a+6]],l[s[16*a+7]]),i(0,5,10,15,l[s[16*a+8]],l[s[16*a+9]]),i(1,6,11,12,l[s[16*a+10]],l[s[16*a+11]]),i(2,7,8,13,l[s[16*a+12]],l[s[16*a+13]]),i(3,4,9,14,l[s[16*a+14]],l[s[16*a+15]]);for(a=0;a<8;a++)e.h[a]^=d[a]^d[a+8]}function m(e,t){if(!(e>0&&e<=32))throw new Error("Incorrect output length, should be in [1, 32]");const a=t?t.length:0;if(t&&!(a>0&&a<=32))throw new Error("Incorrect key length, should be in [1, 32]");const n={h:new Uint32Array(p),b:new Uint8Array(64),c:0,t:0,outlen:e};return n.h[0]^=16842752^a<<8^e,a>0&&(u(n,t),n.c=64),n}function u(e,t){for(let a=0;a<t.length;a++)64===e.c&&(e.t+=e.c,_(e,!1),e.c=0),e.b[e.c++]=t[a]}function c(e){for(e.t+=e.c;e.c<64;)e.b[e.c++]=0;_(e,!0);const t=new Uint8Array(e.outlen);for(let a=0;a<e.outlen;a++)t[a]=e.h[a>>2]>>8*(3&a)&255;return t}function f(e,t,a){a=a||32,e=n.normalizeInput(e);const r=m(a,t);return u(r,e),c(r)}e.exports={blake2s:f,blake2sHex:function(e,t,a){const r=f(e,t,a);return n.toHex(r)},blake2sInit:m,blake2sUpdate:u,blake2sFinal:c}},493:(e,t,a)=>{const n=a(156),r=a(843);e.exports={blake2b:n.blake2b,blake2bHex:n.blake2bHex,blake2bInit:n.blake2bInit,blake2bUpdate:n.blake2bUpdate,blake2bFinal:n.blake2bFinal,blake2s:r.blake2s,blake2sHex:r.blake2sHex,blake2sInit:r.blake2sInit,blake2sUpdate:r.blake2sUpdate,blake2sFinal:r.blake2sFinal}},829:e=>{function t(e){return(4294967296+e).toString(16).substring(1)}e.exports={normalizeInput:function(e){let t;if(e instanceof Uint8Array)t=e;else{if("string"!=typeof e)throw new Error("Input must be an string, Buffer or Uint8Array");t=(new TextEncoder).encode(e)}return t},toHex:function(e){return Array.prototype.map.call(e,(function(e){return(e<16?"0":"")+e.toString(16)})).join("")},debugPrint:function(e,a,n){let r="\n"+e+" = ";for(let i=0;i<a.length;i+=2){if(32===n)r+=t(a[i]).toUpperCase(),r+=" ",r+=t(a[i+1]).toUpperCase();else{if(64!==n)throw new Error("Invalid size "+n);r+=t(a[i+1]).toUpperCase(),r+=t(a[i]).toUpperCase()}i%6==4?r+="\n"+new Array(e.length+4).join(" "):i<a.length-2&&(r+=" ")}console.log(r)},testSpeed:function(e,t,a){let n=(new Date).getTime();const r=new Uint8Array(t);for(let e=0;e<t;e++)r[e]=e%256;const i=(new Date).getTime();console.log("Generated random input in "+(i-n)+"ms"),n=i;for(let i=0;i<a;i++){const a=e(r),i=(new Date).getTime(),o=i-n;n=i,console.log("Hashed in "+o+"ms: "+a.substring(0,20)+"..."),console.log(Math.round(t/(1<<20)/(o/1e3)*100)/100+" MB PER SECOND")}}}},788:(e,t,a)=>{const n=a(857),r=a(928);function i(e){const t=process.env.XDG_CACHE_HOME||r.join(n.homedir(),".cache");return r.join(t,e)}function o(e){return r.join(n.homedir(),"Library","Caches",e)}function p(e){const t=process.env.LOCALAPPDATA||r.join(n.homedir(),"AppData","Local");return r.join(t,e,"Cache")}const s=function(){switch(n.platform()){case"darwin":return o;case"win32":return p;case"aix":case"android":case"freebsd":case"linux":case"netbsd":case"openbsd":case"sunos":return i;default:return console.error(`(node:${process.pid}) [cachedir] Warning: the platform "${n.platform()}" is not currently supported by node-cachedir, falling back to "posix". Please file an issue with your platform here: https://github.com/LinusU/node-cachedir/issues/new`),i}}();e.exports=function(e){if("string"!=typeof e)throw new TypeError("id is not a string");if(0===e.length)throw new Error("id cannot be empty");if(/[^0-9a-zA-Z-]/.test(e))throw new Error("id cannot contain special characters");return s(e)}},410:(e,t,a)=>{"use strict";var n=a(175);e.exports=function(e,t){return/^\/\//.test(e)&&(e="https:"+e),n.call(this,e,t)},global.fetch||(global.fetch=e.exports,global.Response=n.Response,global.Headers=n.Headers,global.Request=n.Request)},312:(module,exports,__webpack_require__)=>{var __WEBPACK_AMD_DEFINE_RESULT__;(function(){"use strict";var ERROR="input is invalid type",WINDOW="object"==typeof window,root=WINDOW?window:{};root.JS_SHA256_NO_WINDOW&&(WINDOW=!1);var WEB_WORKER=!WINDOW&&"object"==typeof self,NODE_JS=!root.JS_SHA256_NO_NODE_JS&&"object"==typeof process&&process.versions&&process.versions.node;NODE_JS?root=global:WEB_WORKER&&(root=self);var COMMON_JS=!root.JS_SHA256_NO_COMMON_JS&&module.exports,AMD=__webpack_require__.amdO,ARRAY_BUFFER=!root.JS_SHA256_NO_ARRAY_BUFFER&&"undefined"!=typeof ArrayBuffer,HEX_CHARS="0123456789abcdef".split(""),EXTRA=[-2147483648,8388608,32768,128],SHIFT=[24,16,8,0],K=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],OUTPUT_TYPES=["hex","array","digest","arrayBuffer"],blocks=[];!root.JS_SHA256_NO_NODE_JS&&Array.isArray||(Array.isArray=function(e){return"[object Array]"===Object.prototype.toString.call(e)}),!ARRAY_BUFFER||!root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW&&ArrayBuffer.isView||(ArrayBuffer.isView=function(e){return"object"==typeof e&&e.buffer&&e.buffer.constructor===ArrayBuffer});var createOutputMethod=function(e,t){return function(a){return new Sha256(t,!0).update(a)[e]()}},createMethod=function(e){var t=createOutputMethod("hex",e);NODE_JS&&(t=nodeWrap(t,e)),t.create=function(){return new Sha256(e)},t.update=function(e){return t.create().update(e)};for(var a=0;a<OUTPUT_TYPES.length;++a){var n=OUTPUT_TYPES[a];t[n]=createOutputMethod(n,e)}return t},nodeWrap=function(method,is224){var crypto=eval("require('crypto')"),Buffer=eval("require('buffer').Buffer"),algorithm=is224?"sha224":"sha256",nodeMethod=function(e){if("string"==typeof e)return crypto.createHash(algorithm).update(e,"utf8").digest("hex");if(null==e)throw new Error(ERROR);return e.constructor===ArrayBuffer&&(e=new Uint8Array(e)),Array.isArray(e)||ArrayBuffer.isView(e)||e.constructor===Buffer?crypto.createHash(algorithm).update(new Buffer(e)).digest("hex"):method(e)};return nodeMethod},createHmacOutputMethod=function(e,t){return function(a,n){return new HmacSha256(a,t,!0).update(n)[e]()}},createHmacMethod=function(e){var t=createHmacOutputMethod("hex",e);t.create=function(t){return new HmacSha256(t,e)},t.update=function(e,a){return t.create(e).update(a)};for(var a=0;a<OUTPUT_TYPES.length;++a){var n=OUTPUT_TYPES[a];t[n]=createHmacOutputMethod(n,e)}return t};function Sha256(e,t){t?(blocks[0]=blocks[16]=blocks[1]=blocks[2]=blocks[3]=blocks[4]=blocks[5]=blocks[6]=blocks[7]=blocks[8]=blocks[9]=blocks[10]=blocks[11]=blocks[12]=blocks[13]=blocks[14]=blocks[15]=0,this.blocks=blocks):this.blocks=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],e?(this.h0=3238371032,this.h1=914150663,this.h2=812702999,this.h3=4144912697,this.h4=4290775857,this.h5=1750603025,this.h6=1694076839,this.h7=3204075428):(this.h0=1779033703,this.h1=3144134277,this.h2=1013904242,this.h3=2773480762,this.h4=1359893119,this.h5=2600822924,this.h6=528734635,this.h7=1541459225),this.block=this.start=this.bytes=this.hBytes=0,this.finalized=this.hashed=!1,this.first=!0,this.is224=e}function HmacSha256(e,t,a){var n,r=typeof e;if("string"===r){var i,o=[],p=e.length,s=0;for(n=0;n<p;++n)(i=e.charCodeAt(n))<128?o[s++]=i:i<2048?(o[s++]=192|i>>6,o[s++]=128|63&i):i<55296||i>=57344?(o[s++]=224|i>>12,o[s++]=128|i>>6&63,o[s++]=128|63&i):(i=65536+((1023&i)<<10|1023&e.charCodeAt(++n)),o[s++]=240|i>>18,o[s++]=128|i>>12&63,o[s++]=128|i>>6&63,o[s++]=128|63&i);e=o}else{if("object"!==r)throw new Error(ERROR);if(null===e)throw new Error(ERROR);if(ARRAY_BUFFER&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||ARRAY_BUFFER&&ArrayBuffer.isView(e)))throw new Error(ERROR)}e.length>64&&(e=new Sha256(t,!0).update(e).array());var d=[],l=[];for(n=0;n<64;++n){var _=e[n]||0;d[n]=92^_,l[n]=54^_}Sha256.call(this,t,a),this.update(l),this.oKeyPad=d,this.inner=!0,this.sharedMemory=a}Sha256.prototype.update=function(e){if(!this.finalized){var t,a=typeof e;if("string"!==a){if("object"!==a)throw new Error(ERROR);if(null===e)throw new Error(ERROR);if(ARRAY_BUFFER&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!(Array.isArray(e)||ARRAY_BUFFER&&ArrayBuffer.isView(e)))throw new Error(ERROR);t=!0}for(var n,r,i=0,o=e.length,p=this.blocks;i<o;){if(this.hashed&&(this.hashed=!1,p[0]=this.block,p[16]=p[1]=p[2]=p[3]=p[4]=p[5]=p[6]=p[7]=p[8]=p[9]=p[10]=p[11]=p[12]=p[13]=p[14]=p[15]=0),t)for(r=this.start;i<o&&r<64;++i)p[r>>2]|=e[i]<<SHIFT[3&r++];else for(r=this.start;i<o&&r<64;++i)(n=e.charCodeAt(i))<128?p[r>>2]|=n<<SHIFT[3&r++]:n<2048?(p[r>>2]|=(192|n>>6)<<SHIFT[3&r++],p[r>>2]|=(128|63&n)<<SHIFT[3&r++]):n<55296||n>=57344?(p[r>>2]|=(224|n>>12)<<SHIFT[3&r++],p[r>>2]|=(128|n>>6&63)<<SHIFT[3&r++],p[r>>2]|=(128|63&n)<<SHIFT[3&r++]):(n=65536+((1023&n)<<10|1023&e.charCodeAt(++i)),p[r>>2]|=(240|n>>18)<<SHIFT[3&r++],p[r>>2]|=(128|n>>12&63)<<SHIFT[3&r++],p[r>>2]|=(128|n>>6&63)<<SHIFT[3&r++],p[r>>2]|=(128|63&n)<<SHIFT[3&r++]);this.lastByteIndex=r,this.bytes+=r-this.start,r>=64?(this.block=p[16],this.start=r-64,this.hash(),this.hashed=!0):this.start=r}return this.bytes>4294967295&&(this.hBytes+=this.bytes/4294967296|0,this.bytes=this.bytes%4294967296),this}},Sha256.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var e=this.blocks,t=this.lastByteIndex;e[16]=this.block,e[t>>2]|=EXTRA[3&t],this.block=e[16],t>=56&&(this.hashed||this.hash(),e[0]=this.block,e[16]=e[1]=e[2]=e[3]=e[4]=e[5]=e[6]=e[7]=e[8]=e[9]=e[10]=e[11]=e[12]=e[13]=e[14]=e[15]=0),e[14]=this.hBytes<<3|this.bytes>>>29,e[15]=this.bytes<<3,this.hash()}},Sha256.prototype.hash=function(){var e,t,a,n,r,i,o,p,s,d=this.h0,l=this.h1,_=this.h2,m=this.h3,u=this.h4,c=this.h5,f=this.h6,h=this.h7,g=this.blocks;for(e=16;e<64;++e)t=((r=g[e-15])>>>7|r<<25)^(r>>>18|r<<14)^r>>>3,a=((r=g[e-2])>>>17|r<<15)^(r>>>19|r<<13)^r>>>10,g[e]=g[e-16]+t+g[e-7]+a|0;for(s=l&_,e=0;e<64;e+=4)this.first?(this.is224?(i=300032,h=(r=g[0]-1413257819)-150054599|0,m=r+24177077|0):(i=704751109,h=(r=g[0]-210244248)-1521486534|0,m=r+143694565|0),this.first=!1):(t=(d>>>2|d<<30)^(d>>>13|d<<19)^(d>>>22|d<<10),n=(i=d&l)^d&_^s,h=m+(r=h+(a=(u>>>6|u<<26)^(u>>>11|u<<21)^(u>>>25|u<<7))+(u&c^~u&f)+K[e]+g[e])|0,m=r+(t+n)|0),t=(m>>>2|m<<30)^(m>>>13|m<<19)^(m>>>22|m<<10),n=(o=m&d)^m&l^i,f=_+(r=f+(a=(h>>>6|h<<26)^(h>>>11|h<<21)^(h>>>25|h<<7))+(h&u^~h&c)+K[e+1]+g[e+1])|0,t=((_=r+(t+n)|0)>>>2|_<<30)^(_>>>13|_<<19)^(_>>>22|_<<10),n=(p=_&m)^_&d^o,c=l+(r=c+(a=(f>>>6|f<<26)^(f>>>11|f<<21)^(f>>>25|f<<7))+(f&h^~f&u)+K[e+2]+g[e+2])|0,t=((l=r+(t+n)|0)>>>2|l<<30)^(l>>>13|l<<19)^(l>>>22|l<<10),n=(s=l&_)^l&m^p,u=d+(r=u+(a=(c>>>6|c<<26)^(c>>>11|c<<21)^(c>>>25|c<<7))+(c&f^~c&h)+K[e+3]+g[e+3])|0,d=r+(t+n)|0;this.h0=this.h0+d|0,this.h1=this.h1+l|0,this.h2=this.h2+_|0,this.h3=this.h3+m|0,this.h4=this.h4+u|0,this.h5=this.h5+c|0,this.h6=this.h6+f|0,this.h7=this.h7+h|0},Sha256.prototype.hex=function(){this.finalize();var e=this.h0,t=this.h1,a=this.h2,n=this.h3,r=this.h4,i=this.h5,o=this.h6,p=this.h7,s=HEX_CHARS[e>>28&15]+HEX_CHARS[e>>24&15]+HEX_CHARS[e>>20&15]+HEX_CHARS[e>>16&15]+HEX_CHARS[e>>12&15]+HEX_CHARS[e>>8&15]+HEX_CHARS[e>>4&15]+HEX_CHARS[15&e]+HEX_CHARS[t>>28&15]+HEX_CHARS[t>>24&15]+HEX_CHARS[t>>20&15]+HEX_CHARS[t>>16&15]+HEX_CHARS[t>>12&15]+HEX_CHARS[t>>8&15]+HEX_CHARS[t>>4&15]+HEX_CHARS[15&t]+HEX_CHARS[a>>28&15]+HEX_CHARS[a>>24&15]+HEX_CHARS[a>>20&15]+HEX_CHARS[a>>16&15]+HEX_CHARS[a>>12&15]+HEX_CHARS[a>>8&15]+HEX_CHARS[a>>4&15]+HEX_CHARS[15&a]+HEX_CHARS[n>>28&15]+HEX_CHARS[n>>24&15]+HEX_CHARS[n>>20&15]+HEX_CHARS[n>>16&15]+HEX_CHARS[n>>12&15]+HEX_CHARS[n>>8&15]+HEX_CHARS[n>>4&15]+HEX_CHARS[15&n]+HEX_CHARS[r>>28&15]+HEX_CHARS[r>>24&15]+HEX_CHARS[r>>20&15]+HEX_CHARS[r>>16&15]+HEX_CHARS[r>>12&15]+HEX_CHARS[r>>8&15]+HEX_CHARS[r>>4&15]+HEX_CHARS[15&r]+HEX_CHARS[i>>28&15]+HEX_CHARS[i>>24&15]+HEX_CHARS[i>>20&15]+HEX_CHARS[i>>16&15]+HEX_CHARS[i>>12&15]+HEX_CHARS[i>>8&15]+HEX_CHARS[i>>4&15]+HEX_CHARS[15&i]+HEX_CHARS[o>>28&15]+HEX_CHARS[o>>24&15]+HEX_CHARS[o>>20&15]+HEX_CHARS[o>>16&15]+HEX_CHARS[o>>12&15]+HEX_CHARS[o>>8&15]+HEX_CHARS[o>>4&15]+HEX_CHARS[15&o];return this.is224||(s+=HEX_CHARS[p>>28&15]+HEX_CHARS[p>>24&15]+HEX_CHARS[p>>20&15]+HEX_CHARS[p>>16&15]+HEX_CHARS[p>>12&15]+HEX_CHARS[p>>8&15]+HEX_CHARS[p>>4&15]+HEX_CHARS[15&p]),s},Sha256.prototype.toString=Sha256.prototype.hex,Sha256.prototype.digest=function(){this.finalize();var e=this.h0,t=this.h1,a=this.h2,n=this.h3,r=this.h4,i=this.h5,o=this.h6,p=this.h7,s=[e>>24&255,e>>16&255,e>>8&255,255&e,t>>24&255,t>>16&255,t>>8&255,255&t,a>>24&255,a>>16&255,a>>8&255,255&a,n>>24&255,n>>16&255,n>>8&255,255&n,r>>24&255,r>>16&255,r>>8&255,255&r,i>>24&255,i>>16&255,i>>8&255,255&i,o>>24&255,o>>16&255,o>>8&255,255&o];return this.is224||s.push(p>>24&255,p>>16&255,p>>8&255,255&p),s},Sha256.prototype.array=Sha256.prototype.digest,Sha256.prototype.arrayBuffer=function(){this.finalize();var e=new ArrayBuffer(this.is224?28:32),t=new DataView(e);return t.setUint32(0,this.h0),t.setUint32(4,this.h1),t.setUint32(8,this.h2),t.setUint32(12,this.h3),t.setUint32(16,this.h4),t.setUint32(20,this.h5),t.setUint32(24,this.h6),this.is224||t.setUint32(28,this.h7),e},HmacSha256.prototype=new Sha256,HmacSha256.prototype.finalize=function(){if(Sha256.prototype.finalize.call(this),this.inner){this.inner=!1;var e=this.array();Sha256.call(this,this.is224,this.sharedMemory),this.update(this.oKeyPad),this.update(e),Sha256.prototype.finalize.call(this)}};var exports=createMethod();exports.sha256=exports,exports.sha224=createMethod(!0),exports.sha256.hmac=createHmacMethod(),exports.sha224.hmac=createHmacMethod(!0),COMMON_JS?module.exports=exports:(root.sha256=exports.sha256,root.sha224=exports.sha224,AMD&&(__WEBPACK_AMD_DEFINE_RESULT__=function(){return exports}.call(exports,__webpack_require__,exports,module),void 0===__WEBPACK_AMD_DEFINE_RESULT__||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)))})()},741:()=>{var e;!function(e){!function(){var t="object"==typeof global?global:"object"==typeof self?self:"object"==typeof this?this:Function("return this;")(),a=n(e);function n(e,t){return function(a,n){"function"!=typeof e[a]&&Object.defineProperty(e,a,{configurable:!0,writable:!0,value:n}),t&&t(a,n)}}void 0===t.Reflect?t.Reflect=e:a=n(t.Reflect,a),function(e){var t=Object.prototype.hasOwnProperty,a="function"==typeof Symbol,n=a&&void 0!==Symbol.toPrimitive?Symbol.toPrimitive:"@@toPrimitive",r=a&&void 0!==Symbol.iterator?Symbol.iterator:"@@iterator",i="function"==typeof Object.create,o={__proto__:[]}instanceof Array,p=!i&&!o,s={create:i?function(){return O(Object.create(null))}:o?function(){return O({__proto__:null})}:function(){return O({})},has:p?function(e,a){return t.call(e,a)}:function(e,t){return t in e},get:p?function(e,a){return t.call(e,a)?e[a]:void 0}:function(e,t){return e[t]}},d=Object.getPrototypeOf(Function),l="object"==typeof process&&process.env&&"true"===process.env.REFLECT_METADATA_USE_MAP_POLYFILL,_=l||"function"!=typeof Map||"function"!=typeof Map.prototype.entries?function(){var e={},t=[],a=function(){function e(e,t,a){this._index=0,this._keys=e,this._values=t,this._selector=a}return e.prototype["@@iterator"]=function(){return this},e.prototype[r]=function(){return this},e.prototype.next=function(){var e=this._index;if(e>=0&&e<this._keys.length){var a=this._selector(this._keys[e],this._values[e]);return e+1>=this._keys.length?(this._index=-1,this._keys=t,this._values=t):this._index++,{value:a,done:!1}}return{value:void 0,done:!0}},e.prototype.throw=function(e){throw this._index>=0&&(this._index=-1,this._keys=t,this._values=t),e},e.prototype.return=function(e){return this._index>=0&&(this._index=-1,this._keys=t,this._values=t),{value:e,done:!0}},e}();return function(){function t(){this._keys=[],this._values=[],this._cacheKey=e,this._cacheIndex=-2}return Object.defineProperty(t.prototype,"size",{get:function(){return this._keys.length},enumerable:!0,configurable:!0}),t.prototype.has=function(e){return this._find(e,!1)>=0},t.prototype.get=function(e){var t=this._find(e,!1);return t>=0?this._values[t]:void 0},t.prototype.set=function(e,t){var a=this._find(e,!0);return this._values[a]=t,this},t.prototype.delete=function(t){var a=this._find(t,!1);if(a>=0){for(var n=this._keys.length,r=a+1;r<n;r++)this._keys[r-1]=this._keys[r],this._values[r-1]=this._values[r];return this._keys.length--,this._values.length--,t===this._cacheKey&&(this._cacheKey=e,this._cacheIndex=-2),!0}return!1},t.prototype.clear=function(){this._keys.length=0,this._values.length=0,this._cacheKey=e,this._cacheIndex=-2},t.prototype.keys=function(){return new a(this._keys,this._values,n)},t.prototype.values=function(){return new a(this._keys,this._values,i)},t.prototype.entries=function(){return new a(this._keys,this._values,o)},t.prototype["@@iterator"]=function(){return this.entries()},t.prototype[r]=function(){return this.entries()},t.prototype._find=function(e,t){return this._cacheKey!==e&&(this._cacheIndex=this._keys.indexOf(this._cacheKey=e)),this._cacheIndex<0&&t&&(this._cacheIndex=this._keys.length,this._keys.push(e),this._values.push(void 0)),this._cacheIndex},t}();function n(e,t){return e}function i(e,t){return t}function o(e,t){return[e,t]}}():Map,m=l||"function"!=typeof Set||"function"!=typeof Set.prototype.entries?function(){function e(){this._map=new _}return Object.defineProperty(e.prototype,"size",{get:function(){return this._map.size},enumerable:!0,configurable:!0}),e.prototype.has=function(e){return this._map.has(e)},e.prototype.add=function(e){return this._map.set(e,e),this},e.prototype.delete=function(e){return this._map.delete(e)},e.prototype.clear=function(){this._map.clear()},e.prototype.keys=function(){return this._map.keys()},e.prototype.values=function(){return this._map.values()},e.prototype.entries=function(){return this._map.entries()},e.prototype["@@iterator"]=function(){return this.keys()},e.prototype[r]=function(){return this.keys()},e}():Set,u=new(l||"function"!=typeof WeakMap?function(){var e=16,a=s.create(),n=r();return function(){function e(){this._key=r()}return e.prototype.has=function(e){var t=i(e,!1);return void 0!==t&&s.has(t,this._key)},e.prototype.get=function(e){var t=i(e,!1);return void 0!==t?s.get(t,this._key):void 0},e.prototype.set=function(e,t){return i(e,!0)[this._key]=t,this},e.prototype.delete=function(e){var t=i(e,!1);return void 0!==t&&delete t[this._key]},e.prototype.clear=function(){this._key=r()},e}();function r(){var e;do{e="@@WeakMap@@"+p()}while(s.has(a,e));return a[e]=!0,e}function i(e,a){if(!t.call(e,n)){if(!a)return;Object.defineProperty(e,n,{value:s.create()})}return e[n]}function o(e,t){for(var a=0;a<t;++a)e[a]=255*Math.random()|0;return e}function p(){var t,a=(t=e,"function"==typeof Uint8Array?"undefined"!=typeof crypto?crypto.getRandomValues(new Uint8Array(t)):"undefined"!=typeof msCrypto?msCrypto.getRandomValues(new Uint8Array(t)):o(new Uint8Array(t),t):o(new Array(t),t));a[6]=79&a[6]|64,a[8]=191&a[8]|128;for(var n="",r=0;r<e;++r){var i=a[r];4!==r&&6!==r&&8!==r||(n+="-"),i<16&&(n+="0"),n+=i.toString(16).toLowerCase()}return n}}():WeakMap);function c(e,t,a){var n=u.get(e);if(S(n)){if(!a)return;n=new _,u.set(e,n)}var r=n.get(t);if(S(r)){if(!a)return;r=new _,n.set(t,r)}return r}function f(e,t,a){if(h(e,t,a))return!0;var n=V(t);return!x(n)&&f(e,n,a)}function h(e,t,a){var n=c(t,a,!1);return!S(n)&&!!n.has(e)}function g(e,t,a){if(h(e,t,a))return w(e,t,a);var n=V(t);return x(n)?void 0:g(e,n,a)}function w(e,t,a){var n=c(t,a,!1);if(!S(n))return n.get(e)}function v(e,t,a,n){c(a,n,!0).set(e,t)}function y(e,t){var a=b(e,t),n=V(e);if(null===n)return a;var r=y(n,t);if(r.length<=0)return a;if(a.length<=0)return r;for(var i=new m,o=[],p=0,s=a;p<s.length;p++){var d=s[p];i.has(d)||(i.add(d),o.push(d))}for(var l=0,_=r;l<_.length;l++)d=_[l],i.has(d)||(i.add(d),o.push(d));return o}function b(e,t){var a=[],n=c(e,t,!1);if(S(n))return a;for(var i=function(e){var t=B(e,r);if(!C(t))throw new TypeError;var a=t.call(e);if(!T(a))throw new TypeError;return a}(n.keys()),o=0;;){var p=F(i);if(!p)return a.length=o,a;var s=p.value;try{a[o]=s}catch(e){try{q(i)}finally{throw e}}o++}}function k(e){if(null===e)return 1;switch(typeof e){case"undefined":return 0;case"boolean":return 2;case"string":return 3;case"symbol":return 4;case"number":return 5;case"object":return null===e?1:6;default:return 6}}function S(e){return void 0===e}function x(e){return null===e}function T(e){return"object"==typeof e?null!==e:"function"==typeof e}function E(e,t){switch(k(e)){case 0:case 1:case 2:case 3:case 4:case 5:return e}var a=3===t?"string":5===t?"number":"default",r=B(e,n);if(void 0!==r){var i=r.call(e,a);if(T(i))throw new TypeError;return i}return function(e,t){if("string"===t){var a=e.toString;if(C(a)&&!T(r=a.call(e)))return r;if(C(n=e.valueOf)&&!T(r=n.call(e)))return r}else{var n;if(C(n=e.valueOf)&&!T(r=n.call(e)))return r;var r,i=e.toString;if(C(i)&&!T(r=i.call(e)))return r}throw new TypeError}(e,"default"===a?"number":a)}function I(e){var t=E(e,3);return"symbol"==typeof t?t:function(e){return""+e}(t)}function N(e){return Array.isArray?Array.isArray(e):e instanceof Object?e instanceof Array:"[object Array]"===Object.prototype.toString.call(e)}function C(e){return"function"==typeof e}function A(e){return"function"==typeof e}function B(e,t){var a=e[t];if(null!=a){if(!C(a))throw new TypeError;return a}}function F(e){var t=e.next();return!t.done&&t}function q(e){var t=e.return;t&&t.call(e)}function V(e){var t=Object.getPrototypeOf(e);if("function"!=typeof e||e===d)return t;if(t!==d)return t;var a=e.prototype,n=a&&Object.getPrototypeOf(a);if(null==n||n===Object.prototype)return t;var r=n.constructor;return"function"!=typeof r||r===e?t:r}function O(e){return e.__=void 0,delete e.__,e}e("decorate",(function(e,t,a,n){if(S(a)){if(!N(e))throw new TypeError;if(!A(t))throw new TypeError;return function(e,t){for(var a=e.length-1;a>=0;--a){var n=(0,e[a])(t);if(!S(n)&&!x(n)){if(!A(n))throw new TypeError;t=n}}return t}(e,t)}if(!N(e))throw new TypeError;if(!T(t))throw new TypeError;if(!T(n)&&!S(n)&&!x(n))throw new TypeError;return x(n)&&(n=void 0),function(e,t,a,n){for(var r=e.length-1;r>=0;--r){var i=(0,e[r])(t,a,n);if(!S(i)&&!x(i)){if(!T(i))throw new TypeError;n=i}}return n}(e,t,a=I(a),n)})),e("metadata",(function(e,t){return function(a,n){if(!T(a))throw new TypeError;if(!S(n)&&!function(e){switch(k(e)){case 3:case 4:return!0;default:return!1}}(n))throw new TypeError;v(e,t,a,n)}})),e("defineMetadata",(function(e,t,a,n){if(!T(a))throw new TypeError;return S(n)||(n=I(n)),v(e,t,a,n)})),e("hasMetadata",(function(e,t,a){if(!T(t))throw new TypeError;return S(a)||(a=I(a)),f(e,t,a)})),e("hasOwnMetadata",(function(e,t,a){if(!T(t))throw new TypeError;return S(a)||(a=I(a)),h(e,t,a)})),e("getMetadata",(function(e,t,a){if(!T(t))throw new TypeError;return S(a)||(a=I(a)),g(e,t,a)})),e("getOwnMetadata",(function(e,t,a){if(!T(t))throw new TypeError;return S(a)||(a=I(a)),w(e,t,a)})),e("getMetadataKeys",(function(e,t){if(!T(e))throw new TypeError;return S(t)||(t=I(t)),y(e,t)})),e("getOwnMetadataKeys",(function(e,t){if(!T(e))throw new TypeError;return S(t)||(t=I(t)),b(e,t)})),e("deleteMetadata",(function(e,t,a){if(!T(t))throw new TypeError;S(a)||(a=I(a));var n=c(t,a,!1);if(S(n))return!1;if(!n.delete(e))return!1;if(n.size>0)return!0;var r=u.get(t);return r.delete(a),r.size>0||u.delete(t),!0}))}(a)}()}(e||(e={}))},673:(e,t,a)=>{"use strict";var n=a(876),r=a(472),i={TRANSITIONAL:0,NONTRANSITIONAL:1};function o(e){return e.split("\0").map((function(e){return e.normalize("NFC")})).join("\0")}function p(e){for(var t=0,a=r.length-1;t<=a;){var n=Math.floor((t+a)/2),i=r[n];if(i[0][0]<=e&&i[0][1]>=e)return i;i[0][0]>e?a=n-1:t=n+1}return null}var s=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g;function d(e){return e.replace(s,"_").length}var l=/[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u192B\u1930-\u193B\u19B0-\u19C0\u19C8\u19C9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFC-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2D]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC7F-\uDC82\uDCB0-\uDCBA\uDD00-\uDD02\uDD27-\uDD34\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDE2C-\uDE37\uDEDF-\uDEEA\uDF01-\uDF03\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDCB0-\uDCC3\uDDAF-\uDDB5\uDDB8-\uDDC0\uDE30-\uDE40\uDEAB-\uDEB7]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD83A[\uDCD0-\uDCD6]|\uDB40[\uDD00-\uDDEF]/;function _(e,t){"xn--"===e.substr(0,4)&&(e=n.toUnicode(e),i.NONTRANSITIONAL);var a=!1;(o(e)!==e||"-"===e[3]&&"-"===e[4]||"-"===e[0]||"-"===e[e.length-1]||-1!==e.indexOf(".")||0===e.search(l))&&(a=!0);for(var r=d(e),s=0;s<r;++s){var _=p(e.codePointAt(s));if(m===i.TRANSITIONAL&&"valid"!==_[1]||m===i.NONTRANSITIONAL&&"valid"!==_[1]&&"deviation"!==_[1]){a=!0;break}}return{label:e,error:a}}function m(e,t,a){var n=function(e,t,a){for(var n=!1,r="",o=d(e),s=0;s<o;++s){var l=e.codePointAt(s),_=p(l);switch(_[1]){case"disallowed":n=!0,r+=String.fromCodePoint(l);break;case"ignored":break;case"mapped":r+=String.fromCodePoint.apply(String,_[2]);break;case"deviation":a===i.TRANSITIONAL?r+=String.fromCodePoint.apply(String,_[2]):r+=String.fromCodePoint(l);break;case"valid":r+=String.fromCodePoint(l);break;case"disallowed_STD3_mapped":t?(n=!0,r+=String.fromCodePoint(l)):r+=String.fromCodePoint.apply(String,_[2]);break;case"disallowed_STD3_valid":t&&(n=!0),r+=String.fromCodePoint(l)}}return{string:r,error:n}}(e,t,a);n.string=o(n.string);for(var r=n.string.split("."),s=0;s<r.length;++s)try{var l=_(r[s]);r[s]=l.label,n.error=n.error||l.error}catch(e){n.error=!0}return{string:r.join("."),error:n.error}}e.exports.toASCII=function(e,t,a,r){var i=m(e,t,a),o=i.string.split(".");if(o=o.map((function(e){try{return n.toASCII(e)}catch(t){return i.error=!0,e}})),r){var p=o.slice(0,o.length-1).join(".").length;(p.length>253||0===p.length)&&(i.error=!0);for(var s=0;s<o.length;++s)if(o.length>63||0===o.length){i.error=!0;break}}return i.error?null:o.join(".")},e.exports.toUnicode=function(e,t){var a=m(e,t,i.NONTRANSITIONAL);return{domain:a.string,error:a.error}},e.exports.PROCESSING_OPTIONS=i},915:(e,t,a)=>{"use strict";a.d(t,{O:()=>o});var n=a(461),r=function(e,t,a,n){var r,i=arguments.length,o=i<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,a,n);else for(var p=e.length-1;p>=0;p--)(r=e[p])&&(o=(i<3?r(o):i>3?r(t,a,o):r(t,a))||o);return i>3&&o&&Object.defineProperty(t,a,o),o},i=function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};class o extends n.iS{constructor(){super(...arguments),this.num=(0,n.Uw)()}init(){super.init(),this.num.set((0,n.D0)(1))}async update(){const e=this.num.getAndRequireEquals().add(2);this.num.set(e)}}r([(0,n.wk)(n.D0),i("design:type",Object)],o.prototype,"num",void 0),r([n.EJ,i("design:type",Function),i("design:paramtypes",[]),i("design:returntype",Promise)],o.prototype,"update",null)},148:(e,t,a)=>{"use strict";a.a(e,(async(e,t)=>{try{var n=a(461),r=a(915);let e=n.ZD.fromBase58("EKEXnEq52gL3aQDZ9W6gk8CcGTxViHhaG2MjrigUq9HrDQ2C2JNh"),i=n.ZD.fromBase58("EKDoyF5QvUPZsdHXdGHWVgWzoeCtVJ1KEbLNM9ZUHondnHi1f76h");const o=n.Jz.Network({networkId:"testnet",mina:"https://api.minascan.io/node/devnet/v1/graphql"}),p=1e9*Number(.1);n.Jz.setActiveInstance(o);let s=e.toPublicKey(),d=i.toPublicKey(),l=new r.O(d);console.log("compile the contract..."),await r.O.compile();try{console.log("build transaction and create proof...");let t=await n.Jz.transaction({sender:s,fee:p},(async()=>{await l.update()}));await t.prove(),console.log("send transaction..."),"pending"===(await t.sign([e]).send()).status&&console.log("pending.....")}catch(e){console.log(e)}t()}catch(e){t(e)}}),1)},616:e=>{"use strict";var t={};function a(e){return e<0?-1:1}function n(e,t){t.unsigned||--e;const n=t.unsigned?0:-Math.pow(2,e),r=Math.pow(2,e)-1,i=t.moduloBitLength?Math.pow(2,t.moduloBitLength):Math.pow(2,e),o=t.moduloBitLength?Math.pow(2,t.moduloBitLength-1):Math.pow(2,e-1);return function(e,p){p||(p={});let s=+e;if(p.enforceRange){if(!Number.isFinite(s))throw new TypeError("Argument is not a finite number");if(s=a(s)*Math.floor(Math.abs(s)),s<n||s>r)throw new TypeError("Argument is not in byte range");return s}if(!isNaN(s)&&p.clamp)return s=function(e){return e%1!=.5||1&e?Math.round(e):Math.floor(e)}(s),s<n&&(s=n),s>r&&(s=r),s;if(!Number.isFinite(s)||0===s)return 0;if(s=a(s)*Math.floor(Math.abs(s)),s%=i,!t.unsigned&&s>=o)return s-i;if(t.unsigned)if(s<0)s+=i;else if(-0===s)return 0;return s}}e.exports=t,t.void=function(){},t.boolean=function(e){return!!e},t.byte=n(8,{unsigned:!1}),t.octet=n(8,{unsigned:!0}),t.short=n(16,{unsigned:!1}),t["unsigned short"]=n(16,{unsigned:!0}),t.long=n(32,{unsigned:!1}),t["unsigned long"]=n(32,{unsigned:!0}),t["long long"]=n(32,{unsigned:!1,moduloBitLength:64}),t["unsigned long long"]=n(32,{unsigned:!0,moduloBitLength:64}),t.double=function(e){const t=+e;if(!Number.isFinite(t))throw new TypeError("Argument is not a finite floating-point value");return t},t["unrestricted double"]=function(e){const t=+e;if(isNaN(t))throw new TypeError("Argument is NaN");return t},t.float=t.double,t["unrestricted float"]=t["unrestricted double"],t.DOMString=function(e,t){return t||(t={}),t.treatNullAsEmptyString&&null===e?"":String(e)},t.ByteString=function(e,t){const a=String(e);let n;for(let e=0;void 0!==(n=a.codePointAt(e));++e)if(n>255)throw new TypeError("Argument is not a valid bytestring");return a},t.USVString=function(e){const t=String(e),a=t.length,n=[];for(let e=0;e<a;++e){const r=t.charCodeAt(e);if(r<55296||r>57343)n.push(String.fromCodePoint(r));else if(56320<=r&&r<=57343)n.push(String.fromCodePoint(65533));else if(e===a-1)n.push(String.fromCodePoint(65533));else{const a=t.charCodeAt(e+1);if(56320<=a&&a<=57343){const t=1023&r,i=1023&a;n.push(String.fromCodePoint(65536+1024*t+i)),++e}else n.push(String.fromCodePoint(65533))}}return n.join("")},t.Date=function(e,t){if(!(e instanceof Date))throw new TypeError("Argument is not a Date object");if(!isNaN(e))return e},t.RegExp=function(e,t){return e instanceof RegExp||(e=new RegExp(e)),e}},79:(e,t,a)=>{"use strict";const n=a(484);t.implementation=class{constructor(e){const t=e[0],a=e[1];let r=null;if(void 0!==a&&(r=n.basicURLParse(a),"failure"===r))throw new TypeError("Invalid base URL");const i=n.basicURLParse(t,{baseURL:r});if("failure"===i)throw new TypeError("Invalid URL");this._url=i}get href(){return n.serializeURL(this._url)}set href(e){const t=n.basicURLParse(e);if("failure"===t)throw new TypeError("Invalid URL");this._url=t}get origin(){return n.serializeURLOrigin(this._url)}get protocol(){return this._url.scheme+":"}set protocol(e){n.basicURLParse(e+":",{url:this._url,stateOverride:"scheme start"})}get username(){return this._url.username}set username(e){n.cannotHaveAUsernamePasswordPort(this._url)||n.setTheUsername(this._url,e)}get password(){return this._url.password}set password(e){n.cannotHaveAUsernamePasswordPort(this._url)||n.setThePassword(this._url,e)}get host(){const e=this._url;return null===e.host?"":null===e.port?n.serializeHost(e.host):n.serializeHost(e.host)+":"+n.serializeInteger(e.port)}set host(e){this._url.cannotBeABaseURL||n.basicURLParse(e,{url:this._url,stateOverride:"host"})}get hostname(){return null===this._url.host?"":n.serializeHost(this._url.host)}set hostname(e){this._url.cannotBeABaseURL||n.basicURLParse(e,{url:this._url,stateOverride:"hostname"})}get port(){return null===this._url.port?"":n.serializeInteger(this._url.port)}set port(e){n.cannotHaveAUsernamePasswordPort(this._url)||(""===e?this._url.port=null:n.basicURLParse(e,{url:this._url,stateOverride:"port"}))}get pathname(){return this._url.cannotBeABaseURL?this._url.path[0]:0===this._url.path.length?"":"/"+this._url.path.join("/")}set pathname(e){this._url.cannotBeABaseURL||(this._url.path=[],n.basicURLParse(e,{url:this._url,stateOverride:"path start"}))}get search(){return null===this._url.query||""===this._url.query?"":"?"+this._url.query}set search(e){const t=this._url;if(""===e)return void(t.query=null);const a="?"===e[0]?e.substring(1):e;t.query="",n.basicURLParse(a,{url:t,stateOverride:"query"})}get hash(){return null===this._url.fragment||""===this._url.fragment?"":"#"+this._url.fragment}set hash(e){if(""===e)return void(this._url.fragment=null);const t="#"===e[0]?e.substring(1):e;this._url.fragment="",n.basicURLParse(t,{url:this._url,stateOverride:"fragment"})}toJSON(){return this.href}}},648:(e,t,a)=>{"use strict";const n=a(616),r=a(892),i=a(79),o=r.implSymbol;function p(t){if(!this||this[o]||!(this instanceof p))throw new TypeError("Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.");if(arguments.length<1)throw new TypeError("Failed to construct 'URL': 1 argument required, but only "+arguments.length+" present.");const a=[];for(let e=0;e<arguments.length&&e<2;++e)a[e]=arguments[e];a[0]=n.USVString(a[0]),void 0!==a[1]&&(a[1]=n.USVString(a[1])),e.exports.setup(this,a)}p.prototype.toJSON=function(){if(!this||!e.exports.is(this))throw new TypeError("Illegal invocation");const t=[];for(let e=0;e<arguments.length&&e<0;++e)t[e]=arguments[e];return this[o].toJSON.apply(this[o],t)},Object.defineProperty(p.prototype,"href",{get(){return this[o].href},set(e){e=n.USVString(e),this[o].href=e},enumerable:!0,configurable:!0}),p.prototype.toString=function(){if(!this||!e.exports.is(this))throw new TypeError("Illegal invocation");return this.href},Object.defineProperty(p.prototype,"origin",{get(){return this[o].origin},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"protocol",{get(){return this[o].protocol},set(e){e=n.USVString(e),this[o].protocol=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"username",{get(){return this[o].username},set(e){e=n.USVString(e),this[o].username=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"password",{get(){return this[o].password},set(e){e=n.USVString(e),this[o].password=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"host",{get(){return this[o].host},set(e){e=n.USVString(e),this[o].host=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"hostname",{get(){return this[o].hostname},set(e){e=n.USVString(e),this[o].hostname=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"port",{get(){return this[o].port},set(e){e=n.USVString(e),this[o].port=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"pathname",{get(){return this[o].pathname},set(e){e=n.USVString(e),this[o].pathname=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"search",{get(){return this[o].search},set(e){e=n.USVString(e),this[o].search=e},enumerable:!0,configurable:!0}),Object.defineProperty(p.prototype,"hash",{get(){return this[o].hash},set(e){e=n.USVString(e),this[o].hash=e},enumerable:!0,configurable:!0}),e.exports={is:e=>!!e&&e[o]instanceof i.implementation,create(e,t){let a=Object.create(p.prototype);return this.setup(a,e,t),a},setup(e,t,a){a||(a={}),a.wrapper=e,e[o]=new i.implementation(t,a),e[o][r.wrapperSymbol]=e},interface:p,expose:{Window:{URL:p},Worker:{URL:p}}}},417:(e,t,a)=>{"use strict";t.URL=a(648).interface,a(484).serializeURL,a(484).serializeURLOrigin,a(484).basicURLParse,a(484).setTheUsername,a(484).setThePassword,a(484).serializeHost,a(484).serializeInteger,a(484).parseURL},484:(e,t,a)=>{"use strict";const n=a(876),r=a(673),i={ftp:21,file:null,gopher:70,http:80,https:443,ws:80,wss:443},o=Symbol("failure");function p(e){return n.ucs2.decode(e).length}function s(e,t){const a=e[t];return isNaN(a)?void 0:String.fromCodePoint(a)}function d(e){return e>=48&&e<=57}function l(e){return e>=65&&e<=90||e>=97&&e<=122}function _(e){return d(e)||e>=65&&e<=70||e>=97&&e<=102}function m(e){return"."===e||"%2e"===e.toLowerCase()}function u(e){return 2===e.length&&l(e.codePointAt(0))&&(":"===e[1]||"|"===e[1])}function c(e){return void 0!==i[e]}function f(e){return c(e.scheme)}function h(e){let t=e.toString(16).toUpperCase();return 1===t.length&&(t="0"+t),"%"+t}function g(e){return e<=31||e>126}const w=new Set([32,34,35,60,62,63,96,123,125]);function v(e){return g(e)||w.has(e)}const y=new Set([47,58,59,61,64,91,92,93,94,124]);function b(e){return v(e)||y.has(e)}function k(e,t){const a=String.fromCodePoint(e);return t(e)?function(e){const t=new Buffer(e);let a="";for(let e=0;e<t.length;++e)a+=h(t[e]);return a}(a):a}function S(e){let t=10;return e.length>=2&&"0"===e.charAt(0)&&"x"===e.charAt(1).toLowerCase()?(e=e.substring(2),t=16):e.length>=2&&"0"===e.charAt(0)&&(e=e.substring(1),t=8),""===e?0:(10===t?/[^0-9]/:16===t?/[^0-9A-Fa-f]/:/[^0-7]/).test(e)?o:parseInt(e,t)}function x(e,t){if("["===e[0])return"]"!==e[e.length-1]?o:function(e){const t=[0,0,0,0,0,0,0,0];let a=0,r=null,i=0;if(58===(e=n.ucs2.decode(e))[i]){if(58!==e[i+1])return o;i+=2,++a,r=a}for(;i<e.length;){if(8===a)return o;if(58===e[i]){if(null!==r)return o;++i,++a,r=a;continue}let n=0,p=0;for(;p<4&&_(e[i]);)n=16*n+parseInt(s(e,i),16),++i,++p;if(46===e[i]){if(0===p)return o;if(i-=p,a>6)return o;let n=0;for(;void 0!==e[i];){let r=null;if(n>0){if(!(46===e[i]&&n<4))return o;++i}if(!d(e[i]))return o;for(;d(e[i]);){const t=parseInt(s(e,i));if(null===r)r=t;else{if(0===r)return o;r=10*r+t}if(r>255)return o;++i}t[a]=256*t[a]+r,++n,2!==n&&4!==n||++a}if(4!==n)return o;break}if(58===e[i]){if(++i,void 0===e[i])return o}else if(void 0!==e[i])return o;t[a]=n,++a}if(null!==r){let e=a-r;for(a=7;0!==a&&e>0;){const n=t[r+e-1];t[r+e-1]=t[a],t[a]=n,--a,--e}}else if(null===r&&8!==a)return o;return t}(e.substring(1,e.length-1));if(!t)return function(e){if(-1!==e.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/))return o;let t="";const a=n.ucs2.decode(e);for(let e=0;e<a.length;++e)t+=k(a[e],g);return t}(e);const a=function(e){const t=new Buffer(e),a=[];for(let e=0;e<t.length;++e)37!==t[e]?a.push(t[e]):37===t[e]&&_(t[e+1])&&_(t[e+2])?(a.push(parseInt(t.slice(e+1,e+3).toString(),16)),e+=2):a.push(t[e]);return new Buffer(a).toString()}(e),i=r.toASCII(a,!1,r.PROCESSING_OPTIONS.NONTRANSITIONAL,!1);if(null===i)return o;if(-1!==i.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/))return o;const p=function(e){const t=e.split(".");if(""===t[t.length-1]&&t.length>1&&t.pop(),t.length>4)return e;const a=[];for(const n of t){if(""===n)return e;const t=S(n);if(t===o)return e;a.push(t)}for(let e=0;e<a.length-1;++e)if(a[e]>255)return o;if(a[a.length-1]>=Math.pow(256,5-a.length))return o;let n=a.pop(),r=0;for(const e of a)n+=e*Math.pow(256,3-r),++r;return n}(i);return"number"==typeof p||p===o?p:i}function T(e){return"number"==typeof e?function(e){let t="",a=e;for(let e=1;e<=4;++e)t=String(a%256)+t,4!==e&&(t="."+t),a=Math.floor(a/256);return t}(e):e instanceof Array?"["+function(e){let t="";const a=function(e){let t=null,a=1,n=null,r=0;for(let i=0;i<e.length;++i)0!==e[i]?(r>a&&(t=n,a=r),n=null,r=0):(null===n&&(n=i),++r);return r>a&&(t=n,a=r),{idx:t,len:a}}(e).idx;let n=!1;for(let r=0;r<=7;++r)n&&0===e[r]||(n&&(n=!1),a!==r?(t+=e[r].toString(16),7!==r&&(t+=":")):(t+=0===r?"::":":",n=!0));return t}(e)+"]":e}function E(e){const t=e.path;var a;0!==t.length&&("file"===e.scheme&&1===t.length&&(a=t[0],/^[A-Za-z]:$/.test(a))||t.pop())}function I(e){return""!==e.username||""!==e.password}function N(e,t,a,r,i){if(this.pointer=0,this.input=e,this.base=t||null,this.encodingOverride=a||"utf-8",this.stateOverride=i,this.url=r,this.failure=!1,this.parseError=!1,!this.url){this.url={scheme:"",username:"",password:"",host:null,port:null,path:[],query:null,fragment:null,cannotBeABaseURL:!1};const e=function(e){return e.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g,"")}(this.input);e!==this.input&&(this.parseError=!0),this.input=e}const p=function(e){return e.replace(/\u0009|\u000A|\u000D/g,"")}(this.input);for(p!==this.input&&(this.parseError=!0),this.input=p,this.state=i||"scheme start",this.buffer="",this.atFlag=!1,this.arrFlag=!1,this.passwordTokenSeenFlag=!1,this.input=n.ucs2.decode(this.input);this.pointer<=this.input.length;++this.pointer){const e=this.input[this.pointer],t=isNaN(e)?void 0:String.fromCodePoint(e),a=this["parse "+this.state](e,t);if(!a)break;if(a===o){this.failure=!0;break}}}N.prototype["parse scheme start"]=function(e,t){if(l(e))this.buffer+=t.toLowerCase(),this.state="scheme";else{if(this.stateOverride)return this.parseError=!0,o;this.state="no scheme",--this.pointer}return!0},N.prototype["parse scheme"]=function(e,t){if(function(e){return l(e)||d(e)}(e)||43===e||45===e||46===e)this.buffer+=t.toLowerCase();else if(58===e){if(this.stateOverride){if(f(this.url)&&!c(this.buffer))return!1;if(!f(this.url)&&c(this.buffer))return!1;if((I(this.url)||null!==this.url.port)&&"file"===this.buffer)return!1;if("file"===this.url.scheme&&(""===this.url.host||null===this.url.host))return!1}if(this.url.scheme=this.buffer,this.buffer="",this.stateOverride)return!1;"file"===this.url.scheme?(47===this.input[this.pointer+1]&&47===this.input[this.pointer+2]||(this.parseError=!0),this.state="file"):f(this.url)&&null!==this.base&&this.base.scheme===this.url.scheme?this.state="special relative or authority":f(this.url)?this.state="special authority slashes":47===this.input[this.pointer+1]?(this.state="path or authority",++this.pointer):(this.url.cannotBeABaseURL=!0,this.url.path.push(""),this.state="cannot-be-a-base-URL path")}else{if(this.stateOverride)return this.parseError=!0,o;this.buffer="",this.state="no scheme",this.pointer=-1}return!0},N.prototype["parse no scheme"]=function(e){return null===this.base||this.base.cannotBeABaseURL&&35!==e?o:(this.base.cannotBeABaseURL&&35===e?(this.url.scheme=this.base.scheme,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.url.cannotBeABaseURL=!0,this.state="fragment"):"file"===this.base.scheme?(this.state="file",--this.pointer):(this.state="relative",--this.pointer),!0)},N.prototype["parse special relative or authority"]=function(e){return 47===e&&47===this.input[this.pointer+1]?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="relative",--this.pointer),!0},N.prototype["parse path or authority"]=function(e){return 47===e?this.state="authority":(this.state="path",--this.pointer),!0},N.prototype["parse relative"]=function(e){return this.url.scheme=this.base.scheme,isNaN(e)?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query):47===e?this.state="relative slash":63===e?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query="",this.state="query"):35===e?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment"):f(this.url)&&92===e?(this.parseError=!0,this.state="relative slash"):(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(0,this.base.path.length-1),this.state="path",--this.pointer),!0},N.prototype["parse relative slash"]=function(e){return!f(this.url)||47!==e&&92!==e?47===e?this.state="authority":(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.state="path",--this.pointer):(92===e&&(this.parseError=!0),this.state="special authority ignore slashes"),!0},N.prototype["parse special authority slashes"]=function(e){return 47===e&&47===this.input[this.pointer+1]?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="special authority ignore slashes",--this.pointer),!0},N.prototype["parse special authority ignore slashes"]=function(e){return 47!==e&&92!==e?(this.state="authority",--this.pointer):this.parseError=!0,!0},N.prototype["parse authority"]=function(e,t){if(64===e){this.parseError=!0,this.atFlag&&(this.buffer="%40"+this.buffer),this.atFlag=!0;const e=p(this.buffer);for(let t=0;t<e;++t){const e=this.buffer.codePointAt(t);if(58===e&&!this.passwordTokenSeenFlag){this.passwordTokenSeenFlag=!0;continue}const a=k(e,b);this.passwordTokenSeenFlag?this.url.password+=a:this.url.username+=a}this.buffer=""}else if(isNaN(e)||47===e||63===e||35===e||f(this.url)&&92===e){if(this.atFlag&&""===this.buffer)return this.parseError=!0,o;this.pointer-=p(this.buffer)+1,this.buffer="",this.state="host"}else this.buffer+=t;return!0},N.prototype["parse hostname"]=N.prototype["parse host"]=function(e,t){if(this.stateOverride&&"file"===this.url.scheme)--this.pointer,this.state="file host";else if(58!==e||this.arrFlag)if(isNaN(e)||47===e||63===e||35===e||f(this.url)&&92===e){if(--this.pointer,f(this.url)&&""===this.buffer)return this.parseError=!0,o;if(this.stateOverride&&""===this.buffer&&(I(this.url)||null!==this.url.port))return this.parseError=!0,!1;const e=x(this.buffer,f(this.url));if(e===o)return o;if(this.url.host=e,this.buffer="",this.state="path start",this.stateOverride)return!1}else 91===e?this.arrFlag=!0:93===e&&(this.arrFlag=!1),this.buffer+=t;else{if(""===this.buffer)return this.parseError=!0,o;const e=x(this.buffer,f(this.url));if(e===o)return o;if(this.url.host=e,this.buffer="",this.state="port","hostname"===this.stateOverride)return!1}return!0},N.prototype["parse port"]=function(e,t){if(d(e))this.buffer+=t;else{if(!(isNaN(e)||47===e||63===e||35===e||f(this.url)&&92===e||this.stateOverride))return this.parseError=!0,o;if(""!==this.buffer){const e=parseInt(this.buffer);if(e>Math.pow(2,16)-1)return this.parseError=!0,o;this.url.port=e===(a=this.url.scheme,i[a])?null:e,this.buffer=""}if(this.stateOverride)return!1;this.state="path start",--this.pointer}var a;return!0};const C=new Set([47,92,63,35]);N.prototype["parse file"]=function(e){var t,a;return this.url.scheme="file",47===e||92===e?(92===e&&(this.parseError=!0),this.state="file slash"):null!==this.base&&"file"===this.base.scheme?isNaN(e)?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query):63===e?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query="",this.state="query"):35===e?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment"):(this.input.length-this.pointer-1==0||(t=e,a=this.input[this.pointer+1],!l(t)||58!==a&&124!==a)||this.input.length-this.pointer-1>=2&&!C.has(this.input[this.pointer+2])?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),E(this.url)):this.parseError=!0,this.state="path",--this.pointer):(this.state="path",--this.pointer),!0},N.prototype["parse file slash"]=function(e){var t;return 47===e||92===e?(92===e&&(this.parseError=!0),this.state="file host"):(null!==this.base&&"file"===this.base.scheme&&(2===(t=this.base.path[0]).length&&l(t.codePointAt(0))&&":"===t[1]?this.url.path.push(this.base.path[0]):this.url.host=this.base.host),this.state="path",--this.pointer),!0},N.prototype["parse file host"]=function(e,t){if(isNaN(e)||47===e||92===e||63===e||35===e)if(--this.pointer,!this.stateOverride&&u(this.buffer))this.parseError=!0,this.state="path";else if(""===this.buffer){if(this.url.host="",this.stateOverride)return!1;this.state="path start"}else{let e=x(this.buffer,f(this.url));if(e===o)return o;if("localhost"===e&&(e=""),this.url.host=e,this.stateOverride)return!1;this.buffer="",this.state="path start"}else this.buffer+=t;return!0},N.prototype["parse path start"]=function(e){return f(this.url)?(92===e&&(this.parseError=!0),this.state="path",47!==e&&92!==e&&--this.pointer):this.stateOverride||63!==e?this.stateOverride||35!==e?void 0!==e&&(this.state="path",47!==e&&--this.pointer):(this.url.fragment="",this.state="fragment"):(this.url.query="",this.state="query"),!0},N.prototype["parse path"]=function(e){if(isNaN(e)||47===e||f(this.url)&&92===e||!this.stateOverride&&(63===e||35===e)){if(f(this.url)&&92===e&&(this.parseError=!0),".."===(t=(t=this.buffer).toLowerCase())||"%2e."===t||".%2e"===t||"%2e%2e"===t?(E(this.url),47===e||f(this.url)&&92===e||this.url.path.push("")):!m(this.buffer)||47===e||f(this.url)&&92===e?m(this.buffer)||("file"===this.url.scheme&&0===this.url.path.length&&u(this.buffer)&&(""!==this.url.host&&null!==this.url.host&&(this.parseError=!0,this.url.host=""),this.buffer=this.buffer[0]+":"),this.url.path.push(this.buffer)):this.url.path.push(""),this.buffer="","file"===this.url.scheme&&(void 0===e||63===e||35===e))for(;this.url.path.length>1&&""===this.url.path[0];)this.parseError=!0,this.url.path.shift();63===e&&(this.url.query="",this.state="query"),35===e&&(this.url.fragment="",this.state="fragment")}else 37!==e||_(this.input[this.pointer+1])&&_(this.input[this.pointer+2])||(this.parseError=!0),this.buffer+=k(e,v);var t;return!0},N.prototype["parse cannot-be-a-base-URL path"]=function(e){return 63===e?(this.url.query="",this.state="query"):35===e?(this.url.fragment="",this.state="fragment"):(isNaN(e)||37===e||(this.parseError=!0),37!==e||_(this.input[this.pointer+1])&&_(this.input[this.pointer+2])||(this.parseError=!0),isNaN(e)||(this.url.path[0]=this.url.path[0]+k(e,g))),!0},N.prototype["parse query"]=function(e,t){if(isNaN(e)||!this.stateOverride&&35===e){f(this.url)&&"ws"!==this.url.scheme&&"wss"!==this.url.scheme||(this.encodingOverride="utf-8");const t=new Buffer(this.buffer);for(let e=0;e<t.length;++e)t[e]<33||t[e]>126||34===t[e]||35===t[e]||60===t[e]||62===t[e]?this.url.query+=h(t[e]):this.url.query+=String.fromCodePoint(t[e]);this.buffer="",35===e&&(this.url.fragment="",this.state="fragment")}else 37!==e||_(this.input[this.pointer+1])&&_(this.input[this.pointer+2])||(this.parseError=!0),this.buffer+=t;return!0},N.prototype["parse fragment"]=function(e){return isNaN(e)||(0===e?this.parseError=!0:(37!==e||_(this.input[this.pointer+1])&&_(this.input[this.pointer+2])||(this.parseError=!0),this.url.fragment+=k(e,g))),!0},e.exports.serializeURL=function(e,t){let a=e.scheme+":";if(null!==e.host?(a+="//",""===e.username&&""===e.password||(a+=e.username,""!==e.password&&(a+=":"+e.password),a+="@"),a+=T(e.host),null!==e.port&&(a+=":"+e.port)):null===e.host&&"file"===e.scheme&&(a+="//"),e.cannotBeABaseURL)a+=e.path[0];else for(const t of e.path)a+="/"+t;return null!==e.query&&(a+="?"+e.query),t||null===e.fragment||(a+="#"+e.fragment),a},e.exports.serializeURLOrigin=function(t){switch(t.scheme){case"blob":try{return e.exports.serializeURLOrigin(e.exports.parseURL(t.path[0]))}catch(e){return"null"}case"ftp":case"gopher":case"http":case"https":case"ws":case"wss":return function(e){let t=e.scheme+"://";return t+=T(e.host),null!==e.port&&(t+=":"+e.port),t}({scheme:t.scheme,host:t.host,port:t.port});case"file":return"file://";default:return"null"}},e.exports.basicURLParse=function(e,t){void 0===t&&(t={});const a=new N(e,t.baseURL,t.encodingOverride,t.url,t.stateOverride);return a.failure?"failure":a.url},e.exports.setTheUsername=function(e,t){e.username="";const a=n.ucs2.decode(t);for(let t=0;t<a.length;++t)e.username+=k(a[t],b)},e.exports.setThePassword=function(e,t){e.password="";const a=n.ucs2.decode(t);for(let t=0;t<a.length;++t)e.password+=k(a[t],b)},e.exports.serializeHost=T,e.exports.cannotHaveAUsernamePasswordPort=function(e){return null===e.host||""===e.host||e.cannotBeABaseURL||"file"===e.scheme},e.exports.serializeInteger=function(e){return String(e)},e.exports.parseURL=function(t,a){return void 0===a&&(a={}),e.exports.basicURLParse(t,{baseURL:a.baseURL,encodingOverride:a.encodingOverride})}},892:e=>{"use strict";e.exports.mixin=function(e,t){const a=Object.getOwnPropertyNames(t);for(let n=0;n<a.length;++n)Object.defineProperty(e,a[n],Object.getOwnPropertyDescriptor(t,a[n]))},e.exports.wrapperSymbol=Symbol("wrapper"),e.exports.implSymbol=Symbol("impl"),e.exports.wrapperForImpl=function(t){return t[e.exports.wrapperSymbol]},e.exports.implForWrapper=function(t){return t[e.exports.implSymbol]}},317:e=>{"use strict";e.exports=require("child_process")},140:e=>{"use strict";e.exports=require("constants")},896:e=>{"use strict";e.exports=require("fs")},857:e=>{"use strict";e.exports=require("os")},928:e=>{"use strict";e.exports=require("path")},876:e=>{"use strict";e.exports=require("punycode")},16:e=>{"use strict";e.exports=require("url")},23:e=>{"use strict";e.exports=require("util")},167:e=>{"use strict";e.exports=require("worker_threads")},451:(e,t,a)=>{e=a.nmd(e);let n={};n.__wbindgen_placeholder__=e.exports;let r,{isMainThread:i,workerData:o}=a(167),p={};p.memory=i?new WebAssembly.Memory({initial:20,maximum:65536,shared:!0}):o.memory,n.env=p;const{TextDecoder:s,TextEncoder:d}=a(23),l=new Array(128).fill(void 0);function _(e){return l[e]}l.push(void 0,null,!0,!1);let m=l.length;function u(e){const t=_(e);return function(e){e<132||(l[e]=m,m=e)}(e),t}function c(e){m===l.length&&l.push(l.length+1);const t=m;return m=l[t],l[t]=e,t}let f=new s("utf-8",{ignoreBOM:!0,fatal:!0});f.decode();let h=null;function g(){return null!==h&&h.buffer===r.memory.buffer||(h=new Uint8Array(r.memory.buffer)),h}function w(e,t){return e>>>=0,f.decode(g().slice(e,e+t))}function v(e){const t=typeof e;if("number"==t||"boolean"==t||null==e)return`${e}`;if("string"==t)return`"${e}"`;if("symbol"==t){const t=e.description;return null==t?"Symbol":`Symbol(${t})`}if("function"==t){const t=e.name;return"string"==typeof t&&t.length>0?`Function(${t})`:"Function"}if(Array.isArray(e)){const t=e.length;let a="[";t>0&&(a+=v(e[0]));for(let n=1;n<t;n++)a+=", "+v(e[n]);return a+="]",a}const a=/\[object ([^\]]+)\]/.exec(toString.call(e));let n;if(!(a.length>1))return toString.call(e);if(n=a[1],"Object"==n)try{return"Object("+JSON.stringify(e)+")"}catch(e){return"Object"}return e instanceof Error?`${e.name}: ${e.message}\n${e.stack}`:n}let y=0,b=new d("utf-8");function k(e,t,a){if(void 0===a){const a=b.encode(e),n=t(a.length,1)>>>0;return g().subarray(n,n+a.length).set(a),y=a.length,n}let n=e.length,r=t(n,1)>>>0;const i=g();let o=0;for(;o<n;o++){const t=e.charCodeAt(o);if(t>127)break;i[r+o]=t}if(o!==n){0!==o&&(e=e.slice(o)),r=a(r,n,n=o+3*e.length,1)>>>0;const t=function(e,t){const a=b.encode(e);return t.set(a),{read:e.length,written:a.length}}(e,g().subarray(r+o,r+n));o+=t.written}return y=o,r}let S=null;function x(){return null!==S&&S.buffer===r.memory.buffer||(S=new Int32Array(r.memory.buffer)),S}function T(e,t){return e>>>=0,g().subarray(e/1,e/1+t)}function E(e,t){const a=t(1*e.length,1)>>>0;return g().set(e,a/1),y=e.length,a}function I(e){return null==e}function N(e,t){if(!(e instanceof t))throw new Error(`expected instance of ${t.name}`);return e.ptr}let C=null;function A(){return null!==C&&C.buffer===r.memory.buffer||(C=new Uint32Array(r.memory.buffer)),C}function B(e,t){const a=t(4*e.length,4)>>>0;return A().set(e,a/4),y=e.length,a}function F(e,t){return e>>>=0,A().subarray(e/4,e/4+t)}function q(e,t){try{return e.apply(this,t)}catch(e){r.__wbindgen_exn_store(c(e))}}e.exports.fq_oracles_create=function(e,t,a){try{const s=r.__wbindgen_add_to_stack_pointer(-16),d=B(e,r.__wbindgen_malloc),l=y;N(t,le);var n=t.__destroy_into_raw();N(a,ue);var i=a.__destroy_into_raw();r.fq_oracles_create(s,d,l,n,i);var o=x()[s/4+0],p=x()[s/4+1];if(x()[s/4+2])throw u(p);return se.__wrap(o)}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.fq_oracles_dummy=function(){const e=r.fq_oracles_dummy();return se.__wrap(e)},e.exports.fq_oracles_deep_copy=function(e){N(e,ue);var t=e.__destroy_into_raw();const a=r.fq_oracles_deep_copy(t);return ue.__wrap(a)},e.exports.caml_pasta_fp_plonk_proof_create=function(e,t,a,n,i){try{const d=r.__wbindgen_add_to_stack_pointer(-16);N(e,Se),N(t,Ne);var o=t.__destroy_into_raw();const l=B(a,r.__wbindgen_malloc),_=y,m=E(n,r.__wbindgen_malloc),c=y,f=B(i,r.__wbindgen_malloc),h=y;r.caml_pasta_fp_plonk_proof_create(d,e.__wbg_ptr,o,l,_,m,c,f,h);var p=x()[d/4+0],s=x()[d/4+1];if(x()[d/4+2])throw u(s);return X.__wrap(p)}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fp_plonk_proof_verify=function(e,t){N(e,J);var a=e.__destroy_into_raw();N(t,X);var n=t.__destroy_into_raw();return 0!==r.caml_pasta_fp_plonk_proof_verify(a,n)},e.exports.caml_pasta_fp_plonk_proof_batch_verify=function(e,t){const a=B(e,r.__wbindgen_malloc),n=y,i=B(t,r.__wbindgen_malloc),o=y;return 0!==r.caml_pasta_fp_plonk_proof_batch_verify(a,n,i,o)},e.exports.caml_pasta_fp_plonk_proof_dummy=function(){const e=r.caml_pasta_fp_plonk_proof_dummy();return X.__wrap(e)},e.exports.caml_pasta_fp_plonk_proof_deep_copy=function(e){N(e,X);var t=e.__destroy_into_raw();const a=r.caml_pasta_fp_plonk_proof_deep_copy(t);return X.__wrap(a)},e.exports.greet=function(e){const t=k(e,r.__wbindgen_malloc,r.__wbindgen_realloc),a=y;r.greet(t,a)},e.exports.console_log=function(e){const t=k(e,r.__wbindgen_malloc,r.__wbindgen_realloc),a=y;r.console_log(t,a)},e.exports.create_zero_u32_ptr=function(){return r.create_zero_u32_ptr()},e.exports.free_u32_ptr=function(e){r.free_u32_ptr(e)},e.exports.set_u32_ptr=function(e,t){r.set_u32_ptr(e,t)},e.exports.wait_until_non_zero=function(e){return r.wait_until_non_zero(e)>>>0},e.exports.caml_pasta_fp_plonk_gate_vector_create=function(){const e=r.caml_pasta_fp_plonk_gate_vector_create();return R.__wrap(e)},e.exports.caml_pasta_fp_plonk_gate_vector_add=function(e,t){N(e,R),N(t,z);var a=t.__destroy_into_raw();r.caml_pasta_fp_plonk_gate_vector_add(e.__wbg_ptr,a)},e.exports.caml_pasta_fp_plonk_gate_vector_get=function(e,t){N(e,R);const a=r.caml_pasta_fp_plonk_gate_vector_get(e.__wbg_ptr,t);return z.__wrap(a)},e.exports.caml_pasta_fp_plonk_gate_vector_len=function(e){return N(e,R),r.caml_pasta_fp_plonk_gate_vector_len(e.__wbg_ptr)>>>0},e.exports.caml_pasta_fp_plonk_gate_vector_wrap=function(e,t,a){N(e,R),N(t,qe);var n=t.__destroy_into_raw();N(a,qe);var i=a.__destroy_into_raw();r.caml_pasta_fp_plonk_gate_vector_wrap(e.__wbg_ptr,n,i)},e.exports.caml_pasta_fp_plonk_gate_vector_digest=function(e,t){try{const o=r.__wbindgen_add_to_stack_pointer(-16);N(t,R),r.caml_pasta_fp_plonk_gate_vector_digest(o,e,t.__wbg_ptr);var a=x()[o/4+0],n=x()[o/4+1],i=T(a,n).slice();return r.__wbindgen_free(a,1*n),i}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fp_plonk_circuit_serialize=function(e,t){let a,n;try{const p=r.__wbindgen_add_to_stack_pointer(-16);N(t,R),r.caml_pasta_fp_plonk_circuit_serialize(p,e,t.__wbg_ptr);var i=x()[p/4+0],o=x()[p/4+1];return a=i,n=o,w(i,o)}finally{r.__wbindgen_add_to_stack_pointer(16),r.__wbindgen_free(a,n,1)}},e.exports.caml_pasta_fq_plonk_gate_vector_create=function(){const e=r.caml_pasta_fp_plonk_gate_vector_create();return ne.__wrap(e)},e.exports.caml_pasta_fq_plonk_gate_vector_add=function(e,t){N(e,ne),N(t,ae);var a=t.__destroy_into_raw();r.caml_pasta_fp_plonk_gate_vector_add(e.__wbg_ptr,a)},e.exports.caml_pasta_fq_plonk_gate_vector_get=function(e,t){N(e,ne);const a=r.caml_pasta_fq_plonk_gate_vector_get(e.__wbg_ptr,t);return ae.__wrap(a)},e.exports.caml_pasta_fq_plonk_gate_vector_len=function(e){return N(e,ne),r.caml_pasta_fp_plonk_gate_vector_len(e.__wbg_ptr)>>>0},e.exports.caml_pasta_fq_plonk_gate_vector_wrap=function(e,t,a){N(e,ne),N(t,qe);var n=t.__destroy_into_raw();N(a,qe);var i=a.__destroy_into_raw();r.caml_pasta_fq_plonk_gate_vector_wrap(e.__wbg_ptr,n,i)},e.exports.caml_pasta_fq_plonk_gate_vector_digest=function(e,t){try{const o=r.__wbindgen_add_to_stack_pointer(-16);N(t,ne),r.caml_pasta_fq_plonk_gate_vector_digest(o,e,t.__wbg_ptr);var a=x()[o/4+0],n=x()[o/4+1],i=T(a,n).slice();return r.__wbindgen_free(a,1*n),i}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fq_plonk_circuit_serialize=function(e,t){let a,n;try{const p=r.__wbindgen_add_to_stack_pointer(-16);N(t,ne),r.caml_pasta_fq_plonk_circuit_serialize(p,e,t.__wbg_ptr);var i=x()[p/4+0],o=x()[p/4+1];return a=i,n=o,w(i,o)}finally{r.__wbindgen_add_to_stack_pointer(16),r.__wbindgen_free(a,n,1)}},e.exports.prover_to_json=function(e){let t,a;try{const o=r.__wbindgen_add_to_stack_pointer(-16);N(e,Se),r.prover_to_json(o,e.__wbg_ptr);var n=x()[o/4+0],i=x()[o/4+1];return t=n,a=i,w(n,i)}finally{r.__wbindgen_add_to_stack_pointer(16),r.__wbindgen_free(t,a,1)}},e.exports.caml_bigint_256_of_numeral=function(e,t,a){try{const p=r.__wbindgen_add_to_stack_pointer(-16),s=k(e,r.__wbindgen_malloc,r.__wbindgen_realloc),d=y;r.caml_bigint_256_of_numeral(p,s,d,t,a);var n=x()[p/4+0],i=x()[p/4+1],o=T(n,i).slice();return r.__wbindgen_free(n,1*i),o}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_bigint_256_of_decimal_string=function(e){try{const i=r.__wbindgen_add_to_stack_pointer(-16),o=k(e,r.__wbindgen_malloc,r.__wbindgen_realloc),p=y;r.caml_bigint_256_of_decimal_string(i,o,p);var t=x()[i/4+0],a=x()[i/4+1],n=T(t,a).slice();return r.__wbindgen_free(t,1*a),n}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_bigint_256_num_limbs=function(){return r.caml_bigint_256_num_limbs()},e.exports.caml_bigint_256_bytes_per_limb=function(){return r.caml_bigint_256_bytes_per_limb()},e.exports.caml_bigint_256_div=function(e,t){try{const o=r.__wbindgen_add_to_stack_pointer(-16),p=E(e,r.__wbindgen_malloc),s=y,d=E(t,r.__wbindgen_malloc),l=y;r.caml_bigint_256_div(o,p,s,d,l);var a=x()[o/4+0],n=x()[o/4+1],i=T(a,n).slice();return r.__wbindgen_free(a,1*n),i}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_bigint_256_compare=function(e,t){const a=E(e,r.__wbindgen_malloc),n=y,i=E(t,r.__wbindgen_malloc),o=y;return r.caml_bigint_256_compare(a,n,i,o)},e.exports.caml_bigint_256_print=function(e){const t=E(e,r.__wbindgen_malloc),a=y;r.caml_bigint_256_print(t,a)},e.exports.caml_bigint_256_to_string=function(e){let t,a;try{const o=r.__wbindgen_add_to_stack_pointer(-16),p=E(e,r.__wbindgen_malloc),s=y;r.caml_bigint_256_to_string(o,p,s);var n=x()[o/4+0],i=x()[o/4+1];return t=n,a=i,w(n,i)}finally{r.__wbindgen_add_to_stack_pointer(16),r.__wbindgen_free(t,a,1)}},e.exports.caml_bigint_256_test_bit=function(e,t){const a=E(e,r.__wbindgen_malloc),n=y;return 0!==r.caml_bigint_256_test_bit(a,n,t)},e.exports.caml_bigint_256_to_bytes=function(e){try{const i=r.__wbindgen_add_to_stack_pointer(-16),o=E(e,r.__wbindgen_malloc),p=y;r.caml_bigint_256_to_bytes(i,o,p);var t=x()[i/4+0],a=x()[i/4+1],n=T(t,a).slice();return r.__wbindgen_free(t,1*a),n}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_bigint_256_of_bytes=function(e){try{const i=r.__wbindgen_add_to_stack_pointer(-16),o=E(e,r.__wbindgen_malloc),p=y;r.caml_bigint_256_of_bytes(i,o,p);var t=x()[i/4+0],a=x()[i/4+1],n=T(t,a).slice();return r.__wbindgen_free(t,1*a),n}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_bigint_256_deep_copy=function(e){try{const i=r.__wbindgen_add_to_stack_pointer(-16),o=E(e,r.__wbindgen_malloc),p=y;r.caml_bigint_256_deep_copy(i,o,p);var t=x()[i/4+0],a=x()[i/4+1],n=T(t,a).slice();return r.__wbindgen_free(t,1*a),n}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_fp_srs_create=function(e){const t=r.caml_fp_srs_create(e);return ee.__wrap(t)},e.exports.caml_fp_srs_add_lagrange_basis=function(e,t){N(e,ee),r.caml_fp_srs_add_lagrange_basis(e.__wbg_ptr,t)},e.exports.caml_fp_srs_write=function(e,t,a){try{const i=r.__wbindgen_add_to_stack_pointer(-16);N(t,ee);const o=k(a,r.__wbindgen_malloc,r.__wbindgen_realloc),p=y;r.caml_fp_srs_write(i,I(e)?16777215:e?1:0,t.__wbg_ptr,o,p);var n=x()[i/4+0];if(x()[i/4+1])throw u(n)}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_fp_srs_read=function(e,t){try{const i=r.__wbindgen_add_to_stack_pointer(-16),o=k(t,r.__wbindgen_malloc,r.__wbindgen_realloc),p=y;r.caml_fp_srs_read(i,!I(e),I(e)?0:e,o,p);var a=x()[i/4+0],n=x()[i/4+1];if(x()[i/4+2])throw u(n);return 0===a?void 0:ee.__wrap(a)}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_fp_srs_lagrange_commitment=function(e,t,a){try{const o=r.__wbindgen_add_to_stack_pointer(-16);N(e,ee),r.caml_fp_srs_lagrange_commitment(o,e.__wbg_ptr,t,a);var n=x()[o/4+0],i=x()[o/4+1];if(x()[o/4+2])throw u(i);return W.__wrap(n)}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_fp_srs_commit_evaluations=function(e,t,a){try{const o=r.__wbindgen_add_to_stack_pointer(-16);N(e,ee);const p=E(a,r.__wbindgen_malloc),s=y;r.caml_fp_srs_commit_evaluations(o,e.__wbg_ptr,t,p,s);var n=x()[o/4+0],i=x()[o/4+1];if(x()[o/4+2])throw u(i);return W.__wrap(n)}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_fp_srs_b_poly_commitment=function(e,t){try{const i=r.__wbindgen_add_to_stack_pointer(-16);N(e,ee);const o=E(t,r.__wbindgen_malloc),p=y;r.caml_fp_srs_b_poly_commitment(i,e.__wbg_ptr,o,p);var a=x()[i/4+0],n=x()[i/4+1];if(x()[i/4+2])throw u(n);return W.__wrap(a)}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_fp_srs_batch_accumulator_check=function(e,t,a){N(e,ee);const n=B(t,r.__wbindgen_malloc),i=y,o=E(a,r.__wbindgen_malloc),p=y;return 0!==r.caml_fp_srs_batch_accumulator_check(e.__wbg_ptr,n,i,o,p)},e.exports.caml_fp_srs_batch_accumulator_generate=function(e,t,a){try{const p=r.__wbindgen_add_to_stack_pointer(-16);N(e,ee);const s=E(a,r.__wbindgen_malloc),d=y;r.caml_fp_srs_batch_accumulator_generate(p,e.__wbg_ptr,t,s,d);var n=x()[p/4+0],i=x()[p/4+1],o=F(n,i).slice();return r.__wbindgen_free(n,4*i),o}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_fp_srs_h=function(e){N(e,ee);const t=r.caml_fp_srs_h(e.__wbg_ptr);return ve.__wrap(t)},e.exports.caml_fp_srs_create_parallel=function(e){const t=r.caml_fp_srs_create_parallel(e);return ee.__wrap(t)},e.exports.caml_fp_srs_get=function(e){try{const i=r.__wbindgen_add_to_stack_pointer(-16);N(e,ee),r.caml_fp_srs_get(i,e.__wbg_ptr);var t=x()[i/4+0],a=x()[i/4+1],n=F(t,a).slice();return r.__wbindgen_free(t,4*a),n}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_fp_srs_set=function(e){const t=B(e,r.__wbindgen_malloc),a=y,n=r.caml_fp_srs_set(t,a);return ee.__wrap(n)},e.exports.caml_fp_srs_maybe_lagrange_commitment=function(e,t,a){N(e,ee);const n=r.caml_fp_srs_maybe_lagrange_commitment(e.__wbg_ptr,t,a);return 0===n?void 0:W.__wrap(n)},e.exports.caml_fp_srs_set_lagrange_basis=function(e,t,a){N(e,ee);const n=B(a,r.__wbindgen_malloc),i=y;r.caml_fp_srs_set_lagrange_basis(e.__wbg_ptr,t,n,i)},e.exports.caml_fp_srs_get_lagrange_basis=function(e,t){try{const o=r.__wbindgen_add_to_stack_pointer(-16);N(e,ee),r.caml_fp_srs_get_lagrange_basis(o,e.__wbg_ptr,t);var a=x()[o/4+0],n=x()[o/4+1],i=F(a,n).slice();return r.__wbindgen_free(a,4*n),i}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_fq_srs_create=function(e){const t=r.caml_fq_srs_create(e);return ge.__wrap(t)},e.exports.caml_fq_srs_add_lagrange_basis=function(e,t){N(e,ge),r.caml_fq_srs_add_lagrange_basis(e.__wbg_ptr,t)},e.exports.caml_fq_srs_write=function(e,t,a){try{const i=r.__wbindgen_add_to_stack_pointer(-16);N(t,ge);const o=k(a,r.__wbindgen_malloc,r.__wbindgen_realloc),p=y;r.caml_fp_srs_write(i,I(e)?16777215:e?1:0,t.__wbg_ptr,o,p);var n=x()[i/4+0];if(x()[i/4+1])throw u(n)}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_fq_srs_read=function(e,t){try{const i=r.__wbindgen_add_to_stack_pointer(-16),o=k(t,r.__wbindgen_malloc,r.__wbindgen_realloc),p=y;r.caml_fp_srs_read(i,!I(e),I(e)?0:e,o,p);var a=x()[i/4+0],n=x()[i/4+1];if(x()[i/4+2])throw u(n);return 0===a?void 0:ge.__wrap(a)}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_fq_srs_lagrange_commitment=function(e,t,a){try{const o=r.__wbindgen_add_to_stack_pointer(-16);N(e,ge),r.caml_fq_srs_lagrange_commitment(o,e.__wbg_ptr,t,a);var n=x()[o/4+0],i=x()[o/4+1];if(x()[o/4+2])throw u(i);return _e.__wrap(n)}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_fq_srs_commit_evaluations=function(e,t,a){try{const o=r.__wbindgen_add_to_stack_pointer(-16);N(e,ge);const p=E(a,r.__wbindgen_malloc),s=y;r.caml_fq_srs_commit_evaluations(o,e.__wbg_ptr,t,p,s);var n=x()[o/4+0],i=x()[o/4+1];if(x()[o/4+2])throw u(i);return _e.__wrap(n)}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_fq_srs_b_poly_commitment=function(e,t){try{const i=r.__wbindgen_add_to_stack_pointer(-16);N(e,ge);const o=E(t,r.__wbindgen_malloc),p=y;r.caml_fq_srs_b_poly_commitment(i,e.__wbg_ptr,o,p);var a=x()[i/4+0],n=x()[i/4+1];if(x()[i/4+2])throw u(n);return _e.__wrap(a)}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_fq_srs_batch_accumulator_check=function(e,t,a){N(e,ge);const n=B(t,r.__wbindgen_malloc),i=y,o=E(a,r.__wbindgen_malloc),p=y;return 0!==r.caml_fq_srs_batch_accumulator_check(e.__wbg_ptr,n,i,o,p)},e.exports.caml_fq_srs_batch_accumulator_generate=function(e,t,a){try{const p=r.__wbindgen_add_to_stack_pointer(-16);N(e,ge);const s=E(a,r.__wbindgen_malloc),d=y;r.caml_fq_srs_batch_accumulator_generate(p,e.__wbg_ptr,t,s,d);var n=x()[p/4+0],i=x()[p/4+1],o=F(n,i).slice();return r.__wbindgen_free(n,4*i),o}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_fq_srs_h=function(e){N(e,ge);const t=r.caml_fp_srs_h(e.__wbg_ptr);return we.__wrap(t)},e.exports.caml_fq_srs_create_parallel=function(e){const t=r.caml_fq_srs_create_parallel(e);return ge.__wrap(t)},e.exports.caml_fq_srs_get=function(e){try{const i=r.__wbindgen_add_to_stack_pointer(-16);N(e,ge),r.caml_fq_srs_get(i,e.__wbg_ptr);var t=x()[i/4+0],a=x()[i/4+1],n=F(t,a).slice();return r.__wbindgen_free(t,4*a),n}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_fq_srs_set=function(e){const t=B(e,r.__wbindgen_malloc),a=y,n=r.caml_fq_srs_set(t,a);return ge.__wrap(n)},e.exports.caml_fq_srs_maybe_lagrange_commitment=function(e,t,a){N(e,ge);const n=r.caml_fq_srs_maybe_lagrange_commitment(e.__wbg_ptr,t,a);return 0===n?void 0:_e.__wrap(n)},e.exports.caml_fq_srs_set_lagrange_basis=function(e,t,a){N(e,ge);const n=B(a,r.__wbindgen_malloc),i=y;r.caml_fq_srs_set_lagrange_basis(e.__wbg_ptr,t,n,i)},e.exports.caml_fq_srs_get_lagrange_basis=function(e,t){try{const o=r.__wbindgen_add_to_stack_pointer(-16);N(e,ge),r.caml_fq_srs_get_lagrange_basis(o,e.__wbg_ptr,t);var a=x()[o/4+0],n=x()[o/4+1],i=F(a,n).slice();return r.__wbindgen_free(a,4*n),i}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fp_plonk_index_create=function(e,t,a,n,i,o){try{const d=r.__wbindgen_add_to_stack_pointer(-16);N(e,R);const l=B(a,r.__wbindgen_malloc),_=y,m=B(n,r.__wbindgen_malloc),c=y;N(o,ee),r.caml_pasta_fp_plonk_index_create(d,e.__wbg_ptr,t,l,_,m,c,i,o.__wbg_ptr);var p=x()[d/4+0],s=x()[d/4+1];if(x()[d/4+2])throw u(s);return Se.__wrap(p)}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fp_plonk_index_max_degree=function(e){return N(e,Se),r.caml_pasta_fp_plonk_index_max_degree(e.__wbg_ptr)},e.exports.caml_pasta_fp_plonk_index_public_inputs=function(e){return N(e,Se),r.caml_pasta_fp_plonk_index_public_inputs(e.__wbg_ptr)},e.exports.caml_pasta_fp_plonk_index_domain_d1_size=function(e){return N(e,Se),r.caml_pasta_fp_plonk_index_domain_d1_size(e.__wbg_ptr)},e.exports.caml_pasta_fp_plonk_index_domain_d4_size=function(e){return N(e,Se),r.caml_pasta_fp_plonk_index_domain_d4_size(e.__wbg_ptr)},e.exports.caml_pasta_fp_plonk_index_domain_d8_size=function(e){return N(e,Se),r.caml_pasta_fp_plonk_index_domain_d8_size(e.__wbg_ptr)},e.exports.caml_pasta_fp_plonk_index_decode=function(e,t){try{const i=r.__wbindgen_add_to_stack_pointer(-16),o=E(e,r.__wbindgen_malloc),p=y;N(t,ee),r.caml_pasta_fp_plonk_index_decode(i,o,p,t.__wbg_ptr);var a=x()[i/4+0],n=x()[i/4+1];if(x()[i/4+2])throw u(n);return Se.__wrap(a)}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fp_plonk_index_encode=function(e){try{const o=r.__wbindgen_add_to_stack_pointer(-16);N(e,Se),r.caml_pasta_fp_plonk_index_encode(o,e.__wbg_ptr);var t=x()[o/4+0],a=x()[o/4+1],n=x()[o/4+2];if(x()[o/4+3])throw u(n);var i=T(t,a).slice();return r.__wbindgen_free(t,1*a),i}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fp_plonk_index_read=function(e,t,a){try{const o=r.__wbindgen_add_to_stack_pointer(-16);N(t,ee);const p=k(a,r.__wbindgen_malloc,r.__wbindgen_realloc),s=y;r.caml_pasta_fp_plonk_index_read(o,!I(e),I(e)?0:e,t.__wbg_ptr,p,s);var n=x()[o/4+0],i=x()[o/4+1];if(x()[o/4+2])throw u(i);return Se.__wrap(n)}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fp_plonk_index_write=function(e,t,a){try{const i=r.__wbindgen_add_to_stack_pointer(-16);N(t,Se);const o=k(a,r.__wbindgen_malloc,r.__wbindgen_realloc),p=y;r.caml_pasta_fp_plonk_index_write(i,I(e)?16777215:e?1:0,t.__wbg_ptr,o,p);var n=x()[i/4+0];if(x()[i/4+1])throw u(n)}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fp_plonk_index_serialize=function(e){let t,a;try{const o=r.__wbindgen_add_to_stack_pointer(-16);N(e,Se),r.caml_pasta_fp_plonk_index_serialize(o,e.__wbg_ptr);var n=x()[o/4+0],i=x()[o/4+1];return t=n,a=i,w(n,i)}finally{r.__wbindgen_add_to_stack_pointer(16),r.__wbindgen_free(t,a,1)}},e.exports.caml_pasta_fq_plonk_index_create=function(e,t,a,n,i,o){try{const d=r.__wbindgen_add_to_stack_pointer(-16);N(e,ne);const l=B(a,r.__wbindgen_malloc),_=y,m=B(n,r.__wbindgen_malloc),c=y;N(o,ge),r.caml_pasta_fq_plonk_index_create(d,e.__wbg_ptr,t,l,_,m,c,i,o.__wbg_ptr);var p=x()[d/4+0],s=x()[d/4+1];if(x()[d/4+2])throw u(s);return Ee.__wrap(p)}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fq_plonk_index_max_degree=function(e){return N(e,Ee),r.caml_pasta_fp_plonk_index_max_degree(e.__wbg_ptr)},e.exports.caml_pasta_fq_plonk_index_public_inputs=function(e){return N(e,Ee),r.caml_pasta_fp_plonk_index_public_inputs(e.__wbg_ptr)},e.exports.caml_pasta_fq_plonk_index_domain_d1_size=function(e){return N(e,Ee),r.caml_pasta_fp_plonk_index_domain_d1_size(e.__wbg_ptr)},e.exports.caml_pasta_fq_plonk_index_domain_d4_size=function(e){return N(e,Ee),r.caml_pasta_fp_plonk_index_domain_d4_size(e.__wbg_ptr)},e.exports.caml_pasta_fq_plonk_index_domain_d8_size=function(e){return N(e,Ee),r.caml_pasta_fp_plonk_index_domain_d8_size(e.__wbg_ptr)},e.exports.caml_pasta_fq_plonk_index_decode=function(e,t){try{const i=r.__wbindgen_add_to_stack_pointer(-16),o=E(e,r.__wbindgen_malloc),p=y;N(t,ge),r.caml_pasta_fq_plonk_index_decode(i,o,p,t.__wbg_ptr);var a=x()[i/4+0],n=x()[i/4+1];if(x()[i/4+2])throw u(n);return Ee.__wrap(a)}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fq_plonk_index_encode=function(e){try{const o=r.__wbindgen_add_to_stack_pointer(-16);N(e,Ee),r.caml_pasta_fq_plonk_index_encode(o,e.__wbg_ptr);var t=x()[o/4+0],a=x()[o/4+1],n=x()[o/4+2];if(x()[o/4+3])throw u(n);var i=T(t,a).slice();return r.__wbindgen_free(t,1*a),i}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fq_plonk_index_read=function(e,t,a){try{const o=r.__wbindgen_add_to_stack_pointer(-16);N(t,ge);const p=k(a,r.__wbindgen_malloc,r.__wbindgen_realloc),s=y;r.caml_pasta_fq_plonk_index_read(o,!I(e),I(e)?0:e,t.__wbg_ptr,p,s);var n=x()[o/4+0],i=x()[o/4+1];if(x()[o/4+2])throw u(i);return Ee.__wrap(n)}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fq_plonk_index_write=function(e,t,a){try{const i=r.__wbindgen_add_to_stack_pointer(-16);N(t,Ee);const o=k(a,r.__wbindgen_malloc,r.__wbindgen_realloc),p=y;r.caml_pasta_fq_plonk_index_write(i,I(e)?16777215:e?1:0,t.__wbg_ptr,o,p);var n=x()[i/4+0];if(x()[i/4+1])throw u(n)}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fq_plonk_index_serialize=function(e){let t,a;try{const o=r.__wbindgen_add_to_stack_pointer(-16);N(e,Ee),r.caml_pasta_fq_plonk_index_serialize(o,e.__wbg_ptr);var n=x()[o/4+0],i=x()[o/4+1];return t=n,a=i,w(n,i)}finally{r.__wbindgen_add_to_stack_pointer(16),r.__wbindgen_free(t,a,1)}},e.exports.caml_pasta_fp_plonk_verifier_index_read=function(e,t,a){try{const o=r.__wbindgen_add_to_stack_pointer(-16);N(t,ee);const p=k(a,r.__wbindgen_malloc,r.__wbindgen_realloc),s=y;r.caml_pasta_fp_plonk_verifier_index_read(o,!I(e),I(e)?0:e,t.__wbg_ptr,p,s);var n=x()[o/4+0],i=x()[o/4+1];if(x()[o/4+2])throw u(i);return J.__wrap(n)}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fp_plonk_verifier_index_write=function(e,t,a){try{const o=r.__wbindgen_add_to_stack_pointer(-16);N(t,J);var n=t.__destroy_into_raw();const p=k(a,r.__wbindgen_malloc,r.__wbindgen_realloc),s=y;r.caml_pasta_fp_plonk_verifier_index_write(o,I(e)?16777215:e?1:0,n,p,s);var i=x()[o/4+0];if(x()[o/4+1])throw u(i)}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fp_plonk_verifier_index_serialize=function(e){let t,a;try{const p=r.__wbindgen_add_to_stack_pointer(-16);N(e,J);var n=e.__destroy_into_raw();r.caml_pasta_fp_plonk_verifier_index_serialize(p,n);var i=x()[p/4+0],o=x()[p/4+1];return t=i,a=o,w(i,o)}finally{r.__wbindgen_add_to_stack_pointer(16),r.__wbindgen_free(t,a,1)}},e.exports.caml_pasta_fp_plonk_verifier_index_deserialize=function(e,t){try{const i=r.__wbindgen_add_to_stack_pointer(-16);N(e,ee);const o=k(t,r.__wbindgen_malloc,r.__wbindgen_realloc),p=y;r.caml_pasta_fp_plonk_verifier_index_deserialize(i,e.__wbg_ptr,o,p);var a=x()[i/4+0],n=x()[i/4+1];if(x()[i/4+2])throw u(n);return J.__wrap(a)}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fp_plonk_verifier_index_create=function(e){N(e,Se);const t=r.caml_pasta_fp_plonk_verifier_index_create(e.__wbg_ptr);return J.__wrap(t)},e.exports.caml_pasta_fp_plonk_verifier_index_shifts=function(e){const t=r.caml_pasta_fp_plonk_verifier_index_shifts(e);return Q.__wrap(t)},e.exports.caml_pasta_fp_plonk_verifier_index_dummy=function(){const e=r.caml_pasta_fp_plonk_verifier_index_dummy();return J.__wrap(e)},e.exports.caml_pasta_fp_plonk_verifier_index_deep_copy=function(e){N(e,J);const t=r.caml_pasta_fp_plonk_verifier_index_deep_copy(e.__wbg_ptr);return J.__wrap(t)},e.exports.caml_pasta_fq_plonk_verifier_index_read=function(e,t,a){try{const o=r.__wbindgen_add_to_stack_pointer(-16);N(t,ge);const p=k(a,r.__wbindgen_malloc,r.__wbindgen_realloc),s=y;r.caml_pasta_fq_plonk_verifier_index_read(o,!I(e),I(e)?0:e,t.__wbg_ptr,p,s);var n=x()[o/4+0],i=x()[o/4+1];if(x()[o/4+2])throw u(i);return le.__wrap(n)}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fq_plonk_verifier_index_write=function(e,t,a){try{const o=r.__wbindgen_add_to_stack_pointer(-16);N(t,le);var n=t.__destroy_into_raw();const p=k(a,r.__wbindgen_malloc,r.__wbindgen_realloc),s=y;r.caml_pasta_fq_plonk_verifier_index_write(o,I(e)?16777215:e?1:0,n,p,s);var i=x()[o/4+0];if(x()[o/4+1])throw u(i)}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fq_plonk_verifier_index_serialize=function(e){let t,a;try{const p=r.__wbindgen_add_to_stack_pointer(-16);N(e,le);var n=e.__destroy_into_raw();r.caml_pasta_fq_plonk_verifier_index_serialize(p,n);var i=x()[p/4+0],o=x()[p/4+1];return t=i,a=o,w(i,o)}finally{r.__wbindgen_add_to_stack_pointer(16),r.__wbindgen_free(t,a,1)}},e.exports.caml_pasta_fq_plonk_verifier_index_deserialize=function(e,t){try{const i=r.__wbindgen_add_to_stack_pointer(-16);N(e,ge);const o=k(t,r.__wbindgen_malloc,r.__wbindgen_realloc),p=y;r.caml_pasta_fq_plonk_verifier_index_deserialize(i,e.__wbg_ptr,o,p);var a=x()[i/4+0],n=x()[i/4+1];if(x()[i/4+2])throw u(n);return le.__wrap(a)}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fq_plonk_verifier_index_create=function(e){N(e,Ee);const t=r.caml_pasta_fq_plonk_verifier_index_create(e.__wbg_ptr);return le.__wrap(t)},e.exports.caml_pasta_fq_plonk_verifier_index_shifts=function(e){const t=r.caml_pasta_fq_plonk_verifier_index_shifts(e);return he.__wrap(t)},e.exports.caml_pasta_fq_plonk_verifier_index_dummy=function(){const e=r.caml_pasta_fq_plonk_verifier_index_dummy();return le.__wrap(e)},e.exports.caml_pasta_fq_plonk_verifier_index_deep_copy=function(e){N(e,le);const t=r.caml_pasta_fq_plonk_verifier_index_deep_copy(e.__wbg_ptr);return le.__wrap(t)},e.exports.caml_pasta_fq_plonk_proof_create=function(e,t,a,n,i){try{const d=r.__wbindgen_add_to_stack_pointer(-16);N(e,Ee),N(t,Ae);var o=t.__destroy_into_raw();const l=B(a,r.__wbindgen_malloc),_=y,m=E(n,r.__wbindgen_malloc),c=y,f=B(i,r.__wbindgen_malloc),h=y;r.caml_pasta_fq_plonk_proof_create(d,e.__wbg_ptr,o,l,_,m,c,f,h);var p=x()[d/4+0],s=x()[d/4+1];if(x()[d/4+2])throw u(s);return ue.__wrap(p)}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fq_plonk_proof_verify=function(e,t){N(e,le);var a=e.__destroy_into_raw();N(t,ue);var n=t.__destroy_into_raw();return 0!==r.caml_pasta_fq_plonk_proof_verify(a,n)},e.exports.caml_pasta_fq_plonk_proof_batch_verify=function(e,t){const a=B(e,r.__wbindgen_malloc),n=y,i=B(t,r.__wbindgen_malloc),o=y;return 0!==r.caml_pasta_fq_plonk_proof_batch_verify(a,n,i,o)},e.exports.caml_pasta_fq_plonk_proof_dummy=function(){const e=r.caml_pasta_fq_plonk_proof_dummy();return ue.__wrap(e)},e.exports.caml_pasta_fq_plonk_proof_deep_copy=function(e){N(e,ue);var t=e.__destroy_into_raw();const a=r.caml_pasta_fq_plonk_proof_deep_copy(t);return ue.__wrap(a)},e.exports.caml_pallas_affine_one=function(){const e=r.caml_pallas_affine_one();return we.__wrap(e)},e.exports.caml_vesta_affine_one=function(){const e=r.caml_vesta_affine_one();return ve.__wrap(e)},e.exports.caml_pasta_fp_poseidon_block_cipher=function(e){try{const i=r.__wbindgen_add_to_stack_pointer(-16),o=E(e,r.__wbindgen_malloc),p=y;r.caml_pasta_fp_poseidon_block_cipher(i,o,p);var t=x()[i/4+0],a=x()[i/4+1],n=T(t,a).slice();return r.__wbindgen_free(t,1*a),n}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fq_poseidon_block_cipher=function(e){try{const i=r.__wbindgen_add_to_stack_pointer(-16),o=E(e,r.__wbindgen_malloc),p=y;r.caml_pasta_fq_poseidon_block_cipher(i,o,p);var t=x()[i/4+0],a=x()[i/4+1],n=T(t,a).slice();return r.__wbindgen_free(t,1*a),n}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.initThreadPool=function(e,t){return u(r.initThreadPool(e,c(t)))},e.exports.exitThreadPool=function(){return u(r.exitThreadPool())},e.exports.wbg_rayon_start_worker=function(e){r.wbg_rayon_start_worker(e)},e.exports.fp_oracles_create=function(e,t,a){try{const s=r.__wbindgen_add_to_stack_pointer(-16),d=B(e,r.__wbindgen_malloc),l=y;N(t,J);var n=t.__destroy_into_raw();N(a,X);var i=a.__destroy_into_raw();r.fp_oracles_create(s,d,l,n,i);var o=x()[s/4+0],p=x()[s/4+1];if(x()[s/4+2])throw u(p);return H.__wrap(o)}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.fp_oracles_dummy=function(){const e=r.fp_oracles_dummy();return H.__wrap(e)},e.exports.fp_oracles_deep_copy=function(e){N(e,X);var t=e.__destroy_into_raw();const a=r.fp_oracles_deep_copy(t);return X.__wrap(a)},e.exports.caml_pasta_fq_size_in_bits=function(){return r.caml_pasta_fq_size_in_bits()},e.exports.caml_pasta_fq_size=function(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.caml_pasta_fq_size(n);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fq_add=function(e,t){try{const o=r.__wbindgen_add_to_stack_pointer(-16),p=E(e,r.__wbindgen_malloc),s=y,d=E(t,r.__wbindgen_malloc),l=y;r.caml_pasta_fq_add(o,p,s,d,l);var a=x()[o/4+0],n=x()[o/4+1],i=T(a,n).slice();return r.__wbindgen_free(a,1*n),i}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fq_sub=function(e,t){try{const o=r.__wbindgen_add_to_stack_pointer(-16),p=E(e,r.__wbindgen_malloc),s=y,d=E(t,r.__wbindgen_malloc),l=y;r.caml_pasta_fq_sub(o,p,s,d,l);var a=x()[o/4+0],n=x()[o/4+1],i=T(a,n).slice();return r.__wbindgen_free(a,1*n),i}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fq_negate=function(e){try{const i=r.__wbindgen_add_to_stack_pointer(-16),o=E(e,r.__wbindgen_malloc),p=y;r.caml_pasta_fq_negate(i,o,p);var t=x()[i/4+0],a=x()[i/4+1],n=T(t,a).slice();return r.__wbindgen_free(t,1*a),n}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fq_mul=function(e,t){try{const o=r.__wbindgen_add_to_stack_pointer(-16),p=E(e,r.__wbindgen_malloc),s=y,d=E(t,r.__wbindgen_malloc),l=y;r.caml_pasta_fq_mul(o,p,s,d,l);var a=x()[o/4+0],n=x()[o/4+1],i=T(a,n).slice();return r.__wbindgen_free(a,1*n),i}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fq_div=function(e,t){try{const o=r.__wbindgen_add_to_stack_pointer(-16),p=E(e,r.__wbindgen_malloc),s=y,d=E(t,r.__wbindgen_malloc),l=y;r.caml_pasta_fq_div(o,p,s,d,l);var a=x()[o/4+0],n=x()[o/4+1],i=T(a,n).slice();return r.__wbindgen_free(a,1*n),i}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fq_inv=function(e){try{const n=r.__wbindgen_add_to_stack_pointer(-16),i=E(e,r.__wbindgen_malloc),o=y;r.caml_pasta_fq_inv(n,i,o);var t=x()[n/4+0],a=x()[n/4+1];let p;return 0!==t&&(p=T(t,a).slice(),r.__wbindgen_free(t,1*a)),p}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fq_square=function(e){try{const i=r.__wbindgen_add_to_stack_pointer(-16),o=E(e,r.__wbindgen_malloc),p=y;r.caml_pasta_fq_square(i,o,p);var t=x()[i/4+0],a=x()[i/4+1],n=T(t,a).slice();return r.__wbindgen_free(t,1*a),n}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fq_is_square=function(e){const t=E(e,r.__wbindgen_malloc),a=y;return 0!==r.caml_pasta_fq_is_square(t,a)},e.exports.caml_pasta_fq_sqrt=function(e){try{const n=r.__wbindgen_add_to_stack_pointer(-16),i=E(e,r.__wbindgen_malloc),o=y;r.caml_pasta_fq_sqrt(n,i,o);var t=x()[n/4+0],a=x()[n/4+1];let p;return 0!==t&&(p=T(t,a).slice(),r.__wbindgen_free(t,1*a)),p}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fq_of_int=function(e){try{const i=r.__wbindgen_add_to_stack_pointer(-16);r.caml_pasta_fq_of_int(i,e);var t=x()[i/4+0],a=x()[i/4+1],n=T(t,a).slice();return r.__wbindgen_free(t,1*a),n}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fq_to_string=function(e){let t,a;try{const o=r.__wbindgen_add_to_stack_pointer(-16),p=E(e,r.__wbindgen_malloc),s=y;r.caml_pasta_fq_to_string(o,p,s);var n=x()[o/4+0],i=x()[o/4+1];return t=n,a=i,w(n,i)}finally{r.__wbindgen_add_to_stack_pointer(16),r.__wbindgen_free(t,a,1)}},e.exports.caml_pasta_fq_of_string=function(e){try{const o=r.__wbindgen_add_to_stack_pointer(-16),p=k(e,r.__wbindgen_malloc,r.__wbindgen_realloc),s=y;r.caml_pasta_fq_of_string(o,p,s);var t=x()[o/4+0],a=x()[o/4+1],n=x()[o/4+2];if(x()[o/4+3])throw u(n);var i=T(t,a).slice();return r.__wbindgen_free(t,1*a),i}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fq_print=function(e){const t=E(e,r.__wbindgen_malloc),a=y;r.caml_pasta_fq_print(t,a)},e.exports.caml_pasta_fq_compare=function(e,t){const a=E(e,r.__wbindgen_malloc),n=y,i=E(t,r.__wbindgen_malloc),o=y;return r.caml_pasta_fq_compare(a,n,i,o)},e.exports.caml_pasta_fq_equal=function(e,t){const a=E(e,r.__wbindgen_malloc),n=y,i=E(t,r.__wbindgen_malloc),o=y;return 0!==r.caml_pasta_fq_equal(a,n,i,o)},e.exports.caml_pasta_fq_random=function(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.caml_pasta_fq_random(n);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fq_rng=function(e){try{const i=r.__wbindgen_add_to_stack_pointer(-16);r.caml_pasta_fq_rng(i,e);var t=x()[i/4+0],a=x()[i/4+1],n=T(t,a).slice();return r.__wbindgen_free(t,1*a),n}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fq_to_bigint=function(e){try{const i=r.__wbindgen_add_to_stack_pointer(-16),o=E(e,r.__wbindgen_malloc),p=y;r.caml_pasta_fq_to_bigint(i,o,p);var t=x()[i/4+0],a=x()[i/4+1],n=T(t,a).slice();return r.__wbindgen_free(t,1*a),n}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fq_of_bigint=function(e){try{const o=r.__wbindgen_add_to_stack_pointer(-16),p=E(e,r.__wbindgen_malloc),s=y;r.caml_pasta_fq_of_bigint(o,p,s);var t=x()[o/4+0],a=x()[o/4+1],n=x()[o/4+2];if(x()[o/4+3])throw u(n);var i=T(t,a).slice();return r.__wbindgen_free(t,1*a),i}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fq_two_adic_root_of_unity=function(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.caml_pasta_fq_two_adic_root_of_unity(n);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fq_domain_generator=function(e){try{const i=r.__wbindgen_add_to_stack_pointer(-16);r.caml_pasta_fq_domain_generator(i,e);var t=x()[i/4+0],a=x()[i/4+1],n=T(t,a).slice();return r.__wbindgen_free(t,1*a),n}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fq_to_bytes=function(e){try{const i=r.__wbindgen_add_to_stack_pointer(-16),o=E(e,r.__wbindgen_malloc),p=y;r.caml_pasta_fq_to_bytes(i,o,p);var t=x()[i/4+0],a=x()[i/4+1],n=T(t,a).slice();return r.__wbindgen_free(t,1*a),n}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fq_of_bytes=function(e){try{const i=r.__wbindgen_add_to_stack_pointer(-16),o=E(e,r.__wbindgen_malloc),p=y;r.caml_pasta_fq_of_bytes(i,o,p);var t=x()[i/4+0],a=x()[i/4+1],n=T(t,a).slice();return r.__wbindgen_free(t,1*a),n}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fq_deep_copy=function(e){try{const i=r.__wbindgen_add_to_stack_pointer(-16),o=E(e,r.__wbindgen_malloc),p=y;r.caml_pasta_fq_deep_copy(i,o,p);var t=x()[i/4+0],a=x()[i/4+1],n=T(t,a).slice();return r.__wbindgen_free(t,1*a),n}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pallas_one=function(){const e=r.caml_pallas_one();return be.__wrap(e)},e.exports.caml_pallas_add=function(e,t){N(e,be),N(t,be);const a=r.caml_pallas_add(e.__wbg_ptr,t.__wbg_ptr);return be.__wrap(a)},e.exports.caml_pallas_sub=function(e,t){N(e,be),N(t,be);const a=r.caml_pallas_sub(e.__wbg_ptr,t.__wbg_ptr);return be.__wrap(a)},e.exports.caml_pallas_negate=function(e){N(e,be);const t=r.caml_pallas_negate(e.__wbg_ptr);return be.__wrap(t)},e.exports.caml_pallas_double=function(e){N(e,be);const t=r.caml_pallas_double(e.__wbg_ptr);return be.__wrap(t)},e.exports.caml_pallas_scale=function(e,t){N(e,be);const a=E(t,r.__wbindgen_malloc),n=y,i=r.caml_pallas_scale(e.__wbg_ptr,a,n);return be.__wrap(i)},e.exports.caml_pallas_random=function(){const e=r.caml_pallas_random();return be.__wrap(e)},e.exports.caml_pallas_rng=function(e){const t=r.caml_pallas_rng(e);return be.__wrap(t)},e.exports.caml_pallas_endo_base=function(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.caml_pallas_endo_base(n);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pallas_endo_scalar=function(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.caml_pallas_endo_scalar(n);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pallas_to_affine=function(e){N(e,be);const t=r.caml_pallas_to_affine(e.__wbg_ptr);return we.__wrap(t)},e.exports.caml_pallas_of_affine=function(e){N(e,we);var t=e.__destroy_into_raw();const a=r.caml_pallas_of_affine(t);return be.__wrap(a)},e.exports.caml_pallas_of_affine_coordinates=function(e,t){const a=E(e,r.__wbindgen_malloc),n=y,i=E(t,r.__wbindgen_malloc),o=y,p=r.caml_pallas_of_affine_coordinates(a,n,i,o);return be.__wrap(p)},e.exports.caml_pallas_affine_deep_copy=function(e){N(e,we);var t=e.__destroy_into_raw();const a=r.caml_pallas_affine_deep_copy(t);return we.__wrap(a)},e.exports.caml_pasta_fp_size_in_bits=function(){return r.caml_pasta_fp_size_in_bits()},e.exports.caml_pasta_fp_size=function(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.caml_pasta_fp_size(n);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fp_add=function(e,t){try{const o=r.__wbindgen_add_to_stack_pointer(-16),p=E(e,r.__wbindgen_malloc),s=y,d=E(t,r.__wbindgen_malloc),l=y;r.caml_pasta_fp_add(o,p,s,d,l);var a=x()[o/4+0],n=x()[o/4+1],i=T(a,n).slice();return r.__wbindgen_free(a,1*n),i}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fp_sub=function(e,t){try{const o=r.__wbindgen_add_to_stack_pointer(-16),p=E(e,r.__wbindgen_malloc),s=y,d=E(t,r.__wbindgen_malloc),l=y;r.caml_pasta_fp_sub(o,p,s,d,l);var a=x()[o/4+0],n=x()[o/4+1],i=T(a,n).slice();return r.__wbindgen_free(a,1*n),i}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fp_negate=function(e){try{const i=r.__wbindgen_add_to_stack_pointer(-16),o=E(e,r.__wbindgen_malloc),p=y;r.caml_pasta_fp_negate(i,o,p);var t=x()[i/4+0],a=x()[i/4+1],n=T(t,a).slice();return r.__wbindgen_free(t,1*a),n}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fp_mul=function(e,t){try{const o=r.__wbindgen_add_to_stack_pointer(-16),p=E(e,r.__wbindgen_malloc),s=y,d=E(t,r.__wbindgen_malloc),l=y;r.caml_pasta_fp_mul(o,p,s,d,l);var a=x()[o/4+0],n=x()[o/4+1],i=T(a,n).slice();return r.__wbindgen_free(a,1*n),i}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fp_div=function(e,t){try{const o=r.__wbindgen_add_to_stack_pointer(-16),p=E(e,r.__wbindgen_malloc),s=y,d=E(t,r.__wbindgen_malloc),l=y;r.caml_pasta_fp_div(o,p,s,d,l);var a=x()[o/4+0],n=x()[o/4+1],i=T(a,n).slice();return r.__wbindgen_free(a,1*n),i}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fp_inv=function(e){try{const n=r.__wbindgen_add_to_stack_pointer(-16),i=E(e,r.__wbindgen_malloc),o=y;r.caml_pasta_fp_inv(n,i,o);var t=x()[n/4+0],a=x()[n/4+1];let p;return 0!==t&&(p=T(t,a).slice(),r.__wbindgen_free(t,1*a)),p}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fp_square=function(e){try{const i=r.__wbindgen_add_to_stack_pointer(-16),o=E(e,r.__wbindgen_malloc),p=y;r.caml_pasta_fp_square(i,o,p);var t=x()[i/4+0],a=x()[i/4+1],n=T(t,a).slice();return r.__wbindgen_free(t,1*a),n}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fp_is_square=function(e){const t=E(e,r.__wbindgen_malloc),a=y;return 0!==r.caml_pasta_fp_is_square(t,a)},e.exports.caml_pasta_fp_sqrt=function(e){try{const n=r.__wbindgen_add_to_stack_pointer(-16),i=E(e,r.__wbindgen_malloc),o=y;r.caml_pasta_fp_sqrt(n,i,o);var t=x()[n/4+0],a=x()[n/4+1];let p;return 0!==t&&(p=T(t,a).slice(),r.__wbindgen_free(t,1*a)),p}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fp_of_int=function(e){try{const i=r.__wbindgen_add_to_stack_pointer(-16);r.caml_pasta_fp_of_int(i,e);var t=x()[i/4+0],a=x()[i/4+1],n=T(t,a).slice();return r.__wbindgen_free(t,1*a),n}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fp_to_string=function(e){let t,a;try{const o=r.__wbindgen_add_to_stack_pointer(-16),p=E(e,r.__wbindgen_malloc),s=y;r.caml_pasta_fp_to_string(o,p,s);var n=x()[o/4+0],i=x()[o/4+1];return t=n,a=i,w(n,i)}finally{r.__wbindgen_add_to_stack_pointer(16),r.__wbindgen_free(t,a,1)}},e.exports.caml_pasta_fp_of_string=function(e){try{const o=r.__wbindgen_add_to_stack_pointer(-16),p=k(e,r.__wbindgen_malloc,r.__wbindgen_realloc),s=y;r.caml_pasta_fp_of_string(o,p,s);var t=x()[o/4+0],a=x()[o/4+1],n=x()[o/4+2];if(x()[o/4+3])throw u(n);var i=T(t,a).slice();return r.__wbindgen_free(t,1*a),i}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fp_print=function(e){const t=E(e,r.__wbindgen_malloc),a=y;r.caml_pasta_fp_print(t,a)},e.exports.caml_pasta_fp_compare=function(e,t){const a=E(e,r.__wbindgen_malloc),n=y,i=E(t,r.__wbindgen_malloc),o=y;return r.caml_pasta_fp_compare(a,n,i,o)},e.exports.caml_pasta_fp_equal=function(e,t){const a=E(e,r.__wbindgen_malloc),n=y,i=E(t,r.__wbindgen_malloc),o=y;return 0!==r.caml_pasta_fp_equal(a,n,i,o)},e.exports.caml_pasta_fp_random=function(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.caml_pasta_fp_random(n);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fp_rng=function(e){try{const i=r.__wbindgen_add_to_stack_pointer(-16);r.caml_pasta_fp_rng(i,e);var t=x()[i/4+0],a=x()[i/4+1],n=T(t,a).slice();return r.__wbindgen_free(t,1*a),n}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fp_to_bigint=function(e){try{const i=r.__wbindgen_add_to_stack_pointer(-16),o=E(e,r.__wbindgen_malloc),p=y;r.caml_pasta_fp_to_bigint(i,o,p);var t=x()[i/4+0],a=x()[i/4+1],n=T(t,a).slice();return r.__wbindgen_free(t,1*a),n}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fp_of_bigint=function(e){try{const o=r.__wbindgen_add_to_stack_pointer(-16),p=E(e,r.__wbindgen_malloc),s=y;r.caml_pasta_fp_of_bigint(o,p,s);var t=x()[o/4+0],a=x()[o/4+1],n=x()[o/4+2];if(x()[o/4+3])throw u(n);var i=T(t,a).slice();return r.__wbindgen_free(t,1*a),i}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fp_two_adic_root_of_unity=function(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.caml_pasta_fp_two_adic_root_of_unity(n);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fp_domain_generator=function(e){try{const i=r.__wbindgen_add_to_stack_pointer(-16);r.caml_pasta_fp_domain_generator(i,e);var t=x()[i/4+0],a=x()[i/4+1],n=T(t,a).slice();return r.__wbindgen_free(t,1*a),n}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fp_to_bytes=function(e){try{const i=r.__wbindgen_add_to_stack_pointer(-16),o=E(e,r.__wbindgen_malloc),p=y;r.caml_pasta_fp_to_bytes(i,o,p);var t=x()[i/4+0],a=x()[i/4+1],n=T(t,a).slice();return r.__wbindgen_free(t,1*a),n}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fp_of_bytes=function(e){try{const i=r.__wbindgen_add_to_stack_pointer(-16),o=E(e,r.__wbindgen_malloc),p=y;r.caml_pasta_fp_of_bytes(i,o,p);var t=x()[i/4+0],a=x()[i/4+1],n=T(t,a).slice();return r.__wbindgen_free(t,1*a),n}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_pasta_fp_deep_copy=function(e){try{const i=r.__wbindgen_add_to_stack_pointer(-16),o=E(e,r.__wbindgen_malloc),p=y;r.caml_pasta_fp_deep_copy(i,o,p);var t=x()[i/4+0],a=x()[i/4+1],n=T(t,a).slice();return r.__wbindgen_free(t,1*a),n}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_vesta_one=function(){const e=r.caml_vesta_one();return Fe.__wrap(e)},e.exports.caml_vesta_add=function(e,t){N(e,Fe),N(t,Fe);const a=r.caml_vesta_add(e.__wbg_ptr,t.__wbg_ptr);return Fe.__wrap(a)},e.exports.caml_vesta_sub=function(e,t){N(e,Fe),N(t,Fe);const a=r.caml_vesta_sub(e.__wbg_ptr,t.__wbg_ptr);return Fe.__wrap(a)},e.exports.caml_vesta_negate=function(e){N(e,Fe);const t=r.caml_vesta_negate(e.__wbg_ptr);return Fe.__wrap(t)},e.exports.caml_vesta_double=function(e){N(e,Fe);const t=r.caml_vesta_double(e.__wbg_ptr);return Fe.__wrap(t)},e.exports.caml_vesta_scale=function(e,t){N(e,Fe);const a=E(t,r.__wbindgen_malloc),n=y,i=r.caml_vesta_scale(e.__wbg_ptr,a,n);return Fe.__wrap(i)},e.exports.caml_vesta_random=function(){const e=r.caml_vesta_random();return Fe.__wrap(e)},e.exports.caml_vesta_rng=function(e){const t=r.caml_vesta_rng(e);return Fe.__wrap(t)},e.exports.caml_vesta_endo_base=function(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.caml_vesta_endo_base(n);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_vesta_endo_scalar=function(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.caml_vesta_endo_scalar(n);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}},e.exports.caml_vesta_to_affine=function(e){N(e,Fe);const t=r.caml_vesta_to_affine(e.__wbg_ptr);return ve.__wrap(t)},e.exports.caml_vesta_of_affine=function(e){N(e,ve);var t=e.__destroy_into_raw();const a=r.caml_vesta_of_affine(t);return Fe.__wrap(a)},e.exports.caml_vesta_of_affine_coordinates=function(e,t){const a=E(e,r.__wbindgen_malloc),n=y,i=E(t,r.__wbindgen_malloc),o=y,p=r.caml_vesta_of_affine_coordinates(a,n,i,o);return Fe.__wrap(p)},e.exports.caml_vesta_affine_deep_copy=function(e){N(e,ve);var t=e.__destroy_into_raw();const a=r.caml_vesta_affine_deep_copy(t);return ve.__wrap(a)},e.exports.CurrOrNext=Object.freeze({Curr:0,0:"Curr",Next:1,1:"Next"}),e.exports.GateType=Object.freeze({Zero:0,0:"Zero",Generic:1,1:"Generic",Poseidon:2,2:"Poseidon",CompleteAdd:3,3:"CompleteAdd",VarBaseMul:4,4:"VarBaseMul",EndoMul:5,5:"EndoMul",EndoMulScalar:6,6:"EndoMulScalar",Lookup:7,7:"Lookup",CairoClaim:8,8:"CairoClaim",CairoInstruction:9,9:"CairoInstruction",CairoFlags:10,10:"CairoFlags",CairoTransition:11,11:"CairoTransition",RangeCheck0:12,12:"RangeCheck0",RangeCheck1:13,13:"RangeCheck1",ForeignFieldAdd:14,14:"ForeignFieldAdd",ForeignFieldMul:15,15:"ForeignFieldMul",Xor16:16,16:"Xor16",Rot64:17,17:"Rot64"}),e.exports.FeatureFlags=class{__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_featureflags_free(e)}get range_check0(){return 0!==r.__wbg_get_featureflags_range_check0(this.__wbg_ptr)}set range_check0(e){r.__wbg_set_featureflags_range_check0(this.__wbg_ptr,e)}get range_check1(){return 0!==r.__wbg_get_featureflags_range_check1(this.__wbg_ptr)}set range_check1(e){r.__wbg_set_featureflags_range_check1(this.__wbg_ptr,e)}get foreign_field_add(){return 0!==r.__wbg_get_featureflags_foreign_field_add(this.__wbg_ptr)}set foreign_field_add(e){r.__wbg_set_featureflags_foreign_field_add(this.__wbg_ptr,e)}get foreign_field_mul(){return 0!==r.__wbg_get_featureflags_foreign_field_mul(this.__wbg_ptr)}set foreign_field_mul(e){r.__wbg_set_featureflags_foreign_field_mul(this.__wbg_ptr,e)}get xor(){return 0!==r.__wbg_get_featureflags_xor(this.__wbg_ptr)}set xor(e){r.__wbg_set_featureflags_xor(this.__wbg_ptr,e)}get rot(){return 0!==r.__wbg_get_featureflags_rot(this.__wbg_ptr)}set rot(e){r.__wbg_set_featureflags_rot(this.__wbg_ptr,e)}get lookup_features(){const e=r.__wbg_get_featureflags_lookup_features(this.__wbg_ptr);return V.__wrap(e)}set lookup_features(e){N(e,V);var t=e.__destroy_into_raw();r.__wbg_set_featureflags_lookup_features(this.__wbg_ptr,t)}};class V{static __wrap(e){e>>>=0;const t=Object.create(V.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_lookupfeatures_free(e)}get patterns(){const e=r.__wbg_get_lookupfeatures_patterns(this.__wbg_ptr);return P.__wrap(e)}set patterns(e){N(e,P);var t=e.__destroy_into_raw();r.__wbg_set_lookupfeatures_patterns(this.__wbg_ptr,t)}get joint_lookup_used(){return 0!==r.__wbg_get_lookupfeatures_joint_lookup_used(this.__wbg_ptr)}set joint_lookup_used(e){r.__wbg_set_lookupfeatures_joint_lookup_used(this.__wbg_ptr,e)}get uses_runtime_tables(){return 0!==r.__wbg_get_lookupfeatures_uses_runtime_tables(this.__wbg_ptr)}set uses_runtime_tables(e){r.__wbg_set_lookupfeatures_uses_runtime_tables(this.__wbg_ptr,e)}constructor(e,t,a){N(e,P);var n=e.__destroy_into_raw();const i=r.lookupfeatures_new(n,t,a);return V.__wrap(i)}}e.exports.LookupFeatures=V;class O{static __wrap(e){e>>>=0;const t=Object.create(O.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_lookupinfo_free(e)}get max_per_row(){return r.__wbg_get_lookupinfo_max_per_row(this.__wbg_ptr)>>>0}set max_per_row(e){r.__wbg_set_lookupinfo_max_per_row(this.__wbg_ptr,e)}get max_joint_size(){return r.__wbg_get_lookupinfo_max_joint_size(this.__wbg_ptr)>>>0}set max_joint_size(e){r.__wbg_set_lookupinfo_max_joint_size(this.__wbg_ptr,e)}get features(){const e=r.__wbg_get_lookupinfo_features(this.__wbg_ptr);return V.__wrap(e)}set features(e){N(e,V);var t=e.__destroy_into_raw();r.__wbg_set_lookupinfo_features(this.__wbg_ptr,t)}constructor(e,t,a){N(a,V);var n=a.__destroy_into_raw();const i=r.lookupinfo_new(e,t,n);return O.__wrap(i)}}e.exports.LookupInfo=O;class P{static __wrap(e){e>>>=0;const t=Object.create(P.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_lookuppatterns_free(e)}get xor(){return 0!==r.__wbg_get_lookuppatterns_xor(this.__wbg_ptr)}set xor(e){r.__wbg_set_lookuppatterns_xor(this.__wbg_ptr,e)}get lookup(){return 0!==r.__wbg_get_lookuppatterns_lookup(this.__wbg_ptr)}set lookup(e){r.__wbg_set_lookuppatterns_lookup(this.__wbg_ptr,e)}get range_check(){return 0!==r.__wbg_get_lookuppatterns_range_check(this.__wbg_ptr)}set range_check(e){r.__wbg_set_lookuppatterns_range_check(this.__wbg_ptr,e)}get foreign_field_mul(){return 0!==r.__wbg_get_lookuppatterns_foreign_field_mul(this.__wbg_ptr)}set foreign_field_mul(e){r.__wbg_set_lookuppatterns_foreign_field_mul(this.__wbg_ptr,e)}constructor(e,t,a,n){const i=r.lookuppatterns_new(e,t,a,n);return P.__wrap(i)}}e.exports.LookupPatterns=P;class D{static __wrap(e){e>>>=0;const t=Object.create(D.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_poolbuilder_free(e)}numThreads(){return r.poolbuilder_numThreads(this.__wbg_ptr)>>>0}receiver(){return r.poolbuilder_receiver(this.__wbg_ptr)}build(){r.poolbuilder_build(this.__wbg_ptr)}}e.exports.PoolBuilder=D;class U{static __wrap(e){e>>>=0;const t=Object.create(U.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmfpdomain_free(e)}get log_size_of_group(){return r.__wbg_get_wasmfpdomain_log_size_of_group(this.__wbg_ptr)}set log_size_of_group(e){r.__wbg_set_wasmfpdomain_log_size_of_group(this.__wbg_ptr,e)}get group_gen(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfpdomain_group_gen(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set group_gen(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfpdomain_group_gen(this.__wbg_ptr,t,a)}constructor(e,t){const a=E(t,r.__wbindgen_malloc),n=y,i=r.wasmfpdomain_new(e,a,n);return U.__wrap(i)}}e.exports.WasmFpDomain=U;class z{static __wrap(e){e>>>=0;const t=Object.create(z.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmfpgate_free(e)}get typ(){return r.__wbg_get_wasmfpgate_typ(this.__wbg_ptr)>>>0}set typ(e){r.__wbg_set_wasmfpgate_typ(this.__wbg_ptr,e)}get wires(){const e=r.__wbg_get_wasmfpgate_wires(this.__wbg_ptr);return ye.__wrap(e)}set wires(e){N(e,ye);var t=e.__destroy_into_raw();r.__wbg_set_wasmfpgate_wires(this.__wbg_ptr,t)}constructor(e,t,a){N(t,ye);var n=t.__destroy_into_raw();const i=E(a,r.__wbindgen_malloc),o=y,p=r.wasmfpgate_new(e,n,i,o);return z.__wrap(p)}}e.exports.WasmFpGate=z;class R{static __wrap(e){e>>>=0;const t=Object.create(R.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmfpgatevector_free(e)}}e.exports.WasmFpGateVector=R;class M{static __wrap(e){e>>>=0;const t=Object.create(M.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmfplookupcommitments_free(e)}constructor(e,t,a){const n=B(e,r.__wbindgen_malloc),i=y;N(t,W);var o=t.__destroy_into_raw();let p=0;I(a)||(N(a,W),p=a.__destroy_into_raw());const s=r.wasmfplookupcommitments_new(n,i,o,p);return M.__wrap(s)}get sorted(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.wasmfplookupcommitments_sorted(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=F(e,t).slice();return r.__wbindgen_free(e,4*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}get aggreg(){const e=r.wasmfplookupcommitments_aggreg(this.__wbg_ptr);return W.__wrap(e)}get runtime(){const e=r.wasmfplookupcommitments_runtime(this.__wbg_ptr);return 0===e?void 0:W.__wrap(e)}set sorted(e){const t=B(e,r.__wbindgen_malloc),a=y;r.wasmfplookupcommitments_set_sorted(this.__wbg_ptr,t,a)}set aggreg(e){N(e,W);var t=e.__destroy_into_raw();r.wasmfplookupcommitments_set_aggreg(this.__wbg_ptr,t)}set runtime(e){let t=0;I(e)||(N(e,W),t=e.__destroy_into_raw()),r.wasmfplookupcommitments_set_runtime(this.__wbg_ptr,t)}}e.exports.WasmFpLookupCommitments=M;class j{static __wrap(e){e>>>=0;const t=Object.create(j.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmfplookupselectors_free(e)}constructor(e,t,a,n){let i=0;I(e)||(N(e,W),i=e.__destroy_into_raw());let o=0;I(t)||(N(t,W),o=t.__destroy_into_raw());let p=0;I(a)||(N(a,W),p=a.__destroy_into_raw());let s=0;I(n)||(N(n,W),s=n.__destroy_into_raw());const d=r.wasmfplookupselectors_new(i,o,p,s);return j.__wrap(d)}get xor(){const e=r.wasmfplookupselectors_xor(this.__wbg_ptr);return 0===e?void 0:W.__wrap(e)}set xor(e){let t=0;I(e)||(N(e,W),t=e.__destroy_into_raw()),r.wasmfplookupselectors_set_xor(this.__wbg_ptr,t)}get lookup(){const e=r.wasmfplookupselectors_lookup(this.__wbg_ptr);return 0===e?void 0:W.__wrap(e)}set lookup(e){let t=0;I(e)||(N(e,W),t=e.__destroy_into_raw()),r.wasmfplookupselectors_set_lookup(this.__wbg_ptr,t)}get ffmul(){const e=r.wasmfplookupselectors_ffmul(this.__wbg_ptr);return 0===e?void 0:W.__wrap(e)}set ffmul(e){let t=0;I(e)||(N(e,W),t=e.__destroy_into_raw()),r.wasmfplookupselectors_set_ffmul(this.__wbg_ptr,t)}get range_check(){const e=r.wasmfplookupselectors_range_check(this.__wbg_ptr);return 0===e?void 0:W.__wrap(e)}set range_check(e){let t=0;I(e)||(N(e,W),t=e.__destroy_into_raw()),r.wasmfplookupselectors_set_range_check(this.__wbg_ptr,t)}}e.exports.WasmFpLookupSelectors=j;class ${static __wrap(e){e>>>=0;const t=Object.create($.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmfplookupverifierindex_free(e)}get joint_lookup_used(){return 0!==r.__wbg_get_wasmfplookupverifierindex_joint_lookup_used(this.__wbg_ptr)}set joint_lookup_used(e){r.__wbg_set_wasmfplookupverifierindex_joint_lookup_used(this.__wbg_ptr,e)}constructor(e,t,a,n,i,o){const p=B(t,r.__wbindgen_malloc),s=y;N(a,j);var d=a.__destroy_into_raw();let l=0;I(n)||(N(n,W),l=n.__destroy_into_raw()),N(i,O);let _=0;I(o)||(N(o,W),_=o.__destroy_into_raw());const m=r.wasmfplookupverifierindex_new(e,p,s,d,l,i.__wbg_ptr,_);return $.__wrap(m)}get lookup_table(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.wasmfplookupverifierindex_lookup_table(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=F(e,t).slice();return r.__wbindgen_free(e,4*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set lookup_table(e){const t=B(e,r.__wbindgen_malloc),a=y;r.wasmfplookupverifierindex_set_lookup_table(this.__wbg_ptr,t,a)}get lookup_selectors(){const e=r.wasmfplookupverifierindex_lookup_selectors(this.__wbg_ptr);return j.__wrap(e)}set lookup_selectors(e){N(e,j);var t=e.__destroy_into_raw();r.wasmfplookupverifierindex_set_lookup_selectors(this.__wbg_ptr,t)}get table_ids(){const e=r.wasmfplookupverifierindex_table_ids(this.__wbg_ptr);return 0===e?void 0:W.__wrap(e)}set table_ids(e){let t=0;I(e)||(N(e,W),t=e.__destroy_into_raw()),r.wasmfplookupverifierindex_set_table_ids(this.__wbg_ptr,t)}get lookup_info(){const e=r.wasmfplookupverifierindex_lookup_info(this.__wbg_ptr);return O.__wrap(e)}set lookup_info(e){N(e,O);var t=e.__destroy_into_raw();r.wasmfplookupverifierindex_set_lookup_info(this.__wbg_ptr,t)}get runtime_tables_selector(){const e=r.wasmfplookupverifierindex_runtime_tables_selector(this.__wbg_ptr);return 0===e?void 0:W.__wrap(e)}set runtime_tables_selector(e){let t=0;I(e)||(N(e,W),t=e.__destroy_into_raw()),r.wasmfplookupverifierindex_set_runtime_tables_selector(this.__wbg_ptr,t)}}e.exports.WasmFpLookupVerifierIndex=$;class L{static __wrap(e){e>>>=0;const t=Object.create(L.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmfpopeningproof_free(e)}get z1(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfpopeningproof_z1(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set z1(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfpopeningproof_z1(this.__wbg_ptr,t,a)}get z2(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfpopeningproof_z2(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set z2(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfpopeningproof_z2(this.__wbg_ptr,t,a)}constructor(e,t,a,n,i,o){const p=B(e,r.__wbindgen_malloc),s=y,d=B(t,r.__wbindgen_malloc),l=y;N(a,ve);var _=a.__destroy_into_raw();const m=E(n,r.__wbindgen_malloc),u=y,c=E(i,r.__wbindgen_malloc),f=y;N(o,ve);var h=o.__destroy_into_raw();const g=r.wasmfpopeningproof_new(p,s,d,l,_,m,u,c,f,h);return L.__wrap(g)}get lr_0(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.wasmfpopeningproof_lr_0(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=F(e,t).slice();return r.__wbindgen_free(e,4*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}get lr_1(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.wasmfpopeningproof_lr_1(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=F(e,t).slice();return r.__wbindgen_free(e,4*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}get delta(){const e=r.wasmfpopeningproof_delta(this.__wbg_ptr);return ve.__wrap(e)}get sg(){const e=r.wasmfpopeningproof_sg(this.__wbg_ptr);return ve.__wrap(e)}set lr_0(e){const t=B(e,r.__wbindgen_malloc),a=y;r.wasmfpopeningproof_set_lr_0(this.__wbg_ptr,t,a)}set lr_1(e){const t=B(e,r.__wbindgen_malloc),a=y;r.wasmfpopeningproof_set_lr_1(this.__wbg_ptr,t,a)}set delta(e){N(e,ve);var t=e.__destroy_into_raw();r.wasmfpopeningproof_set_delta(this.__wbg_ptr,t)}set sg(e){N(e,ve);var t=e.__destroy_into_raw();r.wasmfpopeningproof_set_sg(this.__wbg_ptr,t)}}e.exports.WasmFpOpeningProof=L;class H{static __wrap(e){e>>>=0;const t=Object.create(H.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmfporacles_free(e)}get o(){const e=r.__wbg_get_wasmfporacles_o(this.__wbg_ptr);return Z.__wrap(e)}set o(e){N(e,Z);var t=e.__destroy_into_raw();r.__wbg_set_wasmfporacles_o(this.__wbg_ptr,t)}get p_eval0(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfporacles_p_eval0(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set p_eval0(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfporacles_p_eval0(this.__wbg_ptr,t,a)}get p_eval1(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfporacles_p_eval1(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set p_eval1(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfporacles_p_eval1(this.__wbg_ptr,t,a)}get digest_before_evaluations(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfporacles_digest_before_evaluations(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set digest_before_evaluations(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfporacles_digest_before_evaluations(this.__wbg_ptr,t,a)}constructor(e,t,a,n,i){N(e,Z);var o=e.__destroy_into_raw();const p=E(t,r.__wbindgen_malloc),s=y,d=E(a,r.__wbindgen_malloc),l=y,_=E(n,r.__wbindgen_malloc),m=y,u=E(i,r.__wbindgen_malloc),c=y,f=r.wasmfporacles_new(o,p,s,d,l,_,m,u,c);return H.__wrap(f)}get opening_prechallenges(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.wasmfporacles_opening_prechallenges(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set opening_prechallenges(e){const t=E(e,r.__wbindgen_malloc),a=y;r.wasmfporacles_set_opening_prechallenges(this.__wbg_ptr,t,a)}}e.exports.WasmFpOracles=H;class K{static __wrap(e){e>>>=0;const t=Object.create(K.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmfpplonkverificationevals_free(e)}constructor(e,t,a,n,i,o,p,s,d,l,_,m,u,c){const f=B(e,r.__wbindgen_malloc),h=y,g=B(t,r.__wbindgen_malloc),w=y;N(a,W),N(n,W),N(i,W),N(o,W),N(p,W),N(s,W);let v=0;I(d)||(N(d,W),v=d.__destroy_into_raw());let b=0;I(l)||(N(l,W),b=l.__destroy_into_raw());let k=0;I(_)||(N(_,W),k=_.__destroy_into_raw());let S=0;I(m)||(N(m,W),S=m.__destroy_into_raw());let x=0;I(u)||(N(u,W),x=u.__destroy_into_raw());let T=0;I(c)||(N(c,W),T=c.__destroy_into_raw());const E=r.wasmfpplonkverificationevals_new(f,h,g,w,a.__wbg_ptr,n.__wbg_ptr,i.__wbg_ptr,o.__wbg_ptr,p.__wbg_ptr,s.__wbg_ptr,v,b,k,S,x,T);return K.__wrap(E)}get sigma_comm(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.wasmfpplonkverificationevals_sigma_comm(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=F(e,t).slice();return r.__wbindgen_free(e,4*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set sigma_comm(e){const t=B(e,r.__wbindgen_malloc),a=y;r.wasmfpplonkverificationevals_set_sigma_comm(this.__wbg_ptr,t,a)}get coefficients_comm(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.wasmfpplonkverificationevals_coefficients_comm(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=F(e,t).slice();return r.__wbindgen_free(e,4*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set coefficients_comm(e){const t=B(e,r.__wbindgen_malloc),a=y;r.wasmfpplonkverificationevals_set_coefficients_comm(this.__wbg_ptr,t,a)}get generic_comm(){const e=r.wasmfpplonkverificationevals_generic_comm(this.__wbg_ptr);return W.__wrap(e)}set generic_comm(e){N(e,W);var t=e.__destroy_into_raw();r.wasmfpplonkverificationevals_set_generic_comm(this.__wbg_ptr,t)}get psm_comm(){const e=r.wasmfpplonkverificationevals_psm_comm(this.__wbg_ptr);return W.__wrap(e)}set psm_comm(e){N(e,W);var t=e.__destroy_into_raw();r.wasmfpplonkverificationevals_set_psm_comm(this.__wbg_ptr,t)}get complete_add_comm(){const e=r.wasmfpplonkverificationevals_complete_add_comm(this.__wbg_ptr);return W.__wrap(e)}set complete_add_comm(e){N(e,W);var t=e.__destroy_into_raw();r.wasmfpplonkverificationevals_set_complete_add_comm(this.__wbg_ptr,t)}get mul_comm(){const e=r.wasmfpplonkverificationevals_mul_comm(this.__wbg_ptr);return W.__wrap(e)}set mul_comm(e){N(e,W);var t=e.__destroy_into_raw();r.wasmfpplonkverificationevals_set_mul_comm(this.__wbg_ptr,t)}get emul_comm(){const e=r.wasmfpplonkverificationevals_emul_comm(this.__wbg_ptr);return W.__wrap(e)}set emul_comm(e){N(e,W);var t=e.__destroy_into_raw();r.wasmfpplonkverificationevals_set_emul_comm(this.__wbg_ptr,t)}get endomul_scalar_comm(){const e=r.wasmfpplonkverificationevals_endomul_scalar_comm(this.__wbg_ptr);return W.__wrap(e)}set endomul_scalar_comm(e){N(e,W);var t=e.__destroy_into_raw();r.wasmfpplonkverificationevals_set_endomul_scalar_comm(this.__wbg_ptr,t)}get xor_comm(){const e=r.wasmfplookupselectors_xor(this.__wbg_ptr);return 0===e?void 0:W.__wrap(e)}set xor_comm(e){let t=0;I(e)||(N(e,W),t=e.__destroy_into_raw()),r.wasmfplookupselectors_set_xor(this.__wbg_ptr,t)}get rot_comm(){const e=r.wasmfplookupverifierindex_runtime_tables_selector(this.__wbg_ptr);return 0===e?void 0:W.__wrap(e)}set rot_comm(e){let t=0;I(e)||(N(e,W),t=e.__destroy_into_raw()),r.wasmfplookupverifierindex_set_runtime_tables_selector(this.__wbg_ptr,t)}get range_check0_comm(){const e=r.wasmfplookupselectors_lookup(this.__wbg_ptr);return 0===e?void 0:W.__wrap(e)}set range_check0_comm(e){let t=0;I(e)||(N(e,W),t=e.__destroy_into_raw()),r.wasmfplookupselectors_set_lookup(this.__wbg_ptr,t)}get range_check1_comm(){const e=r.wasmfplookupselectors_range_check(this.__wbg_ptr);return 0===e?void 0:W.__wrap(e)}set range_check1_comm(e){let t=0;I(e)||(N(e,W),t=e.__destroy_into_raw()),r.wasmfplookupselectors_set_range_check(this.__wbg_ptr,t)}get foreign_field_add_comm(){const e=r.wasmfplookupselectors_ffmul(this.__wbg_ptr);return 0===e?void 0:W.__wrap(e)}set foreign_field_add_comm(e){let t=0;I(e)||(N(e,W),t=e.__destroy_into_raw()),r.wasmfplookupselectors_set_ffmul(this.__wbg_ptr,t)}get foreign_field_mul_comm(){const e=r.wasmfplookupverifierindex_table_ids(this.__wbg_ptr);return 0===e?void 0:W.__wrap(e)}set foreign_field_mul_comm(e){let t=0;I(e)||(N(e,W),t=e.__destroy_into_raw()),r.wasmfplookupverifierindex_set_table_ids(this.__wbg_ptr,t)}}e.exports.WasmFpPlonkVerificationEvals=K;class J{static __wrap(e){e>>>=0;const t=Object.create(J.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmfpplonkverifierindex_free(e)}get domain(){const e=r.__wbg_get_wasmfpplonkverifierindex_domain(this.__wbg_ptr);return U.__wrap(e)}set domain(e){N(e,U);var t=e.__destroy_into_raw();r.__wbg_set_wasmfpplonkverifierindex_domain(this.__wbg_ptr,t)}get max_poly_size(){return r.__wbg_get_wasmfpplonkverifierindex_max_poly_size(this.__wbg_ptr)}set max_poly_size(e){r.__wbg_set_wasmfpplonkverifierindex_max_poly_size(this.__wbg_ptr,e)}get public_(){return r.__wbg_get_wasmfpplonkverifierindex_public_(this.__wbg_ptr)}set public_(e){r.__wbg_set_wasmfpplonkverifierindex_public_(this.__wbg_ptr,e)}get prev_challenges(){return r.__wbg_get_wasmfpplonkverifierindex_prev_challenges(this.__wbg_ptr)}set prev_challenges(e){r.__wbg_set_wasmfpplonkverifierindex_prev_challenges(this.__wbg_ptr,e)}get shifts(){const e=r.__wbg_get_wasmfpplonkverifierindex_shifts(this.__wbg_ptr);return Q.__wrap(e)}set shifts(e){N(e,Q);var t=e.__destroy_into_raw();r.__wbg_set_wasmfpplonkverifierindex_shifts(this.__wbg_ptr,t)}get zk_rows(){return r.__wbg_get_wasmfpplonkverifierindex_zk_rows(this.__wbg_ptr)}set zk_rows(e){r.__wbg_set_wasmfpplonkverifierindex_zk_rows(this.__wbg_ptr,e)}constructor(e,t,a,n,i,o,p,s,d){N(e,U),N(i,ee),N(o,K),N(p,Q);let l=0;I(s)||(N(s,$),l=s.__destroy_into_raw());const _=r.wasmfpplonkverifierindex_new(e.__wbg_ptr,t,a,n,i.__wbg_ptr,o.__wbg_ptr,p.__wbg_ptr,l,d);return J.__wrap(_)}get srs(){const e=r.wasmfpplonkverifierindex_srs(this.__wbg_ptr);return ee.__wrap(e)}set srs(e){N(e,ee);var t=e.__destroy_into_raw();r.wasmfpplonkverifierindex_set_srs(this.__wbg_ptr,t)}get evals(){const e=r.wasmfpplonkverifierindex_evals(this.__wbg_ptr);return K.__wrap(e)}set evals(e){N(e,K);var t=e.__destroy_into_raw();r.wasmfpplonkverifierindex_set_evals(this.__wbg_ptr,t)}get lookup_index(){const e=r.wasmfpplonkverifierindex_lookup_index(this.__wbg_ptr);return 0===e?void 0:$.__wrap(e)}set lookup_index(e){let t=0;I(e)||(N(e,$),t=e.__destroy_into_raw()),r.wasmfpplonkverifierindex_set_lookup_index(this.__wbg_ptr,t)}}e.exports.WasmFpPlonkVerifierIndex=J;class W{static __wrap(e){e>>>=0;const t=Object.create(W.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmfppolycomm_free(e)}constructor(e,t){const a=B(e,r.__wbindgen_malloc),n=y;let i=0;I(t)||(N(t,ve),i=t.__destroy_into_raw());const o=r.wasmfppolycomm_new(a,n,i);return W.__wrap(o)}get unshifted(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.wasmfppolycomm_unshifted(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=F(e,t).slice();return r.__wbindgen_free(e,4*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set unshifted(e){const t=B(e,r.__wbindgen_malloc),a=y;r.wasmfppolycomm_set_unshifted(this.__wbg_ptr,t,a)}get shifted(){const e=r.__wbg_get_wasmfppolycomm_shifted(this.__wbg_ptr);return 0===e?void 0:ve.__wrap(e)}set shifted(e){let t=0;I(e)||(N(e,ve),t=e.__destroy_into_raw()),r.__wbg_set_wasmfppolycomm_shifted(this.__wbg_ptr,t)}}e.exports.WasmFpPolyComm=W;class G{static __wrap(e){e>>>=0;const t=Object.create(G.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmfpprovercommitments_free(e)}constructor(e,t,a,n){const i=B(e,r.__wbindgen_malloc),o=y;N(t,W);var p=t.__destroy_into_raw();N(a,W);var s=a.__destroy_into_raw();let d=0;I(n)||(N(n,M),d=n.__destroy_into_raw());const l=r.wasmfpprovercommitments_new(i,o,p,s,d);return G.__wrap(l)}get w_comm(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.wasmfpprovercommitments_w_comm(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=F(e,t).slice();return r.__wbindgen_free(e,4*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}get z_comm(){const e=r.wasmfpprovercommitments_z_comm(this.__wbg_ptr);return W.__wrap(e)}get t_comm(){const e=r.wasmfpprovercommitments_t_comm(this.__wbg_ptr);return W.__wrap(e)}get lookup(){const e=r.wasmfpprovercommitments_lookup(this.__wbg_ptr);return 0===e?void 0:M.__wrap(e)}set w_comm(e){const t=B(e,r.__wbindgen_malloc),a=y;r.wasmfpprovercommitments_set_w_comm(this.__wbg_ptr,t,a)}set z_comm(e){N(e,W);var t=e.__destroy_into_raw();r.wasmfpprovercommitments_set_z_comm(this.__wbg_ptr,t)}set t_comm(e){N(e,W);var t=e.__destroy_into_raw();r.wasmfpprovercommitments_set_t_comm(this.__wbg_ptr,t)}set lookup(e){let t=0;I(e)||(N(e,M),t=e.__destroy_into_raw()),r.wasmfpprovercommitments_set_lookup(this.__wbg_ptr,t)}}e.exports.WasmFpProverCommitments=G;class X{static __wrap(e){e>>>=0;const t=Object.create(X.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmfpproverproof_free(e)}get ft_eval1(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfpproverproof_ft_eval1(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set ft_eval1(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfpproverproof_ft_eval1(this.__wbg_ptr,t,a)}constructor(e,t,a,n,i,o,p){N(e,G);var s=e.__destroy_into_raw();N(t,L);var d=t.__destroy_into_raw();const l=E(n,r.__wbindgen_malloc),_=y,m=E(i,r.__wbindgen_malloc),u=y;N(o,Ne);var f=o.__destroy_into_raw();const h=B(p,r.__wbindgen_malloc),g=y,w=r.wasmfpproverproof_new(s,d,c(a),l,_,m,u,f,h,g);return X.__wrap(w)}get commitments(){const e=r.wasmfpproverproof_commitments(this.__wbg_ptr);return G.__wrap(e)}get proof(){const e=r.wasmfpproverproof_proof(this.__wbg_ptr);return L.__wrap(e)}get evals(){return u(r.wasmfpproverproof_evals(this.__wbg_ptr))}get public_(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.wasmfpproverproof_public_(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}get prev_challenges_scalars(){const e=r.wasmfpproverproof_prev_challenges_scalars(this.__wbg_ptr);return Ne.__wrap(e)}get prev_challenges_comms(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.wasmfpproverproof_prev_challenges_comms(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=F(e,t).slice();return r.__wbindgen_free(e,4*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set commitments(e){N(e,G);var t=e.__destroy_into_raw();r.wasmfpproverproof_set_commitments(this.__wbg_ptr,t)}set proof(e){N(e,L);var t=e.__destroy_into_raw();r.wasmfpproverproof_set_proof(this.__wbg_ptr,t)}set evals(e){r.wasmfpproverproof_set_evals(this.__wbg_ptr,c(e))}set public_(e){const t=E(e,r.__wbindgen_malloc),a=y;r.wasmfpproverproof_set_public_(this.__wbg_ptr,t,a)}set prev_challenges_scalars(e){N(e,Ne);var t=e.__destroy_into_raw();r.wasmfpproverproof_set_prev_challenges_scalars(this.__wbg_ptr,t)}set prev_challenges_comms(e){const t=B(e,r.__wbindgen_malloc),a=y;r.wasmfpproverproof_set_prev_challenges_comms(this.__wbg_ptr,t,a)}serialize(){let e,t;try{const i=r.__wbindgen_add_to_stack_pointer(-16);r.wasmfpproverproof_serialize(i,this.__wbg_ptr);var a=x()[i/4+0],n=x()[i/4+1];return e=a,t=n,w(a,n)}finally{r.__wbindgen_add_to_stack_pointer(16),r.__wbindgen_free(e,t,1)}}}e.exports.WasmFpProverProof=X;class Z{static __wrap(e){e>>>=0;const t=Object.create(Z.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmfprandomoracles_free(e)}get joint_combiner_chal(){try{const a=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfprandomoracles_joint_combiner_chal(a,this.__wbg_ptr);var e=x()[a/4+0],t=x()[a/4+1];let n;return 0!==e&&(n=T(e,t).slice(),r.__wbindgen_free(e,1*t)),n}finally{r.__wbindgen_add_to_stack_pointer(16)}}set joint_combiner_chal(e){var t=I(e)?0:E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfprandomoracles_joint_combiner_chal(this.__wbg_ptr,t,a)}get joint_combiner(){try{const a=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfprandomoracles_joint_combiner(a,this.__wbg_ptr);var e=x()[a/4+0],t=x()[a/4+1];let n;return 0!==e&&(n=T(e,t).slice(),r.__wbindgen_free(e,1*t)),n}finally{r.__wbindgen_add_to_stack_pointer(16)}}set joint_combiner(e){var t=I(e)?0:E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfprandomoracles_joint_combiner(this.__wbg_ptr,t,a)}get beta(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfprandomoracles_beta(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set beta(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfprandomoracles_beta(this.__wbg_ptr,t,a)}get gamma(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfprandomoracles_gamma(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set gamma(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfprandomoracles_gamma(this.__wbg_ptr,t,a)}get alpha_chal(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfprandomoracles_alpha_chal(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set alpha_chal(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfprandomoracles_alpha_chal(this.__wbg_ptr,t,a)}get alpha(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfprandomoracles_alpha(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set alpha(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfprandomoracles_alpha(this.__wbg_ptr,t,a)}get zeta(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfprandomoracles_zeta(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set zeta(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfprandomoracles_zeta(this.__wbg_ptr,t,a)}get v(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfprandomoracles_v(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set v(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfprandomoracles_v(this.__wbg_ptr,t,a)}get u(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfprandomoracles_u(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set u(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfprandomoracles_u(this.__wbg_ptr,t,a)}get zeta_chal(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfprandomoracles_zeta_chal(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set zeta_chal(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfprandomoracles_zeta_chal(this.__wbg_ptr,t,a)}get v_chal(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfprandomoracles_v_chal(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set v_chal(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfprandomoracles_v_chal(this.__wbg_ptr,t,a)}get u_chal(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfprandomoracles_u_chal(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set u_chal(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfprandomoracles_u_chal(this.__wbg_ptr,t,a)}constructor(e,t,a,n,i,o,p,s,d,l,_,m){var u=I(e)?0:E(e,r.__wbindgen_malloc),c=y,f=I(t)?0:E(t,r.__wbindgen_malloc),h=y;const g=E(a,r.__wbindgen_malloc),w=y,v=E(n,r.__wbindgen_malloc),b=y,k=E(i,r.__wbindgen_malloc),S=y,x=E(o,r.__wbindgen_malloc),T=y,N=E(p,r.__wbindgen_malloc),C=y,A=E(s,r.__wbindgen_malloc),B=y,F=E(d,r.__wbindgen_malloc),q=y,V=E(l,r.__wbindgen_malloc),O=y,P=E(_,r.__wbindgen_malloc),D=y,U=E(m,r.__wbindgen_malloc),z=y,R=r.wasmfprandomoracles_new(u,c,f,h,g,w,v,b,k,S,x,T,N,C,A,B,F,q,V,O,P,D,U,z);return Z.__wrap(R)}}e.exports.WasmFpRandomOracles=Z;class Y{static __wrap(e){e>>>=0;const t=Object.create(Y.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmfpruntimetable_free(e)}constructor(e,t){const a=E(t,r.__wbindgen_malloc),n=y,i=r.wasmfpruntimetable_new(e,a,n);return Y.__wrap(i)}}e.exports.WasmFpRuntimeTable=Y;class Q{static __wrap(e){e>>>=0;const t=Object.create(Q.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmfpshifts_free(e)}get s0(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfpdomain_group_gen(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set s0(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfpdomain_group_gen(this.__wbg_ptr,t,a)}get s1(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfpshifts_s1(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set s1(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfpshifts_s1(this.__wbg_ptr,t,a)}get s2(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfpshifts_s2(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set s2(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfpshifts_s2(this.__wbg_ptr,t,a)}get s3(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfpshifts_s3(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set s3(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfpshifts_s3(this.__wbg_ptr,t,a)}get s4(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfpshifts_s4(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set s4(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfpshifts_s4(this.__wbg_ptr,t,a)}get s5(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfpshifts_s5(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set s5(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfpshifts_s5(this.__wbg_ptr,t,a)}get s6(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfpshifts_s6(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set s6(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfpshifts_s6(this.__wbg_ptr,t,a)}constructor(e,t,a,n,i,o,p){const s=E(e,r.__wbindgen_malloc),d=y,l=E(t,r.__wbindgen_malloc),_=y,m=E(a,r.__wbindgen_malloc),u=y,c=E(n,r.__wbindgen_malloc),f=y,h=E(i,r.__wbindgen_malloc),g=y,w=E(o,r.__wbindgen_malloc),v=y,b=E(p,r.__wbindgen_malloc),k=y,S=r.wasmfpshifts_new(s,d,l,_,m,u,c,f,h,g,w,v,b,k);return Q.__wrap(S)}}e.exports.WasmFpShifts=Q;class ee{static __wrap(e){e>>>=0;const t=Object.create(ee.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmfpsrs_free(e)}}e.exports.WasmFpSrs=ee;class te{static __wrap(e){e>>>=0;const t=Object.create(te.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmfqdomain_free(e)}get log_size_of_group(){return r.__wbg_get_wasmfpdomain_log_size_of_group(this.__wbg_ptr)}set log_size_of_group(e){r.__wbg_set_wasmfpdomain_log_size_of_group(this.__wbg_ptr,e)}get group_gen(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfqdomain_group_gen(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set group_gen(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfqdomain_group_gen(this.__wbg_ptr,t,a)}constructor(e,t){const a=E(t,r.__wbindgen_malloc),n=y,i=r.wasmfqdomain_new(e,a,n);return te.__wrap(i)}}e.exports.WasmFqDomain=te;class ae{static __wrap(e){e>>>=0;const t=Object.create(ae.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmfqgate_free(e)}get typ(){return r.__wbg_get_wasmfpgate_typ(this.__wbg_ptr)>>>0}set typ(e){r.__wbg_set_wasmfpgate_typ(this.__wbg_ptr,e)}get wires(){const e=r.__wbg_get_wasmfpgate_wires(this.__wbg_ptr);return ye.__wrap(e)}set wires(e){N(e,ye);var t=e.__destroy_into_raw();r.__wbg_set_wasmfpgate_wires(this.__wbg_ptr,t)}constructor(e,t,a){N(t,ye);var n=t.__destroy_into_raw();const i=E(a,r.__wbindgen_malloc),o=y,p=r.wasmfqgate_new(e,n,i,o);return ae.__wrap(p)}}e.exports.WasmFqGate=ae;class ne{static __wrap(e){e>>>=0;const t=Object.create(ne.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmfqgatevector_free(e)}}e.exports.WasmFqGateVector=ne;class re{static __wrap(e){e>>>=0;const t=Object.create(re.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmfqlookupcommitments_free(e)}constructor(e,t,a){const n=B(e,r.__wbindgen_malloc),i=y;N(t,_e);var o=t.__destroy_into_raw();let p=0;I(a)||(N(a,_e),p=a.__destroy_into_raw());const s=r.wasmfqlookupcommitments_new(n,i,o,p);return re.__wrap(s)}get sorted(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.wasmfqlookupcommitments_sorted(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=F(e,t).slice();return r.__wbindgen_free(e,4*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}get aggreg(){const e=r.wasmfqlookupcommitments_aggreg(this.__wbg_ptr);return _e.__wrap(e)}get runtime(){const e=r.wasmfplookupselectors_xor(this.__wbg_ptr);return 0===e?void 0:_e.__wrap(e)}set sorted(e){const t=B(e,r.__wbindgen_malloc),a=y;r.wasmfqlookupcommitments_set_sorted(this.__wbg_ptr,t,a)}set aggreg(e){N(e,_e);var t=e.__destroy_into_raw();r.wasmfqlookupcommitments_set_aggreg(this.__wbg_ptr,t)}set runtime(e){let t=0;I(e)||(N(e,_e),t=e.__destroy_into_raw()),r.wasmfplookupselectors_set_xor(this.__wbg_ptr,t)}}e.exports.WasmFqLookupCommitments=re;class ie{static __wrap(e){e>>>=0;const t=Object.create(ie.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmfqlookupselectors_free(e)}constructor(e,t,a,n){let i=0;I(e)||(N(e,_e),i=e.__destroy_into_raw());let o=0;I(t)||(N(t,_e),o=t.__destroy_into_raw());let p=0;I(a)||(N(a,_e),p=a.__destroy_into_raw());let s=0;I(n)||(N(n,_e),s=n.__destroy_into_raw());const d=r.wasmfplookupselectors_new(i,o,p,s);return ie.__wrap(d)}get xor(){const e=r.wasmfplookupselectors_xor(this.__wbg_ptr);return 0===e?void 0:_e.__wrap(e)}set xor(e){let t=0;I(e)||(N(e,_e),t=e.__destroy_into_raw()),r.wasmfplookupselectors_set_xor(this.__wbg_ptr,t)}get lookup(){const e=r.wasmfplookupselectors_lookup(this.__wbg_ptr);return 0===e?void 0:_e.__wrap(e)}set lookup(e){let t=0;I(e)||(N(e,_e),t=e.__destroy_into_raw()),r.wasmfplookupselectors_set_lookup(this.__wbg_ptr,t)}get ffmul(){const e=r.wasmfplookupselectors_ffmul(this.__wbg_ptr);return 0===e?void 0:_e.__wrap(e)}set ffmul(e){let t=0;I(e)||(N(e,_e),t=e.__destroy_into_raw()),r.wasmfplookupselectors_set_ffmul(this.__wbg_ptr,t)}get range_check(){const e=r.wasmfplookupselectors_range_check(this.__wbg_ptr);return 0===e?void 0:_e.__wrap(e)}set range_check(e){let t=0;I(e)||(N(e,_e),t=e.__destroy_into_raw()),r.wasmfplookupselectors_set_range_check(this.__wbg_ptr,t)}}e.exports.WasmFqLookupSelectors=ie;class oe{static __wrap(e){e>>>=0;const t=Object.create(oe.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmfqlookupverifierindex_free(e)}get joint_lookup_used(){return 0!==r.__wbg_get_wasmfplookupverifierindex_joint_lookup_used(this.__wbg_ptr)}set joint_lookup_used(e){r.__wbg_set_wasmfplookupverifierindex_joint_lookup_used(this.__wbg_ptr,e)}constructor(e,t,a,n,i,o){const p=B(t,r.__wbindgen_malloc),s=y;N(a,ie);var d=a.__destroy_into_raw();let l=0;I(n)||(N(n,_e),l=n.__destroy_into_raw()),N(i,O);let _=0;I(o)||(N(o,_e),_=o.__destroy_into_raw());const m=r.wasmfqlookupverifierindex_new(e,p,s,d,l,i.__wbg_ptr,_);return oe.__wrap(m)}get lookup_table(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.wasmfqlookupverifierindex_lookup_table(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=F(e,t).slice();return r.__wbindgen_free(e,4*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set lookup_table(e){const t=B(e,r.__wbindgen_malloc),a=y;r.wasmfqlookupverifierindex_set_lookup_table(this.__wbg_ptr,t,a)}get lookup_selectors(){const e=r.wasmfplookupverifierindex_lookup_selectors(this.__wbg_ptr);return ie.__wrap(e)}set lookup_selectors(e){N(e,ie);var t=e.__destroy_into_raw();r.wasmfplookupverifierindex_set_lookup_selectors(this.__wbg_ptr,t)}get table_ids(){const e=r.wasmfplookupverifierindex_table_ids(this.__wbg_ptr);return 0===e?void 0:_e.__wrap(e)}set table_ids(e){let t=0;I(e)||(N(e,_e),t=e.__destroy_into_raw()),r.wasmfplookupverifierindex_set_table_ids(this.__wbg_ptr,t)}get lookup_info(){const e=r.wasmfplookupverifierindex_lookup_info(this.__wbg_ptr);return O.__wrap(e)}set lookup_info(e){N(e,O);var t=e.__destroy_into_raw();r.wasmfplookupverifierindex_set_lookup_info(this.__wbg_ptr,t)}get runtime_tables_selector(){const e=r.wasmfplookupverifierindex_runtime_tables_selector(this.__wbg_ptr);return 0===e?void 0:_e.__wrap(e)}set runtime_tables_selector(e){let t=0;I(e)||(N(e,_e),t=e.__destroy_into_raw()),r.wasmfplookupverifierindex_set_runtime_tables_selector(this.__wbg_ptr,t)}}e.exports.WasmFqLookupVerifierIndex=oe;class pe{static __wrap(e){e>>>=0;const t=Object.create(pe.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmfqopeningproof_free(e)}get z1(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfqdomain_group_gen(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set z1(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfqdomain_group_gen(this.__wbg_ptr,t,a)}get z2(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfqopeningproof_z2(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set z2(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfqopeningproof_z2(this.__wbg_ptr,t,a)}constructor(e,t,a,n,i,o){const p=B(e,r.__wbindgen_malloc),s=y,d=B(t,r.__wbindgen_malloc),l=y;N(a,we);var _=a.__destroy_into_raw();const m=E(n,r.__wbindgen_malloc),u=y,c=E(i,r.__wbindgen_malloc),f=y;N(o,we);var h=o.__destroy_into_raw();const g=r.wasmfqopeningproof_new(p,s,d,l,_,m,u,c,f,h);return pe.__wrap(g)}get lr_0(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.wasmfqopeningproof_lr_0(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=F(e,t).slice();return r.__wbindgen_free(e,4*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}get lr_1(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.wasmfqopeningproof_lr_1(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=F(e,t).slice();return r.__wbindgen_free(e,4*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}get delta(){const e=r.wasmfqopeningproof_delta(this.__wbg_ptr);return we.__wrap(e)}get sg(){const e=r.wasmfqopeningproof_sg(this.__wbg_ptr);return we.__wrap(e)}set lr_0(e){const t=B(e,r.__wbindgen_malloc),a=y;r.wasmfqopeningproof_set_lr_0(this.__wbg_ptr,t,a)}set lr_1(e){const t=B(e,r.__wbindgen_malloc),a=y;r.wasmfqopeningproof_set_lr_1(this.__wbg_ptr,t,a)}set delta(e){N(e,we);var t=e.__destroy_into_raw();r.wasmfqopeningproof_set_delta(this.__wbg_ptr,t)}set sg(e){N(e,we);var t=e.__destroy_into_raw();r.wasmfqopeningproof_set_sg(this.__wbg_ptr,t)}}e.exports.WasmFqOpeningProof=pe;class se{static __wrap(e){e>>>=0;const t=Object.create(se.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmfqoracles_free(e)}get o(){const e=r.__wbg_get_wasmfqoracles_o(this.__wbg_ptr);return ce.__wrap(e)}set o(e){N(e,ce);var t=e.__destroy_into_raw();r.__wbg_set_wasmfqoracles_o(this.__wbg_ptr,t)}get p_eval0(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfqoracles_p_eval0(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set p_eval0(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfqoracles_p_eval0(this.__wbg_ptr,t,a)}get p_eval1(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfqoracles_p_eval1(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set p_eval1(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfqoracles_p_eval1(this.__wbg_ptr,t,a)}get digest_before_evaluations(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfqoracles_digest_before_evaluations(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set digest_before_evaluations(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfqoracles_digest_before_evaluations(this.__wbg_ptr,t,a)}constructor(e,t,a,n,i){N(e,ce);var o=e.__destroy_into_raw();const p=E(t,r.__wbindgen_malloc),s=y,d=E(a,r.__wbindgen_malloc),l=y,_=E(n,r.__wbindgen_malloc),m=y,u=E(i,r.__wbindgen_malloc),c=y,f=r.wasmfqoracles_new(o,p,s,d,l,_,m,u,c);return se.__wrap(f)}get opening_prechallenges(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.wasmfqoracles_opening_prechallenges(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set opening_prechallenges(e){const t=E(e,r.__wbindgen_malloc),a=y;r.wasmfqoracles_set_opening_prechallenges(this.__wbg_ptr,t,a)}}e.exports.WasmFqOracles=se;class de{static __wrap(e){e>>>=0;const t=Object.create(de.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmfqplonkverificationevals_free(e)}constructor(e,t,a,n,i,o,p,s,d,l,_,m,u,c){const f=B(e,r.__wbindgen_malloc),h=y,g=B(t,r.__wbindgen_malloc),w=y;N(a,_e),N(n,_e),N(i,_e),N(o,_e),N(p,_e),N(s,_e);let v=0;I(d)||(N(d,_e),v=d.__destroy_into_raw());let b=0;I(l)||(N(l,_e),b=l.__destroy_into_raw());let k=0;I(_)||(N(_,_e),k=_.__destroy_into_raw());let S=0;I(m)||(N(m,_e),S=m.__destroy_into_raw());let x=0;I(u)||(N(u,_e),x=u.__destroy_into_raw());let T=0;I(c)||(N(c,_e),T=c.__destroy_into_raw());const E=r.wasmfqplonkverificationevals_new(f,h,g,w,a.__wbg_ptr,n.__wbg_ptr,i.__wbg_ptr,o.__wbg_ptr,p.__wbg_ptr,s.__wbg_ptr,v,b,k,S,x,T);return de.__wrap(E)}get sigma_comm(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.wasmfqplonkverificationevals_sigma_comm(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=F(e,t).slice();return r.__wbindgen_free(e,4*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set sigma_comm(e){const t=B(e,r.__wbindgen_malloc),a=y;r.wasmfqplonkverificationevals_set_sigma_comm(this.__wbg_ptr,t,a)}get coefficients_comm(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.wasmfqplonkverificationevals_coefficients_comm(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=F(e,t).slice();return r.__wbindgen_free(e,4*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set coefficients_comm(e){const t=B(e,r.__wbindgen_malloc),a=y;r.wasmfqplonkverificationevals_set_coefficients_comm(this.__wbg_ptr,t,a)}get generic_comm(){const e=r.wasmfpplonkverificationevals_generic_comm(this.__wbg_ptr);return _e.__wrap(e)}set generic_comm(e){N(e,_e);var t=e.__destroy_into_raw();r.wasmfpplonkverificationevals_set_generic_comm(this.__wbg_ptr,t)}get psm_comm(){const e=r.wasmfpplonkverificationevals_psm_comm(this.__wbg_ptr);return _e.__wrap(e)}set psm_comm(e){N(e,_e);var t=e.__destroy_into_raw();r.wasmfpplonkverificationevals_set_psm_comm(this.__wbg_ptr,t)}get complete_add_comm(){const e=r.wasmfpplonkverificationevals_complete_add_comm(this.__wbg_ptr);return _e.__wrap(e)}set complete_add_comm(e){N(e,_e);var t=e.__destroy_into_raw();r.wasmfpplonkverificationevals_set_complete_add_comm(this.__wbg_ptr,t)}get mul_comm(){const e=r.wasmfpplonkverificationevals_mul_comm(this.__wbg_ptr);return _e.__wrap(e)}set mul_comm(e){N(e,_e);var t=e.__destroy_into_raw();r.wasmfpplonkverificationevals_set_mul_comm(this.__wbg_ptr,t)}get emul_comm(){const e=r.wasmfpplonkverificationevals_emul_comm(this.__wbg_ptr);return _e.__wrap(e)}set emul_comm(e){N(e,_e);var t=e.__destroy_into_raw();r.wasmfpplonkverificationevals_set_emul_comm(this.__wbg_ptr,t)}get endomul_scalar_comm(){const e=r.wasmfpplonkverificationevals_endomul_scalar_comm(this.__wbg_ptr);return _e.__wrap(e)}set endomul_scalar_comm(e){N(e,_e);var t=e.__destroy_into_raw();r.wasmfpplonkverificationevals_set_endomul_scalar_comm(this.__wbg_ptr,t)}get xor_comm(){const e=r.wasmfplookupselectors_xor(this.__wbg_ptr);return 0===e?void 0:_e.__wrap(e)}set xor_comm(e){let t=0;I(e)||(N(e,_e),t=e.__destroy_into_raw()),r.wasmfplookupselectors_set_xor(this.__wbg_ptr,t)}get rot_comm(){const e=r.wasmfplookupverifierindex_runtime_tables_selector(this.__wbg_ptr);return 0===e?void 0:_e.__wrap(e)}set rot_comm(e){let t=0;I(e)||(N(e,_e),t=e.__destroy_into_raw()),r.wasmfplookupverifierindex_set_runtime_tables_selector(this.__wbg_ptr,t)}get range_check0_comm(){const e=r.wasmfplookupselectors_lookup(this.__wbg_ptr);return 0===e?void 0:_e.__wrap(e)}set range_check0_comm(e){let t=0;I(e)||(N(e,_e),t=e.__destroy_into_raw()),r.wasmfplookupselectors_set_lookup(this.__wbg_ptr,t)}get range_check1_comm(){const e=r.wasmfplookupselectors_range_check(this.__wbg_ptr);return 0===e?void 0:_e.__wrap(e)}set range_check1_comm(e){let t=0;I(e)||(N(e,_e),t=e.__destroy_into_raw()),r.wasmfplookupselectors_set_range_check(this.__wbg_ptr,t)}get foreign_field_add_comm(){const e=r.wasmfplookupselectors_ffmul(this.__wbg_ptr);return 0===e?void 0:_e.__wrap(e)}set foreign_field_add_comm(e){let t=0;I(e)||(N(e,_e),t=e.__destroy_into_raw()),r.wasmfplookupselectors_set_ffmul(this.__wbg_ptr,t)}get foreign_field_mul_comm(){const e=r.wasmfplookupverifierindex_table_ids(this.__wbg_ptr);return 0===e?void 0:_e.__wrap(e)}set foreign_field_mul_comm(e){let t=0;I(e)||(N(e,_e),t=e.__destroy_into_raw()),r.wasmfplookupverifierindex_set_table_ids(this.__wbg_ptr,t)}}e.exports.WasmFqPlonkVerificationEvals=de;class le{static __wrap(e){e>>>=0;const t=Object.create(le.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmfqplonkverifierindex_free(e)}get domain(){const e=r.__wbg_get_wasmfpplonkverifierindex_domain(this.__wbg_ptr);return te.__wrap(e)}set domain(e){N(e,te);var t=e.__destroy_into_raw();r.__wbg_set_wasmfpplonkverifierindex_domain(this.__wbg_ptr,t)}get max_poly_size(){return r.__wbg_get_wasmfpplonkverifierindex_max_poly_size(this.__wbg_ptr)}set max_poly_size(e){r.__wbg_set_wasmfpplonkverifierindex_max_poly_size(this.__wbg_ptr,e)}get public_(){return r.__wbg_get_wasmfpplonkverifierindex_public_(this.__wbg_ptr)}set public_(e){r.__wbg_set_wasmfpplonkverifierindex_public_(this.__wbg_ptr,e)}get prev_challenges(){return r.__wbg_get_wasmfpplonkverifierindex_prev_challenges(this.__wbg_ptr)}set prev_challenges(e){r.__wbg_set_wasmfpplonkverifierindex_prev_challenges(this.__wbg_ptr,e)}get shifts(){const e=r.__wbg_get_wasmfpplonkverifierindex_shifts(this.__wbg_ptr);return he.__wrap(e)}set shifts(e){N(e,he);var t=e.__destroy_into_raw();r.__wbg_set_wasmfpplonkverifierindex_shifts(this.__wbg_ptr,t)}get zk_rows(){return r.__wbg_get_wasmfpplonkverifierindex_zk_rows(this.__wbg_ptr)}set zk_rows(e){r.__wbg_set_wasmfpplonkverifierindex_zk_rows(this.__wbg_ptr,e)}constructor(e,t,a,n,i,o,p,s,d){N(e,te),N(i,ge),N(o,de),N(p,he);let l=0;I(s)||(N(s,oe),l=s.__destroy_into_raw());const _=r.wasmfqplonkverifierindex_new(e.__wbg_ptr,t,a,n,i.__wbg_ptr,o.__wbg_ptr,p.__wbg_ptr,l,d);return le.__wrap(_)}get srs(){const e=r.wasmfpplonkverifierindex_srs(this.__wbg_ptr);return ge.__wrap(e)}set srs(e){N(e,ge);var t=e.__destroy_into_raw();r.wasmfqplonkverifierindex_set_srs(this.__wbg_ptr,t)}get evals(){const e=r.wasmfqplonkverifierindex_evals(this.__wbg_ptr);return de.__wrap(e)}set evals(e){N(e,de);var t=e.__destroy_into_raw();r.wasmfpplonkverifierindex_set_evals(this.__wbg_ptr,t)}get lookup_index(){const e=r.wasmfqplonkverifierindex_lookup_index(this.__wbg_ptr);return 0===e?void 0:oe.__wrap(e)}set lookup_index(e){let t=0;I(e)||(N(e,oe),t=e.__destroy_into_raw()),r.wasmfpplonkverifierindex_set_lookup_index(this.__wbg_ptr,t)}}e.exports.WasmFqPlonkVerifierIndex=le;class _e{static __wrap(e){e>>>=0;const t=Object.create(_e.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmfqpolycomm_free(e)}constructor(e,t){const a=B(e,r.__wbindgen_malloc),n=y;let i=0;I(t)||(N(t,we),i=t.__destroy_into_raw());const o=r.wasmfqpolycomm_new(a,n,i);return _e.__wrap(o)}get unshifted(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.wasmfqpolycomm_unshifted(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=F(e,t).slice();return r.__wbindgen_free(e,4*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set unshifted(e){const t=B(e,r.__wbindgen_malloc),a=y;r.wasmfqpolycomm_set_unshifted(this.__wbg_ptr,t,a)}get shifted(){const e=r.__wbg_get_wasmfppolycomm_shifted(this.__wbg_ptr);return 0===e?void 0:we.__wrap(e)}set shifted(e){let t=0;I(e)||(N(e,we),t=e.__destroy_into_raw()),r.__wbg_set_wasmfppolycomm_shifted(this.__wbg_ptr,t)}}e.exports.WasmFqPolyComm=_e;class me{static __wrap(e){e>>>=0;const t=Object.create(me.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmfqprovercommitments_free(e)}constructor(e,t,a,n){const i=B(e,r.__wbindgen_malloc),o=y;N(t,_e);var p=t.__destroy_into_raw();N(a,_e);var s=a.__destroy_into_raw();let d=0;I(n)||(N(n,re),d=n.__destroy_into_raw());const l=r.wasmfqprovercommitments_new(i,o,p,s,d);return me.__wrap(l)}get w_comm(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.wasmfqprovercommitments_w_comm(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=F(e,t).slice();return r.__wbindgen_free(e,4*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}get z_comm(){const e=r.wasmfqprovercommitments_z_comm(this.__wbg_ptr);return _e.__wrap(e)}get t_comm(){const e=r.wasmfqprovercommitments_t_comm(this.__wbg_ptr);return _e.__wrap(e)}get lookup(){const e=r.wasmfqprovercommitments_lookup(this.__wbg_ptr);return 0===e?void 0:re.__wrap(e)}set w_comm(e){const t=B(e,r.__wbindgen_malloc),a=y;r.wasmfqprovercommitments_set_w_comm(this.__wbg_ptr,t,a)}set z_comm(e){N(e,_e);var t=e.__destroy_into_raw();r.wasmfqprovercommitments_set_z_comm(this.__wbg_ptr,t)}set t_comm(e){N(e,_e);var t=e.__destroy_into_raw();r.wasmfqprovercommitments_set_t_comm(this.__wbg_ptr,t)}set lookup(e){let t=0;I(e)||(N(e,re),t=e.__destroy_into_raw()),r.wasmfqprovercommitments_set_lookup(this.__wbg_ptr,t)}}e.exports.WasmFqProverCommitments=me;class ue{static __wrap(e){e>>>=0;const t=Object.create(ue.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmfqproverproof_free(e)}get ft_eval1(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfqproverproof_ft_eval1(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set ft_eval1(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfqproverproof_ft_eval1(this.__wbg_ptr,t,a)}constructor(e,t,a,n,i,o,p){N(e,me);var s=e.__destroy_into_raw();N(t,pe);var d=t.__destroy_into_raw();const l=E(n,r.__wbindgen_malloc),_=y,m=E(i,r.__wbindgen_malloc),u=y;N(o,Ae);var f=o.__destroy_into_raw();const h=B(p,r.__wbindgen_malloc),g=y,w=r.wasmfqproverproof_new(s,d,c(a),l,_,m,u,f,h,g);return ue.__wrap(w)}get commitments(){const e=r.wasmfqproverproof_commitments(this.__wbg_ptr);return me.__wrap(e)}get proof(){const e=r.wasmfqproverproof_proof(this.__wbg_ptr);return pe.__wrap(e)}get evals(){return u(r.wasmfqproverproof_evals(this.__wbg_ptr))}get public_(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.wasmfqproverproof_public_(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}get prev_challenges_scalars(){const e=r.wasmfqproverproof_prev_challenges_scalars(this.__wbg_ptr);return Ae.__wrap(e)}get prev_challenges_comms(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.wasmfqproverproof_prev_challenges_comms(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=F(e,t).slice();return r.__wbindgen_free(e,4*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set commitments(e){N(e,me);var t=e.__destroy_into_raw();r.wasmfqproverproof_set_commitments(this.__wbg_ptr,t)}set proof(e){N(e,pe);var t=e.__destroy_into_raw();r.wasmfqproverproof_set_proof(this.__wbg_ptr,t)}set evals(e){r.wasmfqproverproof_set_evals(this.__wbg_ptr,c(e))}set public_(e){const t=E(e,r.__wbindgen_malloc),a=y;r.wasmfqproverproof_set_public_(this.__wbg_ptr,t,a)}set prev_challenges_scalars(e){N(e,Ae);var t=e.__destroy_into_raw();r.wasmfqproverproof_set_prev_challenges_scalars(this.__wbg_ptr,t)}set prev_challenges_comms(e){const t=B(e,r.__wbindgen_malloc),a=y;r.wasmfqproverproof_set_prev_challenges_comms(this.__wbg_ptr,t,a)}serialize(){let e,t;try{const i=r.__wbindgen_add_to_stack_pointer(-16);r.wasmfqproverproof_serialize(i,this.__wbg_ptr);var a=x()[i/4+0],n=x()[i/4+1];return e=a,t=n,w(a,n)}finally{r.__wbindgen_add_to_stack_pointer(16),r.__wbindgen_free(e,t,1)}}}e.exports.WasmFqProverProof=ue;class ce{static __wrap(e){e>>>=0;const t=Object.create(ce.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmfqrandomoracles_free(e)}get joint_combiner_chal(){try{const a=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfqrandomoracles_joint_combiner_chal(a,this.__wbg_ptr);var e=x()[a/4+0],t=x()[a/4+1];let n;return 0!==e&&(n=T(e,t).slice(),r.__wbindgen_free(e,1*t)),n}finally{r.__wbindgen_add_to_stack_pointer(16)}}set joint_combiner_chal(e){var t=I(e)?0:E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfqrandomoracles_joint_combiner_chal(this.__wbg_ptr,t,a)}get joint_combiner(){try{const a=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfqrandomoracles_joint_combiner(a,this.__wbg_ptr);var e=x()[a/4+0],t=x()[a/4+1];let n;return 0!==e&&(n=T(e,t).slice(),r.__wbindgen_free(e,1*t)),n}finally{r.__wbindgen_add_to_stack_pointer(16)}}set joint_combiner(e){var t=I(e)?0:E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfqrandomoracles_joint_combiner(this.__wbg_ptr,t,a)}get beta(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfqrandomoracles_beta(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set beta(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfqrandomoracles_beta(this.__wbg_ptr,t,a)}get gamma(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfqrandomoracles_gamma(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set gamma(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfqrandomoracles_gamma(this.__wbg_ptr,t,a)}get alpha_chal(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfqrandomoracles_alpha_chal(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set alpha_chal(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfqrandomoracles_alpha_chal(this.__wbg_ptr,t,a)}get alpha(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfqrandomoracles_alpha(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set alpha(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfqrandomoracles_alpha(this.__wbg_ptr,t,a)}get zeta(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfqrandomoracles_zeta(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set zeta(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfqrandomoracles_zeta(this.__wbg_ptr,t,a)}get v(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfqrandomoracles_v(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set v(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfqrandomoracles_v(this.__wbg_ptr,t,a)}get u(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfqrandomoracles_u(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set u(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfqrandomoracles_u(this.__wbg_ptr,t,a)}get zeta_chal(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfqrandomoracles_zeta_chal(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set zeta_chal(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfqrandomoracles_zeta_chal(this.__wbg_ptr,t,a)}get v_chal(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfqrandomoracles_v_chal(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set v_chal(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfqrandomoracles_v_chal(this.__wbg_ptr,t,a)}get u_chal(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfqrandomoracles_u_chal(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set u_chal(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfqrandomoracles_u_chal(this.__wbg_ptr,t,a)}constructor(e,t,a,n,i,o,p,s,d,l,_,m){var u=I(e)?0:E(e,r.__wbindgen_malloc),c=y,f=I(t)?0:E(t,r.__wbindgen_malloc),h=y;const g=E(a,r.__wbindgen_malloc),w=y,v=E(n,r.__wbindgen_malloc),b=y,k=E(i,r.__wbindgen_malloc),S=y,x=E(o,r.__wbindgen_malloc),T=y,N=E(p,r.__wbindgen_malloc),C=y,A=E(s,r.__wbindgen_malloc),B=y,F=E(d,r.__wbindgen_malloc),q=y,V=E(l,r.__wbindgen_malloc),O=y,P=E(_,r.__wbindgen_malloc),D=y,U=E(m,r.__wbindgen_malloc),z=y,R=r.wasmfqrandomoracles_new(u,c,f,h,g,w,v,b,k,S,x,T,N,C,A,B,F,q,V,O,P,D,U,z);return ce.__wrap(R)}}e.exports.WasmFqRandomOracles=ce;class fe{static __wrap(e){e>>>=0;const t=Object.create(fe.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmfqruntimetable_free(e)}constructor(e,t){const a=E(t,r.__wbindgen_malloc),n=y,i=r.wasmfqruntimetable_new(e,a,n);return fe.__wrap(i)}}e.exports.WasmFqRuntimeTable=fe;class he{static __wrap(e){e>>>=0;const t=Object.create(he.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmfqshifts_free(e)}get s0(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfqdomain_group_gen(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set s0(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfqdomain_group_gen(this.__wbg_ptr,t,a)}get s1(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfqopeningproof_z2(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set s1(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfqopeningproof_z2(this.__wbg_ptr,t,a)}get s2(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfqshifts_s2(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set s2(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfqshifts_s2(this.__wbg_ptr,t,a)}get s3(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfqshifts_s3(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set s3(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfqshifts_s3(this.__wbg_ptr,t,a)}get s4(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfqshifts_s4(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set s4(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfqshifts_s4(this.__wbg_ptr,t,a)}get s5(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfqshifts_s5(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set s5(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfqshifts_s5(this.__wbg_ptr,t,a)}get s6(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmfqshifts_s6(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set s6(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmfqshifts_s6(this.__wbg_ptr,t,a)}constructor(e,t,a,n,i,o,p){const s=E(e,r.__wbindgen_malloc),d=y,l=E(t,r.__wbindgen_malloc),_=y,m=E(a,r.__wbindgen_malloc),u=y,c=E(n,r.__wbindgen_malloc),f=y,h=E(i,r.__wbindgen_malloc),g=y,w=E(o,r.__wbindgen_malloc),v=y,b=E(p,r.__wbindgen_malloc),k=y,S=r.wasmfqshifts_new(s,d,l,_,m,u,c,f,h,g,w,v,b,k);return he.__wrap(S)}}e.exports.WasmFqShifts=he;class ge{static __wrap(e){e>>>=0;const t=Object.create(ge.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmfqsrs_free(e)}}e.exports.WasmFqSrs=ge;class we{static __wrap(e){e>>>=0;const t=Object.create(we.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmgpallas_free(e)}get x(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmgpallas_x(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set x(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmgpallas_x(this.__wbg_ptr,t,a)}get y(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmgpallas_y(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set y(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmgpallas_y(this.__wbg_ptr,t,a)}get infinity(){return 0!==r.__wbg_get_wasmgpallas_infinity(this.__wbg_ptr)}set infinity(e){r.__wbg_set_wasmgpallas_infinity(this.__wbg_ptr,e)}}e.exports.WasmGPallas=we;class ve{static __wrap(e){e>>>=0;const t=Object.create(ve.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmgvesta_free(e)}get x(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmgvesta_x(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set x(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmgvesta_x(this.__wbg_ptr,t,a)}get y(){try{const n=r.__wbindgen_add_to_stack_pointer(-16);r.__wbg_get_wasmgvesta_y(n,this.__wbg_ptr);var e=x()[n/4+0],t=x()[n/4+1],a=T(e,t).slice();return r.__wbindgen_free(e,1*t),a}finally{r.__wbindgen_add_to_stack_pointer(16)}}set y(e){const t=E(e,r.__wbindgen_malloc),a=y;r.__wbg_set_wasmgvesta_y(this.__wbg_ptr,t,a)}get infinity(){return 0!==r.__wbg_get_wasmgpallas_infinity(this.__wbg_ptr)}set infinity(e){r.__wbg_set_wasmgpallas_infinity(this.__wbg_ptr,e)}}e.exports.WasmGVesta=ve;class ye{static __wrap(e){e>>>=0;const t=Object.create(ye.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmgatewires_free(e)}get 0(){const e=r.__wbg_get_wasmgatewires_0(this.__wbg_ptr);return qe.__wrap(e)}set 0(e){N(e,qe);var t=e.__destroy_into_raw();r.__wbg_set_wasmgatewires_0(this.__wbg_ptr,t)}get 1(){const e=r.__wbg_get_wasmgatewires_1(this.__wbg_ptr);return qe.__wrap(e)}set 1(e){N(e,qe);var t=e.__destroy_into_raw();r.__wbg_set_wasmgatewires_1(this.__wbg_ptr,t)}get 2(){const e=r.__wbg_get_wasmgatewires_2(this.__wbg_ptr);return qe.__wrap(e)}set 2(e){N(e,qe);var t=e.__destroy_into_raw();r.__wbg_set_wasmgatewires_2(this.__wbg_ptr,t)}get 3(){const e=r.__wbg_get_wasmgatewires_3(this.__wbg_ptr);return qe.__wrap(e)}set 3(e){N(e,qe);var t=e.__destroy_into_raw();r.__wbg_set_wasmgatewires_3(this.__wbg_ptr,t)}get 4(){const e=r.__wbg_get_wasmgatewires_4(this.__wbg_ptr);return qe.__wrap(e)}set 4(e){N(e,qe);var t=e.__destroy_into_raw();r.__wbg_set_wasmgatewires_4(this.__wbg_ptr,t)}get 5(){const e=r.__wbg_get_wasmgatewires_5(this.__wbg_ptr);return qe.__wrap(e)}set 5(e){N(e,qe);var t=e.__destroy_into_raw();r.__wbg_set_wasmgatewires_5(this.__wbg_ptr,t)}get 6(){const e=r.__wbg_get_wasmgatewires_6(this.__wbg_ptr);return qe.__wrap(e)}set 6(e){N(e,qe);var t=e.__destroy_into_raw();r.__wbg_set_wasmgatewires_6(this.__wbg_ptr,t)}constructor(e,t,a,n,i,o,p){N(e,qe);var s=e.__destroy_into_raw();N(t,qe);var d=t.__destroy_into_raw();N(a,qe);var l=a.__destroy_into_raw();N(n,qe);var _=n.__destroy_into_raw();N(i,qe);var m=i.__destroy_into_raw();N(o,qe);var u=o.__destroy_into_raw();N(p,qe);var c=p.__destroy_into_raw();const f=r.wasmgatewires_new(s,d,l,_,m,u,c);return ye.__wrap(f)}}e.exports.WasmGateWires=ye;class be{static __wrap(e){e>>>=0;const t=Object.create(be.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmpallasgprojective_free(e)}}e.exports.WasmPallasGProjective=be;class ke{static __wrap(e){e>>>=0;const t=Object.create(ke.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmpastafplookuptable_free(e)}constructor(e,t){N(t,Ne);var a=t.__destroy_into_raw();const n=r.wasmpastafplookuptable_new(e,a);return ke.__wrap(n)}}e.exports.WasmPastaFpLookupTable=ke;class Se{static __wrap(e){e>>>=0;const t=Object.create(Se.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmpastafpplonkindex_free(e)}}e.exports.WasmPastaFpPlonkIndex=Se;class xe{static __wrap(e){e>>>=0;const t=Object.create(xe.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmpastafpruntimetablecfg_free(e)}constructor(e,t){const a=E(t,r.__wbindgen_malloc),n=y,i=r.wasmpastafpruntimetablecfg_new(e,a,n);return xe.__wrap(i)}}e.exports.WasmPastaFpRuntimeTableCfg=xe;class Te{static __wrap(e){e>>>=0;const t=Object.create(Te.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmpastafqlookuptable_free(e)}constructor(e,t){N(t,Ae);var a=t.__destroy_into_raw();const n=r.wasmpastafplookuptable_new(e,a);return Te.__wrap(n)}}e.exports.WasmPastaFqLookupTable=Te;class Ee{static __wrap(e){e>>>=0;const t=Object.create(Ee.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmpastafqplonkindex_free(e)}}e.exports.WasmPastaFqPlonkIndex=Ee;class Ie{static __wrap(e){e>>>=0;const t=Object.create(Ie.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmpastafqruntimetablecfg_free(e)}constructor(e,t){const a=E(t,r.__wbindgen_malloc),n=y,i=r.wasmfqruntimetable_new(e,a,n);return Ie.__wrap(i)}}e.exports.WasmPastaFqRuntimeTableCfg=Ie;class Ne{static __wrap(e){e>>>=0;const t=Object.create(Ne.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmvecvecfp_free(e)}constructor(e){const t=r.wasmvecvecfp_create(e);return Ne.__wrap(t)}push(e){const t=E(e,r.__wbindgen_malloc),a=y;r.wasmvecvecfp_push(this.__wbg_ptr,t,a)}get(e){try{const i=r.__wbindgen_add_to_stack_pointer(-16);r.wasmvecvecfp_get(i,this.__wbg_ptr,e);var t=x()[i/4+0],a=x()[i/4+1],n=T(t,a).slice();return r.__wbindgen_free(t,1*a),n}finally{r.__wbindgen_add_to_stack_pointer(16)}}set(e,t){const a=E(t,r.__wbindgen_malloc),n=y;r.wasmvecvecfp_set(this.__wbg_ptr,e,a,n)}}e.exports.WasmVecVecFp=Ne;class Ce{static __wrap(e){e>>>=0;const t=Object.create(Ce.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmvecvecfppolycomm_free(e)}constructor(e){const t=r.wasmvecvecfp_create(e);return Ce.__wrap(t)}push(e){const t=B(e,r.__wbindgen_malloc),a=y;r.wasmvecvecfppolycomm_push(this.__wbg_ptr,t,a)}}e.exports.WasmVecVecFpPolyComm=Ce;class Ae{static __wrap(e){e>>>=0;const t=Object.create(Ae.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmvecvecfq_free(e)}constructor(e){const t=r.wasmvecvecfq_create(e);return Ae.__wrap(t)}push(e){const t=E(e,r.__wbindgen_malloc),a=y;r.wasmvecvecfq_push(this.__wbg_ptr,t,a)}get(e){try{const i=r.__wbindgen_add_to_stack_pointer(-16);r.wasmvecvecfq_get(i,this.__wbg_ptr,e);var t=x()[i/4+0],a=x()[i/4+1],n=T(t,a).slice();return r.__wbindgen_free(t,1*a),n}finally{r.__wbindgen_add_to_stack_pointer(16)}}set(e,t){const a=E(t,r.__wbindgen_malloc),n=y;r.wasmvecvecfq_set(this.__wbg_ptr,e,a,n)}}e.exports.WasmVecVecFq=Ae;class Be{static __wrap(e){e>>>=0;const t=Object.create(Be.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmvecvecfqpolycomm_free(e)}constructor(e){const t=r.wasmvecvecfqpolycomm_create(e);return Be.__wrap(t)}push(e){const t=B(e,r.__wbindgen_malloc),a=y;r.wasmvecvecfqpolycomm_push(this.__wbg_ptr,t,a)}}e.exports.WasmVecVecFqPolyComm=Be;class Fe{static __wrap(e){e>>>=0;const t=Object.create(Fe.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wasmvestagprojective_free(e)}}e.exports.WasmVestaGProjective=Fe;class qe{static __wrap(e){e>>>=0;const t=Object.create(qe.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();r.__wbg_wire_free(e)}get row(){return r.__wbg_get_wire_row(this.__wbg_ptr)>>>0}set row(e){r.__wbg_set_wire_row(this.__wbg_ptr,e)}get col(){return r.__wbg_get_wire_col(this.__wbg_ptr)>>>0}set col(e){r.__wbg_set_wire_col(this.__wbg_ptr,e)}static create(e,t){const a=r.wire_create(e,t);return qe.__wrap(a)}}e.exports.Wire=qe,e.exports.__wbindgen_object_drop_ref=function(e){u(e)},e.exports.__wbindgen_number_new=function(e){return c(e)},e.exports.__wbindgen_error_new=function(e,t){return c(new Error(w(e,t)))},e.exports.__wbg_alert_ceb64c1bad1f3790=function(e,t){alert(w(e,t))},e.exports.__wbg_log_bb81d0229855b402=function(e,t){console.log(w(e,t))},e.exports.__wbindgen_string_new=function(e,t){return c(w(e,t))},e.exports.__wbg_startWorkers_f430e3766320935f=function(e,t,a){return c(startWorkers(u(e),u(t),D.__wrap(a)))},e.exports.__wbg_terminateWorkers_bf82de78d64704cb=function(){return c(terminateWorkers())},e.exports.__wbg_new_abda76e883ba8a5f=function(){return c(new Error)},e.exports.__wbg_stack_658279fe44541cf6=function(e,t){const a=k(_(t).stack,r.__wbindgen_malloc,r.__wbindgen_realloc),n=y;x()[e/4+1]=n,x()[e/4+0]=a},e.exports.__wbg_error_f851667af71bcfc6=function(e,t){let a,n;try{a=e,n=t,console.error(w(e,t))}finally{r.__wbindgen_free(a,n,1)}},e.exports.__wbindgen_is_object=function(e){const t=_(e);return"object"==typeof t&&null!==t},e.exports.__wbindgen_object_clone_ref=function(e){return c(_(e))},e.exports.__wbg_crypto_c48a774b022d20ac=function(e){return c(_(e).crypto)},e.exports.__wbg_process_298734cf255a885d=function(e){return c(_(e).process)},e.exports.__wbg_versions_e2e78e134e3e5d01=function(e){return c(_(e).versions)},e.exports.__wbg_node_1cd7a5d853dbea79=function(e){return c(_(e).node)},e.exports.__wbindgen_is_string=function(e){return"string"==typeof _(e)},e.exports.__wbg_msCrypto_bcb970640f50a1e8=function(e){return c(_(e).msCrypto)},e.exports.__wbg_require_8f08ceecec0f4fee=function(){return q((function(){return c(e.require)}),arguments)},e.exports.__wbindgen_is_function=function(e){return"function"==typeof _(e)},e.exports.__wbg_getRandomValues_37fa2ca9e4e07fab=function(){return q((function(e,t){_(e).getRandomValues(_(t))}),arguments)},e.exports.__wbg_randomFillSync_dc1e9a60c158336d=function(){return q((function(e,t){_(e).randomFillSync(u(t))}),arguments)},e.exports.__wbg_get_44be0491f933a435=function(e,t){return c(_(e)[t>>>0])},e.exports.__wbg_length_fff51ee6522a1a18=function(e){return _(e).length},e.exports.__wbg_new_898a68150f225f2e=function(){return c(new Array)},e.exports.__wbg_newnoargs_581967eacc0e2604=function(e,t){return c(new Function(w(e,t)))},e.exports.__wbg_call_cb65541d95d71282=function(){return q((function(e,t){return c(_(e).call(_(t)))}),arguments)},e.exports.__wbg_self_1ff1d729e9aae938=function(){return q((function(){return c(self.self)}),arguments)},e.exports.__wbg_window_5f4faef6c12b79ec=function(){return q((function(){return c(window.window)}),arguments)},e.exports.__wbg_globalThis_1d39714405582d3c=function(){return q((function(){return c(globalThis.globalThis)}),arguments)},e.exports.__wbg_global_651f05c6a0944d1c=function(){return q((function(){return c(global.global)}),arguments)},e.exports.__wbindgen_is_undefined=function(e){return void 0===_(e)},e.exports.__wbg_set_502d29070ea18557=function(e,t,a){_(e)[t>>>0]=u(a)},e.exports.__wbg_isArray_4c24b343cb13cfb1=function(e){return Array.isArray(_(e))},e.exports.__wbg_instanceof_ArrayBuffer_39ac22089b74fddb=function(e){let t;try{t=_(e)instanceof ArrayBuffer}catch{t=!1}return t},e.exports.__wbg_call_01734de55d61e11d=function(){return q((function(e,t,a){return c(_(e).call(_(t),_(a)))}),arguments)},e.exports.__wbg_buffer_085ec1f694018c4f=function(e){return c(_(e).buffer)},e.exports.__wbg_newwithbyteoffsetandlength_6da8e527659b86aa=function(e,t,a){return c(new Uint8Array(_(e),t>>>0,a>>>0))},e.exports.__wbg_new_8125e318e6245eed=function(e){return c(new Uint8Array(_(e)))},e.exports.__wbg_set_5cf90238115182c3=function(e,t,a){_(e).set(_(t),a>>>0)},e.exports.__wbg_length_72e2208bbc0efc61=function(e){return _(e).length},e.exports.__wbg_instanceof_Uint8Array_d8d9cb2b8e8ac1d4=function(e){let t;try{t=_(e)instanceof Uint8Array}catch{t=!1}return t},e.exports.__wbg_newwithlength_e5d69174d6984cd7=function(e){return c(new Uint8Array(e>>>0))},e.exports.__wbg_subarray_13db269f57aa838d=function(e,t,a){return c(_(e).subarray(t>>>0,a>>>0))},e.exports.__wbindgen_debug_string=function(e,t){const a=k(v(_(t)),r.__wbindgen_malloc,r.__wbindgen_realloc),n=y;x()[e/4+1]=n,x()[e/4+0]=a},e.exports.__wbindgen_throw=function(e,t){throw new Error(w(e,t))},e.exports.__wbindgen_memory=function(){return c(r.memory)};const Ve=a(928).join(__dirname,"plonk_wasm_bg.wasm"),Oe=a(896).readFileSync(Ve),Pe=new WebAssembly.Module(Oe),De=new WebAssembly.Instance(Pe,n);r=De.exports,e.exports.__wasm=r,r.__wbindgen_start()},175:(e,t,a)=>{"use strict";a.r(t),a.d(t,{AbortError:()=>J,FetchError:()=>u,Headers:()=>A,Request:()=>K,Response:()=>U,default:()=>Y});const n=require("stream"),r=require("http");var i=a(16),o=a(417);const p=require("https"),s=require("zlib"),d=n.Readable,l=Symbol("buffer"),_=Symbol("type");class m{constructor(){this[_]="";const e=arguments[0],t=arguments[1],a=[];let n=0;if(e){const t=e,r=Number(t.length);for(let e=0;e<r;e++){const r=t[e];let i;i=r instanceof Buffer?r:ArrayBuffer.isView(r)?Buffer.from(r.buffer,r.byteOffset,r.byteLength):r instanceof ArrayBuffer?Buffer.from(r):r instanceof m?r[l]:Buffer.from("string"==typeof r?r:String(r)),n+=i.length,a.push(i)}}this[l]=Buffer.concat(a);let r=t&&void 0!==t.type&&String(t.type).toLowerCase();r&&!/[^\u0020-\u007E]/.test(r)&&(this[_]=r)}get size(){return this[l].length}get type(){return this[_]}text(){return Promise.resolve(this[l].toString())}arrayBuffer(){const e=this[l],t=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return Promise.resolve(t)}stream(){const e=new d;return e._read=function(){},e.push(this[l]),e.push(null),e}toString(){return"[object Blob]"}slice(){const e=this.size,t=arguments[0],a=arguments[1];let n,r;n=void 0===t?0:t<0?Math.max(e+t,0):Math.min(t,e),r=void 0===a?e:a<0?Math.max(e+a,0):Math.min(a,e);const i=Math.max(r-n,0),o=this[l].slice(n,n+i),p=new m([],{type:arguments[2]});return p[l]=o,p}}function u(e,t,a){Error.call(this,e),this.message=e,this.type=t,a&&(this.code=this.errno=a.code),Error.captureStackTrace(this,this.constructor)}let c;Object.defineProperties(m.prototype,{size:{enumerable:!0},type:{enumerable:!0},slice:{enumerable:!0}}),Object.defineProperty(m.prototype,Symbol.toStringTag,{value:"Blob",writable:!1,enumerable:!1,configurable:!0}),u.prototype=Object.create(Error.prototype),u.prototype.constructor=u,u.prototype.name="FetchError";try{c=require("encoding").convert}catch(e){}const f=Symbol("Body internals"),h=n.PassThrough;function g(e){var t=this,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=a.size;let i=void 0===r?0:r;var o=a.timeout;let p=void 0===o?0:o;null==e?e=null:v(e)?e=Buffer.from(e.toString()):y(e)||Buffer.isBuffer(e)||("[object ArrayBuffer]"===Object.prototype.toString.call(e)?e=Buffer.from(e):ArrayBuffer.isView(e)?e=Buffer.from(e.buffer,e.byteOffset,e.byteLength):e instanceof n||(e=Buffer.from(String(e)))),this[f]={body:e,disturbed:!1,error:null},this.size=i,this.timeout=p,e instanceof n&&e.on("error",(function(e){const a="AbortError"===e.name?e:new u(`Invalid response body while trying to fetch ${t.url}: ${e.message}`,"system",e);t[f].error=a}))}function w(){var e=this;if(this[f].disturbed)return g.Promise.reject(new TypeError(`body used already for: ${this.url}`));if(this[f].disturbed=!0,this[f].error)return g.Promise.reject(this[f].error);let t=this.body;if(null===t)return g.Promise.resolve(Buffer.alloc(0));if(y(t)&&(t=t.stream()),Buffer.isBuffer(t))return g.Promise.resolve(t);if(!(t instanceof n))return g.Promise.resolve(Buffer.alloc(0));let a=[],r=0,i=!1;return new g.Promise((function(n,o){let p;e.timeout&&(p=setTimeout((function(){i=!0,o(new u(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,"body-timeout"))}),e.timeout)),t.on("error",(function(t){"AbortError"===t.name?(i=!0,o(t)):o(new u(`Invalid response body while trying to fetch ${e.url}: ${t.message}`,"system",t))})),t.on("data",(function(t){if(!i&&null!==t){if(e.size&&r+t.length>e.size)return i=!0,void o(new u(`content size at ${e.url} over limit: ${e.size}`,"max-size"));r+=t.length,a.push(t)}})),t.on("end",(function(){if(!i){clearTimeout(p);try{n(Buffer.concat(a,r))}catch(t){o(new u(`Could not create Buffer from response body for ${e.url}: ${t.message}`,"system",t))}}}))}))}function v(e){return"object"==typeof e&&"function"==typeof e.append&&"function"==typeof e.delete&&"function"==typeof e.get&&"function"==typeof e.getAll&&"function"==typeof e.has&&"function"==typeof e.set&&("URLSearchParams"===e.constructor.name||"[object URLSearchParams]"===Object.prototype.toString.call(e)||"function"==typeof e.sort)}function y(e){return"object"==typeof e&&"function"==typeof e.arrayBuffer&&"string"==typeof e.type&&"function"==typeof e.stream&&"function"==typeof e.constructor&&"string"==typeof e.constructor.name&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag])}function b(e){let t,a,r=e.body;if(e.bodyUsed)throw new Error("cannot clone body after it is used");return r instanceof n&&"function"!=typeof r.getBoundary&&(t=new h,a=new h,r.pipe(t),r.pipe(a),e[f].body=t,r=a),r}function k(e){return null===e?null:"string"==typeof e?"text/plain;charset=UTF-8":v(e)?"application/x-www-form-urlencoded;charset=UTF-8":y(e)?e.type||null:Buffer.isBuffer(e)||"[object ArrayBuffer]"===Object.prototype.toString.call(e)||ArrayBuffer.isView(e)?null:"function"==typeof e.getBoundary?`multipart/form-data;boundary=${e.getBoundary()}`:e instanceof n?null:"text/plain;charset=UTF-8"}function S(e){const t=e.body;return null===t?0:y(t)?t.size:Buffer.isBuffer(t)?t.length:t&&"function"==typeof t.getLengthSync&&(t._lengthRetrievers&&0==t._lengthRetrievers.length||t.hasKnownLength&&t.hasKnownLength())?t.getLengthSync():null}g.prototype={get body(){return this[f].body},get bodyUsed(){return this[f].disturbed},arrayBuffer(){return w.call(this).then((function(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}))},blob(){let e=this.headers&&this.headers.get("content-type")||"";return w.call(this).then((function(t){return Object.assign(new m([],{type:e.toLowerCase()}),{[l]:t})}))},json(){var e=this;return w.call(this).then((function(t){try{return JSON.parse(t.toString())}catch(t){return g.Promise.reject(new u(`invalid json response body at ${e.url} reason: ${t.message}`,"invalid-json"))}}))},text(){return w.call(this).then((function(e){return e.toString()}))},buffer(){return w.call(this)},textConverted(){var e=this;return w.call(this).then((function(t){return function(e,t){if("function"!=typeof c)throw new Error("The package `encoding` must be installed to use the textConverted() function");const a=t.get("content-type");let n,r,i="utf-8";return a&&(n=/charset=([^;]*)/i.exec(a)),r=e.slice(0,1024).toString(),!n&&r&&(n=/<meta.+?charset=(['"])(.+?)\1/i.exec(r)),!n&&r&&(n=/<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(r),n||(n=/<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(r),n&&n.pop()),n&&(n=/charset=(.*)/i.exec(n.pop()))),!n&&r&&(n=/<\?xml.+?encoding=(['"])(.+?)\1/i.exec(r)),n&&(i=n.pop(),"gb2312"!==i&&"gbk"!==i||(i="gb18030")),c(e,"UTF-8",i).toString()}(t,e.headers)}))}},Object.defineProperties(g.prototype,{body:{enumerable:!0},bodyUsed:{enumerable:!0},arrayBuffer:{enumerable:!0},blob:{enumerable:!0},json:{enumerable:!0},text:{enumerable:!0}}),g.mixIn=function(e){for(const t of Object.getOwnPropertyNames(g.prototype))if(!(t in e)){const a=Object.getOwnPropertyDescriptor(g.prototype,t);Object.defineProperty(e,t,a)}},g.Promise=global.Promise;const x=/[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/,T=/[^\t\x20-\x7e\x80-\xff]/;function E(e){if(e=`${e}`,x.test(e)||""===e)throw new TypeError(`${e} is not a legal HTTP header name`)}function I(e){if(e=`${e}`,T.test(e))throw new TypeError(`${e} is not a legal HTTP header value`)}function N(e,t){t=t.toLowerCase();for(const a in e)if(a.toLowerCase()===t)return a}const C=Symbol("map");class A{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0;if(this[C]=Object.create(null),e instanceof A){const t=e.raw(),a=Object.keys(t);for(const e of a)for(const a of t[e])this.append(e,a)}else if(null==e);else{if("object"!=typeof e)throw new TypeError("Provided initializer must be an object");{const t=e[Symbol.iterator];if(null!=t){if("function"!=typeof t)throw new TypeError("Header pairs must be iterable");const a=[];for(const t of e){if("object"!=typeof t||"function"!=typeof t[Symbol.iterator])throw new TypeError("Each header pair must be iterable");a.push(Array.from(t))}for(const e of a){if(2!==e.length)throw new TypeError("Each header pair must be a name/value tuple");this.append(e[0],e[1])}}else for(const t of Object.keys(e)){const a=e[t];this.append(t,a)}}}}get(e){E(e=`${e}`);const t=N(this[C],e);return void 0===t?null:this[C][t].join(", ")}forEach(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0,a=B(this),n=0;for(;n<a.length;){var r=a[n];const i=r[0],o=r[1];e.call(t,o,i,this),a=B(this),n++}}set(e,t){t=`${t}`,E(e=`${e}`),I(t);const a=N(this[C],e);this[C][void 0!==a?a:e]=[t]}append(e,t){t=`${t}`,E(e=`${e}`),I(t);const a=N(this[C],e);void 0!==a?this[C][a].push(t):this[C][e]=[t]}has(e){return E(e=`${e}`),void 0!==N(this[C],e)}delete(e){E(e=`${e}`);const t=N(this[C],e);void 0!==t&&delete this[C][t]}raw(){return this[C]}keys(){return q(this,"key")}values(){return q(this,"value")}[Symbol.iterator](){return q(this,"key+value")}}function B(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"key+value";return Object.keys(e[C]).sort().map("key"===t?function(e){return e.toLowerCase()}:"value"===t?function(t){return e[C][t].join(", ")}:function(t){return[t.toLowerCase(),e[C][t].join(", ")]})}A.prototype.entries=A.prototype[Symbol.iterator],Object.defineProperty(A.prototype,Symbol.toStringTag,{value:"Headers",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(A.prototype,{get:{enumerable:!0},forEach:{enumerable:!0},set:{enumerable:!0},append:{enumerable:!0},has:{enumerable:!0},delete:{enumerable:!0},keys:{enumerable:!0},values:{enumerable:!0},entries:{enumerable:!0}});const F=Symbol("internal");function q(e,t){const a=Object.create(V);return a[F]={target:e,kind:t,index:0},a}const V=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==V)throw new TypeError("Value of `this` is not a HeadersIterator");var e=this[F];const t=e.target,a=e.kind,n=e.index,r=B(t,a);return n>=r.length?{value:void 0,done:!0}:(this[F].index=n+1,{value:r[n],done:!1})}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));function O(e){const t=Object.assign({__proto__:null},e[C]),a=N(e[C],"Host");return void 0!==a&&(t[a]=t[a][0]),t}Object.defineProperty(V,Symbol.toStringTag,{value:"HeadersIterator",writable:!1,enumerable:!1,configurable:!0});const P=Symbol("Response internals"),D=r.STATUS_CODES;class U{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};g.call(this,e,t);const a=t.status||200,n=new A(t.headers);if(null!=e&&!n.has("Content-Type")){const t=k(e);t&&n.append("Content-Type",t)}this[P]={url:t.url,status:a,statusText:t.statusText||D[a],headers:n,counter:t.counter}}get url(){return this[P].url||""}get status(){return this[P].status}get ok(){return this[P].status>=200&&this[P].status<300}get redirected(){return this[P].counter>0}get statusText(){return this[P].statusText}get headers(){return this[P].headers}clone(){return new U(b(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}}g.mixIn(U.prototype),Object.defineProperties(U.prototype,{url:{enumerable:!0},status:{enumerable:!0},ok:{enumerable:!0},redirected:{enumerable:!0},statusText:{enumerable:!0},headers:{enumerable:!0},clone:{enumerable:!0}}),Object.defineProperty(U.prototype,Symbol.toStringTag,{value:"Response",writable:!1,enumerable:!1,configurable:!0});const z=Symbol("Request internals"),R=i.URL||o.URL,M=i.parse,j=i.format;function $(e){return/^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(e)&&(e=new R(e).toString()),M(e)}const L="destroy"in n.Readable.prototype;function H(e){return"object"==typeof e&&"object"==typeof e[z]}class K{constructor(e){let t,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};H(e)?t=$(e.url):(t=e&&e.href?$(e.href):$(`${e}`),e={});let n=a.method||e.method||"GET";if(n=n.toUpperCase(),(null!=a.body||H(e)&&null!==e.body)&&("GET"===n||"HEAD"===n))throw new TypeError("Request with GET/HEAD method cannot have body");let r=null!=a.body?a.body:H(e)&&null!==e.body?b(e):null;g.call(this,r,{timeout:a.timeout||e.timeout||0,size:a.size||e.size||0});const i=new A(a.headers||e.headers||{});if(null!=r&&!i.has("Content-Type")){const e=k(r);e&&i.append("Content-Type",e)}let o=H(e)?e.signal:null;if("signal"in a&&(o=a.signal),null!=o&&!function(e){const t=e&&"object"==typeof e&&Object.getPrototypeOf(e);return!(!t||"AbortSignal"!==t.constructor.name)}(o))throw new TypeError("Expected signal to be an instanceof AbortSignal");this[z]={method:n,redirect:a.redirect||e.redirect||"follow",headers:i,parsedURL:t,signal:o},this.follow=void 0!==a.follow?a.follow:void 0!==e.follow?e.follow:20,this.compress=void 0!==a.compress?a.compress:void 0===e.compress||e.compress,this.counter=a.counter||e.counter||0,this.agent=a.agent||e.agent}get method(){return this[z].method}get url(){return j(this[z].parsedURL)}get headers(){return this[z].headers}get redirect(){return this[z].redirect}get signal(){return this[z].signal}clone(){return new K(this)}}function J(e){Error.call(this,e),this.type="aborted",this.message=e,Error.captureStackTrace(this,this.constructor)}g.mixIn(K.prototype),Object.defineProperty(K.prototype,Symbol.toStringTag,{value:"Request",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(K.prototype,{method:{enumerable:!0},url:{enumerable:!0},headers:{enumerable:!0},redirect:{enumerable:!0},clone:{enumerable:!0},signal:{enumerable:!0}}),J.prototype=Object.create(Error.prototype),J.prototype.constructor=J,J.prototype.name="AbortError";const W=i.URL||o.URL,G=n.PassThrough;function X(e,t){if(!X.Promise)throw new Error("native promise missing, set fetch.Promise to your favorite alternative");return g.Promise=X.Promise,new X.Promise((function(a,i){const o=new K(e,t),d=function(e){const t=e[z].parsedURL,a=new A(e[z].headers);if(a.has("Accept")||a.set("Accept","*/*"),!t.protocol||!t.hostname)throw new TypeError("Only absolute URLs are supported");if(!/^https?:$/.test(t.protocol))throw new TypeError("Only HTTP(S) protocols are supported");if(e.signal&&e.body instanceof n.Readable&&!L)throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8");let r=null;if(null==e.body&&/^(POST|PUT)$/i.test(e.method)&&(r="0"),null!=e.body){const t=S(e);"number"==typeof t&&(r=String(t))}r&&a.set("Content-Length",r),a.has("User-Agent")||a.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)"),e.compress&&!a.has("Accept-Encoding")&&a.set("Accept-Encoding","gzip,deflate");let i=e.agent;return"function"==typeof i&&(i=i(t)),Object.assign({},t,{method:e.method,headers:O(a),agent:i})}(o),l=("https:"===d.protocol?p:r).request,_=o.signal;let m=null;const c=function(){let e=new J("The user aborted a request.");i(e),o.body&&o.body instanceof n.Readable&&Z(o.body,e),m&&m.body&&m.body.emit("error",e)};if(_&&_.aborted)return void c();const f=function(){c(),w()},h=l(d);let g;function w(){h.abort(),_&&_.removeEventListener("abort",f),clearTimeout(g)}_&&_.addEventListener("abort",f),o.timeout&&h.once("socket",(function(e){g=setTimeout((function(){i(new u(`network timeout at: ${o.url}`,"request-timeout")),w()}),o.timeout)})),h.on("error",(function(e){i(new u(`request to ${o.url} failed, reason: ${e.message}`,"system",e)),m&&m.body&&Z(m.body,e),w()})),function(e,t){let a;e.on("socket",(function(e){a=e})),e.on("response",(function(e){const n=e.headers;"chunked"!==n["transfer-encoding"]||n["content-length"]||e.once("close",(function(e){if(a&&a.listenerCount("data")>0&&!e){const e=new Error("Premature close");e.code="ERR_STREAM_PREMATURE_CLOSE",t(e)}}))}))}(h,(function(e){_&&_.aborted||m&&m.body&&Z(m.body,e)})),parseInt(process.version.substring(1))<14&&h.on("socket",(function(e){e.addListener("close",(function(t){const a=e.listenerCount("data")>0;if(m&&a&&!t&&(!_||!_.aborted)){const e=new Error("Premature close");e.code="ERR_STREAM_PREMATURE_CLOSE",m.body.emit("error",e)}}))})),h.on("response",(function(e){clearTimeout(g);const t=function(e){const t=new A;for(const a of Object.keys(e))if(!x.test(a))if(Array.isArray(e[a]))for(const n of e[a])T.test(n)||(void 0===t[C][a]?t[C][a]=[n]:t[C][a].push(n));else T.test(e[a])||(t[C][a]=[e[a]]);return t}(e.headers);if(X.isRedirect(e.statusCode)){const r=t.get("Location");let p=null;try{p=null===r?null:new W(r,o.url).toString()}catch(e){if("manual"!==o.redirect)return i(new u(`uri requested responds with an invalid redirect URL: ${r}`,"invalid-redirect")),void w()}switch(o.redirect){case"error":return i(new u(`uri requested responds with a redirect, redirect mode is set to error: ${o.url}`,"no-redirect")),void w();case"manual":if(null!==p)try{t.set("Location",p)}catch(e){i(e)}break;case"follow":if(null===p)break;if(o.counter>=o.follow)return i(new u(`maximum redirect reached at: ${o.url}`,"max-redirect")),void w();const r={headers:new A(o.headers),follow:o.follow,counter:o.counter+1,agent:o.agent,compress:o.compress,method:o.method,body:o.body,signal:o.signal,timeout:o.timeout,size:o.size};if(!function(e,t){const a=new W(t).hostname,n=new W(e).hostname;return a===n||"."===a[a.length-n.length-1]&&a.endsWith(n)}(o.url,p)||(n=o.url,new W(p).protocol!==new W(n).protocol))for(const e of["authorization","www-authenticate","cookie","cookie2"])r.headers.delete(e);return 303!==e.statusCode&&o.body&&null===S(o)?(i(new u("Cannot follow redirect with body being a readable stream","unsupported-redirect")),void w()):(303!==e.statusCode&&(301!==e.statusCode&&302!==e.statusCode||"POST"!==o.method)||(r.method="GET",r.body=void 0,r.headers.delete("content-length")),a(X(new K(p,r))),void w())}}var n;e.once("end",(function(){_&&_.removeEventListener("abort",f)}));let r=e.pipe(new G);const p={url:o.url,status:e.statusCode,statusText:e.statusMessage,headers:t,size:o.size,timeout:o.timeout,counter:o.counter},d=t.get("Content-Encoding");if(!o.compress||"HEAD"===o.method||null===d||204===e.statusCode||304===e.statusCode)return m=new U(r,p),void a(m);const l={flush:s.Z_SYNC_FLUSH,finishFlush:s.Z_SYNC_FLUSH};if("gzip"==d||"x-gzip"==d)return r=r.pipe(s.createGunzip(l)),m=new U(r,p),void a(m);if("deflate"==d||"x-deflate"==d){const t=e.pipe(new G);return t.once("data",(function(e){r=8==(15&e[0])?r.pipe(s.createInflate()):r.pipe(s.createInflateRaw()),m=new U(r,p),a(m)})),void t.on("end",(function(){m||(m=new U(r,p),a(m))}))}if("br"==d&&"function"==typeof s.createBrotliDecompress)return r=r.pipe(s.createBrotliDecompress()),m=new U(r,p),void a(m);m=new U(r,p),a(m)})),function(e,t){const a=t.body;null===a?e.end():y(a)?a.stream().pipe(e):Buffer.isBuffer(a)?(e.write(a),e.end()):a.pipe(e)}(h,o)}))}function Z(e,t){e.destroy?e.destroy(t):(e.emit("error",t),e.end())}X.isRedirect=function(e){return 301===e||302===e||303===e||307===e||308===e},X.Promise=global.Promise;const Y=X},461:(e,t,a)=>{"use strict";a.d(t,{D0:()=>Yi,Jz:()=>n,ZD:()=>Bs,iS:()=>lu,Uw:()=>Xm,EJ:()=>su,wk:()=>Zm});var n={};a.r(n),a.d(n,{LocalBlockchain:()=>$m,Network:()=>Lm,TestPublicKey:()=>jm,Transaction:()=>vm,activeInstance:()=>Xd,currentSlot:()=>Qd,currentTransaction:()=>Wl,faucet:()=>Jm,fetchActions:()=>pl,fetchEvents:()=>ol,filterGroups:()=>Vm,getAccount:()=>el,getActions:()=>sl,getBalance:()=>il,getNetworkConstants:()=>nl,getNetworkId:()=>al,getNetworkState:()=>rl,getProofsEnabled:()=>dl,hasAccount:()=>tl,sender:()=>Hm,setActiveInstance:()=>Zd,transaction:()=>Em,waitForFunding:()=>Km});let r={event:"MinaZkappEvent******",events:"MinaZkappEvents*****",sequenceEvents:"MinaZkappSeqEvents**",zkappBodyMainnet:"MainnetZkappBody****",zkappBodyTestnet:"TestnetZkappBody****",accountUpdateCons:"MinaAcctUpdateCons**",accountUpdateNode:"MinaAcctUpdateNode**",zkappMemo:"MinaZkappMemo*******",signatureMainnet:"MinaSignatureMainnet",signatureTestnet:"CodaSignature*******",zkappUri:"MinaZkappUri********",deriveTokenId:"MinaDeriveTokenId***",sideLoadedVK:"MinaSideLoadedVk****"},i=28,o=12,p=5,s=13,d=16,l=203,_=20,m=90,u=154,c={dummyVerificationKeyHash:"3392518251768960475377392625298437850623664973002200885669375116181514017494"};const f={to:e=>[0,...e],from:([,...e])=>e,map:([,...e],t)=>[0,...e.map(t)],mapTo:(e,t)=>[0,...e.map(t)],mapFrom:([,...e],t)=>e.map(t)},h=Object.assign((function(e,t){return[0,e,t]}),{from:([,e,t])=>[e,t],first:e=>e[1],second:e=>e[2]}),g=Object.assign((function(e){return e?1:0}),{from:e=>!!e}),w=Object.assign((function(e){return void 0===e?0:[0,e]}),{from:e=>0===e?void 0:e[1],map:(e,t)=>0===e?0:[0,t(e[1])],mapFrom(e,t){if(0!==e)return t(e[1])},mapTo:(e,t)=>void 0===e?0:[0,t(e)],isNone:e=>0===e,isSome:e=>0!==e}),v={ok:e=>[0,e],unitError:()=>[1,0]},y={map:([,...e],t)=>[0,...e.map(t)],mapFrom:([,...e],t)=>e.map(t),mapTo:(e,t)=>[0,...e.map(t)]};function b(e,t){return Object.fromEntries(Object.entries(t).map((([t,a])=>[`${e}_${t}`,a])))}const k=b("caml_bigint_256",{of_numeral(e,t,a){throw Error("caml_bigint_256_of_numeral not implemented")},of_decimal_string:e=>[0,BigInt(S(e))],num_limbs:()=>4,bytes_per_limb:()=>8,div:([,e],[,t])=>[0,e/t],compare:([,e],[,t])=>e<t?-1:e===t?0:1,print([,e]){console.log(e.toString())},to_string:e=>x(e[1].toString()),test_bit:(e,t)=>g(!!(e[1]&1n<<BigInt(t))),to_bytes([,e]){let t=new I(2,"",32);for(let a=0;a<32;a++)E(t,a,Number(0xffn&e)),e>>=8n;if(0n!==e)throw Error("bigint256 doesn't fit into 32 bytes.");return t},of_bytes(e){let t=e.l;if(t>32)throw Error(t+" bytes don't fit into bigint256");let a=0n,n=0n;for(let r=0;r<t;r++){let t=T(e,r);a|=BigInt(t)<<n,n+=8n}return[0,a]},deep_copy:([,e])=>[0,e]});function S(e){return e.c}function x(e){return new I(9,e,e.length)}function T(e,t){switch(6&e.t){default:if(t>=e.c.length)return 0;case 0:return e.c.charCodeAt(t);case 4:return e.c[t]}}function E(e,t,a){if(a&=255,4!=e.t){if(t==e.c.length)return e.c+=String.fromCharCode(a),t+1==e.l&&(e.t=0),0;!function(e){let t=new Uint8Array(e.l),a=e.c,n=a.length,r=0;for(;r<n;r++)t[r]=a.charCodeAt(r);for(n=e.l;r<n;r++)t[r]=0;e.c=t,e.t=4}(e)}return e.c[t]=a,0}class I{constructor(e,t,a){this.t=e,this.c=t,this.l=a}toString(){if(9===this.t)return this.c;throw Error("todo")}toUtf16(){return this.toString()}slice(){let e=4==this.t?this.c.slice():this.c;return new I(this.t,e,this.l)}}function N(e){let t=new BigUint64Array(e.buffer,e.byteOffset,4);return t[0]|t[1]<<64n|t[2]<<128n|t[3]<<192n}const C=(1n<<64n)-1n;function A(e){let t=0n,a=0n;for(let n of e)t+=BigInt(n)<<a,a+=8n;return t}let B={};for(let e=0;e<16;e++)B[e.toString(16).charCodeAt(0)]=e;let F=new TextEncoder;const q=new Uint8Array(64);function V(e,t){if(e<0n)throw Error(`bigIntToBytes: negative numbers are not supported, got ${e}`);if(void 0===t)return function(e){let t=[];for(;e>0n;e>>=8n)t.push(Number(0xffn&e));return t}(e);let a=Array(t);for(let n=0;n<t;n++,e>>=8n)a[n]=Number(0xffn&e);if(e>0n)throw Error(`bigIntToBytes: input does not fit in ${t} bytes`);return a}function O(e){if(e<0n)throw Error(`bigIntToBits: negative numbers are not supported, got ${e}`);let t=[];for(;e>0n;e>>=1n){let a=!!(1n&e);t.push(a)}return t}function P(e,t,a){let n=function(e,t){if(t<=0n)throw Error("fromBase: base must be positive");let a=[];for(let n=t,r=1;r<e.length;n**=2n,r*=2)a.push(n);let n=a.length;e=e.concat(Array(2**n-e.length).fill(0n));for(let t=0;t<n;t++){let n=Array(e.length>>1),r=a[t];for(let t=0;t<n.length;t++)n[t]=e[2*t]+r*e[2*t+1];e=n}console.assert(1===e.length);let[r]=e;return r}(e,t),r=function(e,t){if(t<=0n)throw Error("toBase: base must be positive");let a=[];for(let n=t;n<e;n**=2n)a.push(n);let n=[e],r=a.length;for(let e=0;e<r;e++){let t=Array(2*n.length),i=a[r-1-e];for(let e=0;e<n.length;e++){let a=n[e],r=a/i;t[2*e+1]=r,t[2*e]=a-r*i}n=t}for(;0n===n[n.length-1];)n.pop();return n}(n,a);return r}function D(e){return"number"==typeof e&&(e=BigInt(e)),1n===e?0:(e-1n).toString(2).length}function U(e,t){return e>t?e:t}function z(e){return e<0n?-e:e}function R(e){return e>=0?1n:-1n}function M(e,t){if(!e)throw Error(t??"Assertion failed")}function j(e,t){return M(e instanceof Promise,t??"Expected a promise"),e}function $(e,t="Input value is undefined."){if(void 0===e)throw Error(t);return e}const L=require("crypto");function H(e){return new Uint8Array((0,L.randomBytes)(e))}const K=0x40000000000000000000000000000000224698fc094cf91b992d30ed00000001n,J=0x40000000000000000000000000000000224698fc0994a8dd8c46eb2100000001n;function W(e,t){return(e%=t)<0?e+t:e}function G(e,t,a){e=W(e,a);let n=1n;for(;t>0n;t>>=1n)1n&t&&(n=W(n*e,a)),e=W(e*e,a);return n}function X(e,t){if(0n===(e=W(e,t)))return;let a=t,n=0n,r=1n,i=1n,o=0n;for(;0n!==e;){let t=a/e,p=W(a,e),s=n-i*t,d=r-o*t;a=e,e=p,n=i,r=o,i=s,o=d}return 1n===a?W(n,t):void 0}function Z(e,t){let a=W(e,t);return 0n===a||1n===G(a,(t-1n)/2n,t)}const Y=ee(K,{oddFactor:0x40000000000000000000000000000000224698fc094cf91b992d30edn,twoadicRoot:0x2bce74deac30ebda362120830561f81aea322bf2b7bb7584bdad6fabd87ea32fn,twoadicity:32n}),Q=ee(J,{oddFactor:0x40000000000000000000000000000000224698fc0994a8dd8c46eb21n,twoadicRoot:0x2de6a9b8746d3f589e5c4dfd492ae26e9bb97ea3c106f049a70e2c1102b6d05fn,twoadicity:32n});function ee(e,t){let{oddFactor:a,twoadicRoot:n,twoadicity:r}=t??function(e){let t=e-1n,a=0n;for(;0n===(1n&t);)t>>=1n,a++;let n=2n;for(;Z(n,e);)n++;return{oddFactor:t,twoadicRoot:G(n,t,e),twoadicity:a}}(e),i=D(e),o=Math.ceil(i/8),p=(1<<i-8*(o-1))-1;const s=Math.ceil(i/31),d=BigInt(2*s*31),l=X(1n<<d,e),_=void 0!==l?t=>function(e,t,a,n,r){if(0n===(e=W(e,t)))return;const i=BigInt(31),o=(1n<<i)-1n;let p=t,s=e,d=0n,l=1n,_=0;for(;_<2*a;_++){let e=1,a=0,n=0,r=1,_=Number(p&o),m=Number(s&o),u=Math.max(D(p),D(s)),c=BigInt(Math.max(u-31,0)),f=Number(p>>c),h=Number(s>>c);for(let t=0;t<31;t++)1&_?1&m?h<=f?(f=f-h>>1,_=_-m>>1,e+=n,a+=r,n<<=1,r<<=1):(h=h-f>>1,m=m-_>>1,n=e+n,r=a+r,e<<=1,a<<=1):(h>>=1,m>>=1,e<<=1,a<<=1):(f>>=1,_>>=1,n<<=1,r<<=1);let g=BigInt(e),w=BigInt(a),v=BigInt(n),y=BigInt(r),b=s*y-p*v;p=p*g-s*w>>i,s=b>>i,p<0&&(p=-p,g=-g,w=-w),s<0&&(s=-s,v=-v,y=-y);let k=l*y+d*v;if(d=d*g+l*w,l=k,0n===p)break;if(0n===s){M(1n===p,"u = 1"),l=W(-d,t);break}}let m=BigInt(31*(_+1));return l=W(l*r,t),l=W(l<<n-m,t),M(0n===W(e*l-1n,t),"mod p"),l}(t,e,s,d,l):t=>X(t,e);return{modulus:e,sizeInBits:i,t:a,M:r,twoadicRoot:n,mod:t=>W(t,e),add:(t,a)=>W(t+a,e),not:(t,a)=>W(2n**BigInt(a)-(t+1n),e),negate:t=>0n===t?0n:W(-t,e),sub:(t,a)=>W(t-a,e),mul:(t,a)=>W(t*a,e),inverse:_,div(t,a){let n=_(a);if(void 0!==n)return W(t*n,e)},square:t=>W(t*t,e),isSquare:t=>Z(t,e),sqrt:t=>function(e,t,a,n,r){let i=W(e,t);if(0n===i)return 0n;let o=G(i,a-1n>>1n,t),p=W(o*i,t);for(o=W(o*p,t);;){if(1n===o)return p;let e=0n,a=o;for(;1n!==a;)a=W(a*a,t),e+=1n;if(e===r)return;let i=G(n,1n<<r-e-1n,t);r=e,n=W(i*i,t),o=W(o*n,t),p=W(p*i,t)}}(t,e,a,n,r),power:(t,a)=>G(t,a,e),dot(t,a){let n=0n,r=t.length;for(let e=0;e<r;e++)n+=t[e]*a[e];return W(n,e)},equal:(t,a)=>(t>=0n&&t<e?t:W(t,e))===(a>=0n&&a<e?a:W(a,e)),isEven:t=>!(1n&W(t,e)),random:()=>function(e,t,a){for(;;){let n=H(t);n[t-1]&=a;let r=A(n);if(r<e)return r}}(e,o,p),fromNumber:t=>W(BigInt(t),e),fromBigint:t=>W(t,e),rot(e,t,a="left",n=64n){"right"===a&&(t=n-t);let r=e<<t;return r&(1n<<n)-1n|r>>n},leftShift:(e,t,a=64)=>e<<BigInt(t)&(1n<<BigInt(a))-1n,rightShift:(e,t)=>e>>BigInt(t)}}const te=["o1js_node.bc.cjs","/builtin/","CatchAndPrettifyStacktrace"];function ae(e){if(!((e=function(e){return e instanceof Error?e:Array.isArray(e)&&e[2]instanceof Error?e[2]:e}(e))instanceof Error&&e.stack))return e;const t=e.stack.split("\n"),a=[];for(let e=0;e<t.length;e++){if(te.some((a=>t[e].includes(a))))continue;const n=re(t[e]);a.push(n)}return e.stack=a.join("\n"),e}async function ne(e){try{return await e}catch(e){throw ae(e)}}function re(e){return e.includes("o1js")?function(e){const t=ie(e);if(!t)return e;const a=t.indexOf("o1js");if(-1===a)return e;return`${e.slice(0,e.indexOf("(")+1)}${t.slice(a)})`}(e):e.includes("opam")?function(e){const t=ie(e);if(!t)return e;const a=t.indexOf("opam");if(-1===a)return e;const n=t.slice(a).split("/"),r=n.lastIndexOf("lib");if(-1===r)return e;const i=e.slice(0,e.indexOf("(")+1),o=n.slice(r+1);return o.unshift("ocaml"),`${i}${o.join("/")})`}(e):e.includes("workspace_root")?function(e){const t=ie(e);if(!t)return e;const a=t.indexOf("workspace_root");if(-1===a)return e;const n=t.slice(a).split("/");return`${e.slice(0,e.indexOf("(")+1)}${n.slice(a).join("/")})`}(e):e}function ie(e){const t=e.match(/\(([^)]+)\)/);if(t)return t[1]}function oe(e,t="Failed assertion."){if(!e)throw function(e){return Error(`${e}\nThis shouldn't have happened and indicates an internal bug.`)}(t)}function pe(e,t){let{v00:a,v01:n,v10:r,v11:i,det:o}=t,p=de(-i*e,o),s=de(r*e,o),d=a*p+n*s+e,l=r*p+i*s;return[{value:d,isNegative:d<0n,abs:z(d)},{value:l,isNegative:l<0n,abs:z(l)}]}function se(e,t,a,n,r){let i=function(e,t,a){return{x:W(t*e.x,a),y:e.y,z:e.z}}(e,n,a),[o,p]=pe(t,r),s=O(o.abs),d=O(p.abs);o.isNegative&&(e=fe(e,a)),p.isNegative&&(i=fe(i,a));let l=ue;for(let t=r.maxBits-1;t>=0&&(s[t]&&(l=he(l,e,a)),d[t]&&(l=he(l,i,a)),0!==t);t--)l=ge(l,a);return l}function de(e,t){let a=R(e)*R(t),n=(e=z(e))/(t=z(t));return 2n*(e-n*t)>=t&&n++,a*n}const le={x:1n,y:12418654782883325593414442427049395787963493412651469444558597405572177144507n},_e=20444556541222657078399132219657928148671392403212669005631716460534733845831n,me=26005156700822196841419187675678338661165322343552424574062261873906994770353n,ue={x:1n,y:1n,z:0n},ce=((e,t)=>{const{a,b:n}=t.spec;if(0n!==a)throw Error("GroupMap only supports a = 0");return{potentialXs:a=>function(t){const{u:a,v:n,y:r}=t;return[n,e.negate(e.add(a,n)),e.add(a,e.square(r))]}(function(a){const n=e.div(a.z,a.y);if(void 0===n)throw Error(`Division undefined! ${a.z}/${a.y}`);const r=e.sub(n,t.u_over_2);return{u:t.u,v:r,y:a.y}}(function(a){const{z:n,y:r}=t.projection_point,i=e.mul(t.conic_c,a),o=e.add(e.mul(i,r),n),p=e.add(e.mul(i,a),1n),s=e.div(o,p);if(void 0===s)throw Error(`Division undefined! ${o}/${p}`);const d=e.mul(2n,s);return{z:e.sub(n,d),y:e.sub(r,e.mul(d,a))}}(a))),tryDecode:function(t){const a=e.power(t,3n),r=e.add(a,n);if(e.isSquare(r))return{x:t,y:e.sqrt(r)}}}})(Y,{u:2n,u_over_2:1n,conic_c:3n,projection_point:{z:12196889842669319921865617096620076994180062626450149327690483414064673774441n,y:1n},spec:{a:0n,b:5n}});function fe({x:e,y:t,z:a},n){return{x:e,y:0n===t?0n:n-t,z:a}}function he(e,t,a){if(0n===e.z)return t;if(0n===t.z)return e;let n=e.x,r=e.y,i=e.z,o=t.x,p=t.y,s=t.z,d=W(i*i,a),l=W(s*s,a),_=W(n*l,a),m=W(o*d,a),u=W(r*s*l,a),c=W(p*i*d,a),f=W(m-_,a);if(0n===f){if(u===c)return ge(e,a);if(0n===W(u+c,a))return ue;throw Error("projectiveAdd: invalid point")}let h=W(f*f<<2n,a),g=W(f*h,a),w=2n*(c-u),v=W(_*h,a),y=W(w*w-g-2n*v,a);return{x:y,y:W(w*(v-y)-2n*u*g,a),z:W(((i+s)*(i+s)-d-l)*f,a)}}function ge(e,t){if(0n===e.z)return e;let a=e.x,n=e.y,r=e.z;if(0n===n)throw Error("projectiveDouble: unhandled case");let i=W(a*a,t),o=W(n*n,t),p=W(o*o,t),s=W(2n*((a+o)*(a+o)-i-p),t),d=3n*i,l=W(d*d,t),_=W(l-2n*s,t);return{x:_,y:W(d*(s-_)-8n*p,t),z:W(2n*n*r,t)}}function we(e,t,a){let n="bigint"==typeof t?O(t):t,r=ue;for(let t of n)t&&(r=he(r,e,a)),e=ge(e,a);return r}function ve({x:e,y:t,infinity:a}){return a?ue:{x:e,y:t,z:1n}}function ye(e,t){let a=e.z;if(0n===a)return{x:0n,y:0n,infinity:!0};if(1n===a)return{x:e.x,y:e.y,infinity:!1};{let n=X(a,t),r=W(n*n,t);return{x:W(e.x*r,t),y:W(e.y*n*r,t),infinity:!1}}}function be(e,t,a){if((0n===e.z||0n===t.z)&&e.z!==t.z)return!1;let n=W(e.z*e.z,a),r=W(t.z*t.z,a);if(0n!==W(e.x*r-t.x*n,a))return!1;let i=W(n*e.z,a),o=W(r*t.z,a);return W(e.y*o,a)===W(t.y*i,a)}function ke(e,t,a){return be(we(e,a,t),ue,t)}function Se({name:e,modulus:t,order:a,cofactor:n,generator:r,b:i,a:o,endoBase:p,endoScalar:s}){if(0n!==o)throw Error("createCurveProjective only supports a = 0");n??=1n;let d=1n!==n;return{name:e,modulus:t,order:a,cofactor:n,zero:ue,one:{...r,z:1n},get endoBase(){if(void 0===p)throw Error("`endoBase` for this curve was not provided.");return p},get endoScalar(){if(void 0===s)throw Error("`endoScalar` for this curve was not provided.");return s},a:o,b:i,hasCofactor:d,equal:(e,a)=>be(e,a,t),isOnCurve:e=>function({x:e,y:t,z:a},n,r){let i=W(W(e*e,n)*e,n),o=W(t*t,n),p=W(W(a*a,n)*a,n),s=W(p*p,n);return 0n===W(o-i-r*s,n)}(e,t,i),isInSubgroup:e=>ke(e,t,a),add:(e,a)=>he(e,a,t),double:e=>ge(e,t),negate:e=>fe(e,t),sub:(e,a)=>function(e,t,a){return he(e,fe(t,a),a)}(e,a,t),scale:(e,a)=>we(e,a,t),endomorphism({x:e,y:a,z:n}){if(void 0===p)throw Error("endomorphism needs `endoBase` parameter.");return{x:W(p*e,t),y:a,z:n}},toAffine:e=>ye(e,t),fromAffine:e=>ve(e)}}const xe=Se({name:"Pallas",modulus:K,order:J,generator:le,b:5n,a:0n,endoBase:_e,endoScalar:me}),Te=Se({name:"Vesta",modulus:J,order:K,generator:{x:1n,y:11426906929455361843568202299992114520848200991084027513389447476559454104162n},b:5n,a:0n,endoBase:2942865608506852014473558576493638302197734138389222805617480874486368177743n,endoScalar:8503465768106391777493614032514048814691664078728891710322960303815233784505n}),Ee={x:0n,y:0n,infinity:!0};function Ie(e,t,a){if(e.infinity)return t;if(t.infinity)return e;let{x:n,y:r}=e,{x:i,y:o}=t;if(n===i)return r===o?Ne(e,a):Ee;let p=X(i-n,a);if(void 0===p)throw Error("impossible");let s=W((o-r)*p,a),d=W(s*s-n-i,a);return{x:d,y:W(s*(n-d)-r,a),infinity:!1}}function Ne({x:e,y:t,infinity:a},n){if(a)return Ee;let r=X(2n*t,n);if(void 0===r)throw Error("impossible");let i=W(3n*e*e*r,n),o=W(i*i-2n*e,n);return{x:o,y:W(i*(e-o)-t,n),infinity:!1}}function Ce({x:e,y:t,infinity:a},n){return a?Ee:{x:e,y:0n===t?0n:n-t,infinity:a}}function Ae(e,t,a){return ye(we(ve(e),t,a),a)}const Be=function({name:e,modulus:t,order:a,cofactor:n,generator:r,a:i,b:o,endoScalar:p,endoBase:s}){if(0n!==i)throw Error("createCurveAffine only supports a = 0");let d=void 0!==n&&1n!==n;const l=ee(t),_=ee(a),m={...r,infinity:!1},u=function(e,t,a,n,r,i){if(void 0===r||void 0===i)try{({endoScalar:r,endoBase:i}=function(e,t,a){let n=e.modulus,r=t.modulus;oe(n%3n===1n,"Base field has a cube root of unity"),oe(r%3n===1n,"Scalar field has a cube root of unity");let i=t.sqrt(t.negate(3n));oe(void 0!==i,"Scalar field has a square root of -3");let o=t.div(t.sub(i,1n),2n);oe(void 0!==o,"Scalar field has a cube root of unity"),oe(1n===t.power(o,3n),"lambda is a cube root"),oe(1n!==o,"lambda is not 1");let p=Ae(a,o,n);oe(p.y===a.y,"multiplication by lambda is a cheap endomorphism");let s=e.div(p.x,a.x);oe(void 0!==s,"Gx is invertible"),oe(1n===e.power(s,3n),"beta is a cube root"),oe(1n!==s,"beta is not 1");let d=Ae(a,t.random(),n),l=Ae(d,o,n);return oe(l.x===e.mul(s,d.x),"confirm endomorphism"),oe(l.y===d.y,"confirm endomorphism"),{endoScalar:o,endoBase:s}}(t,a,n))}catch(t){return void console.log(`Warning: no endomorphism for ${e}`,t?.message)}let o=i,p=function(e,t){let[[a,n],[r,i]]=function(e,t){if(e>t)throw Error("a > p");let[a,n]=[t,e],[r,i]=[1n,0n],[o,p]=[0n,1n];for(;n*n>t;){let e=a/n;[a,n]=[n,a-e*n],[r,i]=[i,r-e*i],[o,p]=[p,o-e*p]}let s=a/n,d=a-s*n,l=o-s*p,[_,m]=[n,-p],[u,c]=U(a,z(o))<=U(d,z(l))?[a,-o]:[d,-l];return[[_,u],[m,c]]}(t,e),o=a*i-r*n,p=(z(a)+z(n)>>1n)+1n,s=(z(r)+z(i)>>1n)+1n;return{v00:a,v01:n,v10:r,v11:i,det:o,maxS0:p,maxS1:s,maxBits:D(U(p,s))}}(a.modulus,r);return{scalar:r,base:i,decomposeMaxBits:p.maxBits,decompose:e=>pe(e,p),endomorphism:e=>function(e,t,a){return{x:W(t*e.x,a),y:e.y}}(e,o,t.modulus),scaleProjective:(e,a)=>se(e,a,t.modulus,o,p),scale:(e,a)=>ye(se(ve(e),a,t.modulus,o,p),t.modulus)}}(e,l,_,m,p,s);return{name:e,Field:l,Scalar:_,modulus:t,order:a,a:i,b:o,cofactor:n,hasCofactor:d,zero:Ee,one:m,hasEndomorphism:void 0!==u,get Endo(){if(void 0===u)throw Error(`no endomorphism defined on ${e}`);return u},from:e=>0n===e.x&&0n===e.y?Ee:{...e,infinity:!1},fromNonzero(e){if(0n===e.x&&0n===e.y)throw Error("fromNonzero: got (0, 0), which is reserved for the zero point");return{...e,infinity:!1}},equal:(e,a)=>!(!e.infinity||!a.infinity)||!e.infinity&&!a.infinity&&0n===W(e.x-a.x,t)&&0n===W(e.y-a.y,t),isOnCurve:e=>function({x:e,y:t,infinity:a},n,r,i){if(a)return!0;let o=W(e*e,n);return 0n===W(t*t-e*o-r*e-i,n)}(e,t,i,o),isInSubgroup:e=>ke(ve(e),t,a),add:(e,a)=>Ie(e,a,t),double:e=>Ne(e,t),negate:e=>Ce(e,t),sub:(e,a)=>Ie(e,Ce(a,t),t),scale:(e,a)=>Ae(e,a,t)}}({name:"Pallas",modulus:K,order:J,generator:le,b:5n,a:0n,endoBase:_e,endoScalar:me});const Fe=b("caml_vesta",Ve(Te)),qe=b("caml_pallas",Ve(xe));function Ve(e){return{one:()=>e.one,add:e.add,sub:e.sub,negate:e.negate,double:e.double,scale:(t,[,a])=>e.scale(t,a),random(){throw Error("random not implemented")},rng(e){throw Error("rng not implemented")},endo_base:()=>[0,e.endoBase],endo_scalar:()=>[0,e.endoScalar],to_affine:t=>De(e.toAffine(t)),of_affine:t=>e.fromAffine(Ue(t)),of_affine_coordinates:(e,t)=>({x:e[1],y:t[1],z:1n}),affine_deep_copy:e=>De(Ue(e))}}const Oe={x:0n,y:0n,infinity:!0},Pe=0;function De(e){return e.infinity?0:[0,[0,[0,e.x],[0,e.y]]]}function Ue(e){return 0===e?Oe:{x:e[1][1][1],y:e[1][2][1],infinity:!1}}const ze=e=>0===e?"Infinity":{x:e[1][1][1].toString(),y:e[1][2][1].toString()},Re=e=>"Infinity"===e?0:[0,[0,[0,BigInt(e.x)],[0,BigInt(e.y)]]],Me=b("caml_pasta_fp",$e(Y)),je=b("caml_pasta_fq",$e(Q));function $e(e){return{size_in_bits:()=>e.sizeInBits,size:()=>[0,e.modulus],add:([,t],[,a])=>[0,e.add(t,a)],sub:([,t],[,a])=>[0,e.sub(t,a)],negate:([,t])=>[0,e.negate(t)],mul:([,t],[,a])=>[0,e.mul(t,a)],div([,t],[,a]){let n=e.div(t,a);if(void 0===n)throw Error("division by zero");return[0,n]},inv:([,t])=>Le(e.inverse(t)),square:([,t])=>[0,e.square(t)],is_square:([,t])=>g(e.isSquare(t)),sqrt:([,t])=>Le(e.sqrt(t)),of_int(t){if(t<0)throw Error("of_int: inputs must be non-negative");return[0,e.fromNumber(t)]},to_string:([,e])=>x(e.toString()),of_string:t=>[0,e.fromBigint(BigInt(S(t)))],print(e){console.log(e[0].toString())},copy(e,[,t]){e[1]=t},mut_add(t,[,a]){t[1]=e.add(t[1],a)},mut_sub(t,[,a]){t[1]=e.sub(t[1],a)},mut_mul(t,[,a]){t[1]=e.mul(t[1],a)},mut_square(t){t[1]=e.square(t[1])},compare:(e,t)=>k.caml_bigint_256_compare(e,t),equal:([,e],[,t])=>g(e===t),random:()=>[0,e.random()],rng(e){throw Error("rng: not implemented")},to_bigint:([,e])=>[0,e],of_bigint([,t]){if(t>=e.modulus)throw Error("of_bigint: input exceeds field size");return[0,t]},two_adic_root_of_unity:()=>[0,e.twoadicRoot],domain_generator(t){if(t>32||t<0)throw Error("log2 size of evaluation domain must be in [0, 32], got "+t);if(0===t)return[0,1n];let a=e.twoadicRoot;for(let n=32;n>t;n--)a=W(a*a,e.modulus);return[0,a]},to_bytes:e=>k.caml_bigint_256_to_bytes(e),of_bytes(e){throw Error("of_bytes: not implemented")},deep_copy:([,e])=>[0,e]}}function Le(e){return void 0===e?0:[0,[0,e]]}const He={create:()=>[0],length:e=>e.length-1,emplace_back(e,t){e.push(t)},get(e,t){let a=e[t+1];if(void 0===a)throw Error(`FieldVector.get(): Index out of bounds, got ${t}/${e.length-1}`);return[...a]},set(e,t,a){e[t+1]=a}},Ke=b("caml_fp_vector",He),Je=b("caml_fq_vector",He),We=32;function Ge([,e],t=new Uint8Array(32)){return function(e,t){let a=new BigUint64Array(t.buffer,t.byteOffset,4);return a[0]=e&C,a[1]=e>>64n&C,a[2]=e>>128n&C,a[3]=e>>192n,t}(e,t)}function Xe(e){return[0,N(e)]}function Ze([,...e]){let t=e.length,a=new Uint8Array(t*We);for(let n=0,r=0;n<t;n++,r+=We)Ge(e[n],a.subarray(r,r+We));return a}function Ye(e){let t=e.length/We;if(!Number.isInteger(t))throw Error("fieldsFromRustFlat: invalid bytes");let a=Array(t);for(let n=0,r=0;n<t;n++,r+=We){let t=new Uint8Array(e.buffer,r,We);a[n]=Xe(t)}return[0,...a]}function Qe(e){return e&&Ge(e)}function et(e){if(e.infinity)return e.free(),0;{let t=Xe(e.x),a=Xe(e.y);return e.free(),[0,[0,t,a]]}}const tt=new Uint8Array(32);function at(e,{CommitmentCurve:t,makeAffine:a,Gate:n,PolyComm:r}){let i={wireToRust:([,t,a])=>e.Wire.create(t,a),vectorToRust:Ze,vectorFromRust:Ye,gateToRust(t){let[,a,[,...r],o]=t,p=new e.WasmGateWires(...(d=r,l=i.wireToRust,d.map(l))),s=Ze(o);var d,l;return new n(a,p,s)},gateFromRust(e){throw Error("gateFromRust not implemented")},pointToRust:e=>function(e,t){let a=t();if(e===Pe)a.infinity=!0;else{let[,[,t,n]]=e;a.x=Ge(t,tt),a.y=Ge(n,tt)}return a}(e,a),pointFromRust:et,pointsToRust:([,...e])=>st(e,(e=>rt(i.pointToRust(e)))),pointsFromRust:e=>[0,...pt(e,(e=>et(nt(e,t))))],polyCommToRust(e){let[,t]=e,a=i.pointsToRust(t);return new r(a,undefined)},polyCommFromRust:e=>[0,[0,...pt(e.unshifted,(e=>et(nt(e,t))))]],polyCommsToRust:([,...e])=>st(e,(e=>rt(i.polyCommToRust(e)))),polyCommsFromRust:e=>[0,...pt(e,(e=>i.polyCommFromRust(nt(e,r))))]};return i}function nt(e,t){const a=Object.create(t.prototype);return a.__wbg_ptr=e,a}function rt(e){let t=e.__wbg_ptr;if(void 0===t)throw Error("unwrap: missing ptr");return t}const it=new FinalizationRegistry((e=>{e.free()}));function ot(e){let t=nt(e.__wbg_ptr,e.constructor);return it.register(e,t,e),e}function pt(e,t){let a=e.length,n=Array(a);for(let r=0;r<a;r++)n[r]=t(e[r]);return n}function st(e,t){let a=e.length,n=new Uint32Array(a);for(let r=0;r<a;r++)n[r]=t(e[r]);return n}const dt=e=>Ge(e),lt=gt(dt),_t=gt(Xe),mt=ht(dt),ut=ht(Xe);function ct(e,{ProverCommitments:t,OpeningProof:a,VecVec:n,ProverProof:r,LookupCommitments:i,RuntimeTable:o,RuntimeTableCfg:p,LookupTable:s}){function d(t){let a=e.polyCommsToRust(t[1]),n=e.polyCommToRust(t[2]),r=w.mapFrom(t[3],e.polyCommToRust);return new i(a,n,r)}function l(t){let a=e.polyCommsFromRust(t.sorted),n=e.polyCommFromRust(t.aggreg),r=w.mapTo(t.runtime,e.polyCommFromRust);return t.free(),[0,a,n,r]}return{proofToRust([,i,o]){let p=function(a){let n=e.polyCommsToRust(a[1]),r=e.polyCommToRust(a[2]),i=e.polyCommToRust(a[3]),o=w.mapFrom(a[4],d);return new t(n,r,i,o)}(o[1]),s=function(t){let[n,[,...r],i,o,p,s]=t,d=[0],l=[0];for(let[,e,t]of r)d.push(e),l.push(t);return new a(e.pointsToRust(d),e.pointsToRust(l),e.pointToRust(i),Ge(o),Ge(p),e.pointToRust(s))}(o[2]),[,...l]=lt(o[3]),_=[0,mt(i),...l],m=Ge(o[4]),u=Ze(o[5]),[,...c]=o[6],f=c.length,h=new n(f),g=[0];for(let[,e,t]of c)h.push(Ze(e)),g.push(t);let v=e.polyCommsToRust(g);return new r(p,s,_,m,u,h,v)},proofFromRust(t){let a=function(t){let a=e.polyCommsFromRust(t.w_comm),n=e.polyCommFromRust(t.z_comm),r=e.polyCommFromRust(t.t_comm),i=w.mapTo(t.lookup,l);return t.free(),[0,a,n,r,i]}(t.commitments),n=function(t){let[,...a]=e.pointsFromRust(t.lr_0),[,...n]=e.pointsFromRust(t.lr_1);if(a.length!==n.length)throw Error("openingProofFromRust: l and r length mismatch.");let r=a.map(((e,t)=>[0,e,n[t]])),i=e.pointFromRust(t.delta),o=Xe(t.z1),p=Xe(t.z2),s=e.pointFromRust(t.sg);return t.free(),[0,[0,...r],i,o,p,s]}(t.proof),[,r,...i]=t.evals,o=ut(r),p=_t([0,...i]),s=Xe(t.ft_eval1),d=Ye(t.public_),_=t.prev_challenges_scalars,[,...m]=e.polyCommsFromRust(t.prev_challenges_comms),u=m.map(((e,t)=>[0,Ye(_.get(t)),e]));return t.free(),[0,o,[0,a,n,p,s,d,[0,...u]]]},runtimeTablesToRust:([,...t])=>st(t,(t=>rt(function([,t,a]){return new o(t,e.vectorToRust(a))}(t)))),runtimeTableCfgsToRust:([,...t])=>st(t,(t=>rt(function([,t,a]){return new p(t,e.vectorToRust(a))}(t)))),lookupTablesToRust:([,...e])=>st(e,(e=>rt(function([,e,[,...t]]){let a=t.length,r=new n(a);for(let e=0;e<a;e++)r.push(Ze(t[e]));return new s(e,r)}(e))))}}function ft(e){return t=>{let[,a,n]=t;return[0,f.map(a,e),f.map(n,e)]}}function ht(e){return t=>w.map(t,ft(e))}function gt(e){const t=ft(e),a=e=>w.map(e,t);return function(e){let[,n,r,i,o,p,s,d,l,_,m,u,c,h,g,w,v,b,k,S,x,T,E,I,N,C]=e;return[0,y.map(n,t),t(r),y.map(i,t),y.map(o,t),t(p),t(s),t(d),t(l),t(_),t(m),a(u),a(c),a(h),a(g),a(w),a(v),a(b),a(k),f.map(S,a),a(x),a(T),a(E),a(I),a(N),a(C)]}}function wt(e,t,{Domain:a,VerificationEvals:n,Shifts:r,VerifierIndex:i,LookupVerifierIndex:o,LookupSelector:p}){function s(e){let t=e.log_size_of_group,a=Xe(e.group_gen);return e.free(),[0,t,a]}function d(e){let a=[0,t.polyCommsFromRust(e.sigma_comm),t.polyCommsFromRust(e.coefficients_comm),t.polyCommFromRust(e.generic_comm),t.polyCommFromRust(e.psm_comm),t.polyCommFromRust(e.complete_add_comm),t.polyCommFromRust(e.mul_comm),t.polyCommFromRust(e.emul_comm),t.polyCommFromRust(e.endomul_scalar_comm),w.mapTo(e.xor_comm,t.polyCommFromRust),w.mapTo(e.range_check0_comm,t.polyCommFromRust),w.mapTo(e.range_check1_comm,t.polyCommFromRust),w.mapTo(e.foreign_field_add_comm,t.polyCommFromRust),w.mapTo(e.foreign_field_mul_comm,t.polyCommFromRust),w.mapTo(e.rot_comm,t.polyCommFromRust)];return e.free(),a}function l(a){let[,n,r,i,s,d,l]=a;return new o(g.from(n),t.polyCommsToRust(r),function([,e,a,n,r]){return new p(w.mapFrom(a,t.polyCommToRust),w.mapFrom(e,t.polyCommToRust),w.mapFrom(n,t.polyCommToRust),w.mapFrom(r,t.polyCommToRust))}(i),w.mapFrom(s,t.polyCommToRust),function([,t,a,n]){let[,r,i,o]=n,[,p,s,d,l]=r,_=new e.LookupPatterns(g.from(p),g.from(s),g.from(d),g.from(l)),m=new e.LookupFeatures(_,g.from(i),g.from(o));return new e.LookupInfo(t,a,m)}(d),w.mapFrom(l,t.polyCommToRust))}function _(e){let a=[0,g(e.joint_lookup_used),t.polyCommsFromRust(e.lookup_table),m(e.lookup_selectors),w.mapTo(e.table_ids,t.polyCommFromRust),u(e.lookup_info),w.mapTo(e.runtime_tables_selector,t.polyCommFromRust)];return e.free(),a}function m(e){let a=w.mapTo(e.lookup,t.polyCommFromRust),n=w.mapTo(e.xor,t.polyCommFromRust),r=w.mapTo(e.range_check,t.polyCommFromRust),i=w.mapTo(e.ffmul,t.polyCommFromRust);return e.free(),[0,a,n,r,i]}function u(e){let t=e.features,a=t.patterns,n=[0,e.max_per_row,e.max_joint_size,[0,[0,g(a.xor),g(a.lookup),g(a.range_check),g(a.foreign_field_mul)],g(t.joint_lookup_used),g(t.uses_runtime_tables)]];return e.free(),n}let c={shiftsToRust([,...e]){let t=e.map((e=>Ge(e)));return new r(t[0],t[1],t[2],t[3],t[4],t[5],t[6])},shiftsFromRust(e){let t=[e.s0,e.s1,e.s2,e.s3,e.s4,e.s5,e.s6];return e.free(),[0,...t.map(Xe)]},verifierIndexToRust(e){let r=function([,e,t]){return new a(e,Ge(t))}(e[1]),o=e[2],p=e[3],s=e[4],d=e[5],_=function(e){let a=t.polyCommsToRust(e[1]),r=t.polyCommsToRust(e[2]),i=t.polyCommToRust(e[3]),o=t.polyCommToRust(e[4]),p=t.polyCommToRust(e[5]),s=t.polyCommToRust(e[6]),d=t.polyCommToRust(e[7]),l=t.polyCommToRust(e[8]),_=w.mapFrom(e[9],t.polyCommToRust),m=w.mapFrom(e[10],t.polyCommToRust),u=w.mapFrom(e[11],t.polyCommToRust),c=w.mapFrom(e[12],t.polyCommToRust),f=w.mapFrom(e[13],t.polyCommToRust),h=w.mapFrom(e[14],t.polyCommToRust);return new n(a,r,i,o,p,s,d,l,_,m,u,c,f,h)}(e[6]),m=c.shiftsToRust(e[7]),u=w.mapFrom(e[8],l),f=e[9];return new i(r,o,p,s,d,_,m,u,f)},verifierIndexFromRust(e){let t=[0,s(e.domain),e.max_poly_size,e.public_,e.prev_challenges,ot(e.srs),d(e.evals),c.shiftsFromRust(e.shifts),w.mapTo(e.lookup_index,_),e.zk_rows];return e.free(),t}};return c}function vt({RandomOracles:e,Oracles:t}){function a(e){let t=e.joint_combiner_chal,a=e.joint_combiner;return[0,w(t&&a&&[0,[0,Xe(t)],Xe(a)]),Xe(e.beta),Xe(e.gamma),[0,Xe(e.alpha_chal)],Xe(e.alpha),Xe(e.zeta),Xe(e.v),Xe(e.u),[0,Xe(e.zeta_chal)],[0,Xe(e.v_chal)],[0,Xe(e.u_chal)]]}return{oraclesToRust(a){let[,n,r,i,o]=a;return new t(function(t){let a=w.from(t[1]),n=Qe(a?.[1][1]),r=Qe(a?.[2]),i=Ge(t[2]),o=Ge(t[3]),p=Ge(t[4][1]),s=Ge(t[5]),d=Ge(t[6]),l=Ge(t[7]),_=Ge(t[8]),m=Ge(t[9][1]),u=Ge(t[10][1]),c=Ge(t[11][1]);return new e(n,r,i,o,p,s,d,l,_,m,u,c)}(n),Ge(r[1]),Ge(r[2]),Ze(i),Ge(o))},oraclesFromRust:e=>[0,a(e.o),[0,Xe(e.p_eval0),Xe(e.p_eval1)],Ye(e.opening_prechallenges),Xe(e.digest_before_evaluations)]}}var yt=a(788);const bt=require("node:fs"),kt=require("node:path"),St=1;function xt(e,t=St){let a=`${e.uniqueId}-${t}`;return{...e,version:t,uniqueId:a}}function Tt(e,t,a){try{let n=e.read(t);return void 0===n?void(e.debug&&console.trace("cache miss")):void 0===a?n:a(n)}catch(t){return void(e.debug&&console.log("Failed to read cache",t))}}function Et(e,t,a){if(!e.canWrite)return!1;try{return e.write(t,a),!0}catch(t){return e.debug&&console.log("Failed to write cache",t),!1}}const It={read(){throw Error("not available")},write(){throw Error("not available")},canWrite:!1},Nt=(e,t)=>({read({persistentId:t,uniqueId:a,dataType:n}){if((0,bt.readFileSync)((0,kt.resolve)(e,`${t}.header`),"utf8")===a){if("string"===n){let a=(0,bt.readFileSync)((0,kt.resolve)(e,t),"utf8");return(new TextEncoder).encode(a)}{let a=(0,bt.readFileSync)((0,kt.resolve)(e,t));return new Uint8Array(a.buffer)}}},write({persistentId:t,uniqueId:a,dataType:n},r){(0,bt.mkdirSync)(e,{recursive:!0}),(0,bt.writeFileSync)((0,kt.resolve)(e,`${t}.header`),a,{encoding:"utf8"}),(0,bt.writeFileSync)((0,kt.resolve)(e,t),r,{encoding:"string"===n?"utf8":void 0})},canWrite:!0,debug:t}),Ct=Nt(yt("o1js")),At={FileSystem:Nt,FileSystemDefault:Ct,None:It},Bt={fp:{},fq:{}};let Ft;function qt(e){Ft=e}function Vt(){Ft=void 0}function Ot(e,t,a){let n=a=>t[`caml_${e}_srs_create_parallel`](a),r=t[`caml_${e}_srs_get`],i=t[`caml_${e}_srs_set`],o=t[`caml_${e}_srs_maybe_lagrange_commitment`],p=t[`caml_${e}_srs_lagrange_commitment`],s=t[`caml_${e}_srs_set_lagrange_basis`];return{create(t){let o=Bt[e][t];if(void 0===o){if(void 0===Ft)o=n(t);else{let p=function(e,t){let a=`srs-${e}-${t}`;return xt({kind:"srs",persistentId:a,uniqueId:a,dataType:"string"},1)}(e,t);if(o=Tt(Ft,p,(t=>{let n=JSON.parse((new TextDecoder).decode(t)),r=f.mapTo(n,Re),o=a[e].pointsToRust(r);return i(o)})),void 0===o&&(o=n(t),Ft.canWrite)){let t=r(o),n=a[e].pointsFromRust(t),i=f.mapFrom(n,ze),s=(new TextEncoder).encode(JSON.stringify(i));Et(Ft,p,s)}}Bt[e][t]=o}return Bt[e][t]},lagrangeCommitment(n,r,i){let d=o(n,r,i);if(void 0===d)if(void 0===Ft)d=p(n,r,i);else{let p=function(e,t){let a=`lagrange-basis-${e}-${t}`;return xt({kind:"lagrange-basis",persistentId:a,uniqueId:a,dataType:"string"},1)}(e,r);if(!0!==Tt(Ft,p,(t=>{let i=(o=JSON.parse((new TextDecoder).decode(t)),f.mapTo(o,(({shifted:e,unshifted:t})=>[0,f.mapTo(e,Re)])));var o;let p=a[e].polyCommsToRust(i);return s(n,r,p),!0}))){let i=((a,n)=>t[`caml_${e}_srs_get_lagrange_basis`](a,n))(n,r);if(Ft.canWrite){let t=function(e){return f.mapFrom(e,(([,e])=>({shifted:f.mapFrom(e,ze),unshifted:void 0})))}(a[e].polyCommsFromRust(i)),n=(new TextEncoder).encode(JSON.stringify(t));Et(Ft,p,n)}}let l=o(n,r,i);oe(void 0!==l,"commitment exists after setting"),d=l}return a[e].polyCommFromRust(d)},addLagrangeBasis(e,t){this.lagrangeCommitment(e,1<<t,0)}}}const Pt={jsEnvironment:"node",prefixHashes:{"CodaReceiptUC*******":["2930292359494829300271368860633580634815819151887078160583250237349129726103","15303314845540397914948764201521841781296890621466368017042313538410516382474","8520568699315305732843613022173524514377597839978192694761879649747314556194"],"CodaReceiptZkapp****":["10173709693039436418323173817852473796760618468635274081106091878172355412495","8139892805413950771311540201181177376747817902069998595519899391903936767134","13514876620613630149351219463845257700223634963001020028151406467995275024594"],"Coinbase************":["16825847102297458526359719396083434368788313103713242309655412848174457920423","21732702256017917816272795771734458959259892802453584375610183841451053027064","20669950187190141732603807229833302926112666951294341954340514712643194206110"],"PendingCoinbases****":["16730315671906078134534118281698719603694322959719576832314142406897554025946","25168172107432119701402092802564698772609386283424806773354665411015030859956","20203823516569384790863281992678977204769111540506990077513414850340465376267"],"CoinbaseStackData***":["23795978781100345043289806728009175185120094645976380845310050347461663815988","22848259504294538625391413055517172710405127059374914145881816600826824598643","8292468073974572410325570929211069869427868613763277519881895337391418731450"],CoinbaseStackStaHash:["335203117218289187585524630708440909952721586869179589604793956147132569543","27066428515933869709871979311099618239824992817474733219473754649926311088531","21249847167218596842529246266817628519376871370045151307329588726090940941283"],"CoinbaseStack*******":["10365018507282248303752506973112854406071106890516858854157506926717812932750","19289691782405010481159082968251292806607879795611766141901748131065655579721","8987039650233860747996941600635099179155585390854763935988086491644855810711"],"MinaCheckpoints*****":["15873130589302091361863210575263731242593763730169570459166821652327279429416","27741778946681194402252199348726997679847260280438775383573755416459042152245","7598438620402360345138640933713109733801127070065255775405685972203496634081"],"MinaMergeSnark******":["5465206932306554741198859294482250047374987110116571903153751264716396266207","28325265961862852836567844362114881306407823522046946129773393861560948847052","20049678444717746759028157787181298288785775657186008836042341914370292827996"],"MinaBaseSnark*******":["15502310217431654911062859746106286672455410530942120153504175184205809302248","3469045624943527165009161295743804688154058669917024998601801713171804105078","16667965011323249535055526937874001443515091810412343722400939445165393857780"],"MinaProtoState******":["5218970939948495870036503265499543025475317910763049867270287867667146978870","7663210626148314949787033187186036425676070286961909238040356477815169631084","19859188289320816036969227839574854326171440874550138016648548415357198703337"],"MinaProtoStateBody**":["3548547909990922956559515810876765435326873020883079662683136168632773655275","134182536761489093478066959027928272525080293912190881939140820794450385287","18910449726094816833941350890285540874861148441082116020102338532207375519343"],"MinaVrfMessage******":["24101363367502572671624471609928959797353672294440762288404204895418767914646","5171820881164007689309616183632792746219180909518238150637460314245246143263","10979796915023089328772347959806029121878467684484216605075459818053899045444"],MinaSignatureMainnet:["28597293842583882050529337819282358444728515448690248936274177901465134844489","13029865398778858891320837481651890827971447635226272051516204921834229015884","2324960771278703080070347074343683653953770644553957353754880132143131569147"],"CodaSignature*******":["6547874669265470003564181123405173756111990160585052594027544303901364349512","22191763046611062479784309793717481299019591714391827084400612211604078633201","15360317550574394687602808211901764964514686767298144053612144955373862517277"],"MinaVrfOutput*******":["2251514781415689779315070305878469259850299612928948069881728941286436529416","28445424317765931437563566658155841532256907311948842353165636913979445243675","1697103740469522139030362533818365124680980524626250761960654638291888644330"],"MinaVrfEvaluation***":["28080055385183205248434069314913715411795750554846638282391132356635075327118","25018718747831549163470950235902703474807728450690404911050923194299837536932","3256623657773355300700179149632147114566124258546613752475489953689825740823"],"MinaEpochSeed*******":["7920024158807749362970659876749181530334941449960381128739613586571256360405","13756862713999441076472977832321298402266591073703520273734381195492800342833","16931743843465107540110860558687538825985475311420101960428698400767332393906"],"MinaTransitionSnark*":["11049595972041980914958840531625028328602860712038036656362464370121336040984","24369517789348117364784880800333031735213111703459853079908318927717982912175","996573540734206293061884582007205418029995442386259428924494388795357965385"],"MinaAccount*********":["21547009634669789644192675386133007766042650219024716227935570378579547706642","3869977418072959680344087467966431440327948593054069717779845397512987438978","17591003611016737523041467644989399067682599282318802410210271366172380277153"],"MinaSideLoadedVk****":["27153629295534844750482612843518005572402188741101822965689207110291504095805","11073437601016088346212553894160581939150688827288603152461976873708720172824","9169013693168830396847022454402673046094697740892173219744332585469764409612"],"MinaZkappAccount****":["11742420651603425685690711434636216727968618158667382343736587130720645535016","20917169788479399921968659996772666237321879817943938162255353371266230737562","20221577186851444354528754069740362935513598751580381763045954351047955571417"],"MinaZkappPayload****":["15735138827391397348912010094577234813869450438840158969759900004702547928125","25095612872941242247876048162039143509752212627701285511972307921367391645919","7245494597725009330136300549232949784423520250577599502394596645257342395146"],"MainnetZkappBody****":["10214915150831852734808709087755641273868350720962413399868532305813227181967","19231103515031626108540280352804904215178644233964839448405623573586547300771","3202185325412846279878024015439663797323768206239602518916650099275135615824"],"TestnetZkappBody****":["20037733640875789833090442509053816933966165101372309054048970230906793051053","1106678471497583468621635190733109842219273971961053291385773425960251864224","25565387364959491931899708566015584890804577695743228799735258954982776499278"],"MinaZkappPred*******":["1288860557840839698672685006364179285130411098848600694737282320588924548492","24648295833336558525603848295184424886548932461541421142783307792871113347031","1330615836835056811243082335077124866238751435915242573993316916713469087050"],"MinaZkappPredAcct***":["16247099195538206941970428186933809576049890124762896310373916059400681012938","15171999803179862436296250357712424012107969488385552487664863256867849154640","4695118160519310765712802705640939163487421977728313886668234870398464448283"],"MinaZkappPredPS*****":["28115844434401213157045670864292277190427496512916771660477513364996586226191","17764239860871865704512758086410304367016330694375482081848267812860896213477","2608563583120825722034995217249250504732387097295075568312443453761249924462"],"MinaAcctUpdAcctPred*":["11173347481325879282537380504137543614432174467122278589147153842480174214350","22433785030516935555884954114999194863743668497200511950547006360846720681436","4261224905860522407514587942832658209487173552801239748203234114069543449134"],"MinaAcctUpdateCons**":["7974184247425786365466969127827083941281743695327546149120833518746435921046","1079147682067570431747049877519099849334832444581201545961023544596733431550","9670106619202136718451303928765479503313491401619698334696903962327538130992"],"MinaAcctUpdateNode**":["15921812961830232432174711488904180713275251781093575291539345321597011303739","5852213322332241594845871336918115662219071361771346507406094569679662937607","21122827334147180286039671993443893600964526985496742826857975683524856341379"],"MinaAcctUpdStckFrm**":["1223279431820750727612295994589444883292600761079562536688416996919972234987","1873141333924103856860857609363983758885824745969813373245393521390926426683","3550105212452130151915860825756512345408015936295894584118372238840612023788"],MinaActUpStckFrmCons:["2363089775097766730570162674460603870980415123701610894146069429352874281636","8717086429614898734892919627864489205116600585932141922995487227707208282057","14660270392332597302006144557344641683528071714290878702086758222477469533211"],"MinaZkappUri********":["534822897390732927195976832726937157108052596941484097303405936433225931144","21308674973525253012607500915181592359821899373849668837401701284134790635210","19235616568963430752220890547731083898076295596325584947617173371158207986317"],"MinaZkappEvent******":["4144672248660824652311280789227568759501644435839088465487215978090977152836","16580012705864177241905923711864666027965216928284588602669501632136706453456","28268897103231723777184618409092967932555901943057586428182153116992131011025"],"MinaZkappEvents*****":["22941690192200157010958144262626906691861453230235765939870625581651903942109","8085194290973996063041942057794139208480036474122767282118588735695477304146","26729904183313179836453835886592671283117737890095730465188585661277543615385"],"MinaZkappSeqEvents**":["20111532619758468729019280527752703188436440291616049387250019116440725105679","28272901079534355755544153990297346241256584111406088887261772513761686581936","11593971643819429831651280663135869674712971584194549509498204047075895747923"],"MinaZkappMemo*******":["2662735671148484138098041239517130399444285195614926917304994766121342901330","1889560324711062089177091328630260720221153765601231238715650562289804935970","4150523804923664151142435309968051550133270766858171566059780615187901817023"],"MinaZkappTest*******":["23523101868899742954180674496902908392567863852999903167375927084079494055612","4491786955849351692402874941062803293792761915358826996649017458255778371918","18160445324611651688025194683090940451613686777550031421971998315243738422364"],"MinaDeriveTokenId***":["6192019453766080264591455948244350296532066491511280821771403784079613278630","3474280028978446563781013959252007045004226094384968366087940198662654278266","20434002876694963787609307807174199928279086350854834006718281273564667456637"],CodaReceiptEmpty:["14564582992068613478915821183083107733064540968050799295374021047658500056219","21765043973285063733734239399942750176857972907855721619600674857294623000734","18519955733587546799174091248819038069762857427193969217428957100491271613694"],MinaZkappEventsEmpty:["11558119263070965853863267079253872832625419457395008685779236645292569607921","25458142203119307439619503192644060065091275427503371449742352140981637359577","28343474290528262467651243371210869540984529302238754668057531270656874883506"],MinaZkappActionsEmpty:["2965377540200775924504968637505084669999360240500907972788072774778139588064","17888733104410001265760460027725887240172765470923695174284923303416908725309","6155733123951817300356401771271939707310716210385193729101357561319788034953"],MinaZkappActionStateEmptyElt:["25079927036070901246064867767436987657692091363973573142121686150614948079097","26431778411571512074795067173224334387034335867358343719815640998216694007738","25080775363764450744501815075506845022058095277795060631172637381645274354727"],CoinbaseStack:["13478948633790621346997153068092516261975764161208078295837519850718904039733","23794571567771902109532327523992257297445027552423990566905688786749549749640","12437776415960587857483436445253285567999534294199440886476575966193776753527"],PendingCoinbaseMerkleTree:["21962074494103541153175746450273873003299668759086391980006382367241943398196","2903435713642676558047328375873609628346075739786101737671585224825766548393","25831764682100331646870313396659195191400312071282528592914032765816857800473"]},prefixHashesLegacy:{"CodaReceiptUC*******":["17081977821176270994512651394491195177111442160604726653596300537904083542874","22524836078442467808299966370016521142448937585030982609163888361124501146539","12924279821307137198726349959646209575189430925513631516289320462608412110369"],MinaSignatureMainnet:["25220214331362653986409717908235786107802222826119905443072293294098933388948","7563646774167489166725044360539949525624365058064455335567047240620397351731","171774671134240704318655896509797243441784148630375331692878460323037832932"],"CodaSignature*******":["28132119227444686413214523693400847740858213284875453355294308721084881982354","24895072146662946646133617369498198544578131474807621989761680811592073367193","3216013753133880902260672769141972972810073620591719805178695684388949134646"]},...k,...Me,...je,...Fe,...qe,...Ke,...Je,rustConversion:Dt,srs:e=>function(e,t){return{fp:Ot("fp",e,t),fq:Ot("fq",e,t)}}(e,zt(e))};function Dt(e){let t=function(e){const t=at(e,{CommitmentCurve:e.WasmGVesta,makeAffine:e.caml_vesta_affine_one,Gate:e.WasmFpGate,PolyComm:e.WasmFpPolyComm});return{fp:t,fq:at(e,{CommitmentCurve:e.WasmGPallas,makeAffine:e.caml_pallas_affine_one,Gate:e.WasmFqGate,PolyComm:e.WasmFqPolyComm}),wireToRust:t.wireToRust,mapMlArrayToRustVector:([,...e],t)=>st(e,(e=>rt(t(e))))}}(e),a=function(e,t){return{fp:wt(e,t.fp,{Domain:e.WasmFpDomain,VerificationEvals:e.WasmFpPlonkVerificationEvals,Shifts:e.WasmFpShifts,VerifierIndex:e.WasmFpPlonkVerifierIndex,LookupVerifierIndex:e.WasmFpLookupVerifierIndex,LookupSelector:e.WasmFpLookupSelectors}),fq:wt(e,t.fq,{Domain:e.WasmFqDomain,VerificationEvals:e.WasmFqPlonkVerificationEvals,Shifts:e.WasmFqShifts,VerifierIndex:e.WasmFqPlonkVerifierIndex,LookupVerifierIndex:e.WasmFqLookupVerifierIndex,LookupSelector:e.WasmFqLookupSelectors})}}(e,t),n=function(e){return{fp:vt({RandomOracles:e.WasmFpRandomOracles,Oracles:e.WasmFpOracles}),fq:vt({RandomOracles:e.WasmFqRandomOracles,Oracles:e.WasmFqOracles})}}(e),r=function(e,t){return{fp:ct(t.fp,{ProverCommitments:e.WasmFpProverCommitments,OpeningProof:e.WasmFpOpeningProof,VecVec:e.WasmVecVecFp,ProverProof:e.WasmFpProverProof,LookupCommitments:e.WasmFpLookupCommitments,RuntimeTable:e.WasmFpRuntimeTable,RuntimeTableCfg:e.WasmPastaFpRuntimeTableCfg,LookupTable:e.WasmPastaFpLookupTable}),fq:ct(t.fq,{ProverCommitments:e.WasmFqProverCommitments,OpeningProof:e.WasmFqOpeningProof,VecVec:e.WasmVecVecFq,ProverProof:e.WasmFqProverProof,LookupCommitments:e.WasmFqLookupCommitments,RuntimeTable:e.WasmFqRuntimeTable,RuntimeTableCfg:e.WasmPastaFqRuntimeTableCfg,LookupTable:e.WasmPastaFqLookupTable})}}(e,t);return{fp:{...t.fp,...a.fp,...n.fp,...r.fp},fq:{...t.fq,...a.fq,...n.fq,...r.fq},fieldsToRustFlat:Ze,fieldsFromRustFlat:Ye,wireToRust:t.wireToRust,mapMlArrayToRustVector:t.mapMlArrayToRustVector}}let Ut;function zt(e){return Ut??(Ut=Dt(e))}globalThis.__snarkyTsBindings=Pt;var Rt=a(167),Mt=a(857),jt=a(451),$t=a(16);const Lt={numWorkers:void 0};let Ht=(0,$t.fileURLToPath)("file:///Users/sauravdhar/Desktop/hackathons/ethonline24/battle_zkapp/contracts/node_modules/o1js/dist/node/bindings/js/node/node-backend.js");const Kt=jt;let Jt,Wt;globalThis.startWorkers=async function(e,t,a){ia=[],await Promise.all(Array.from({length:a.numThreads()},(()=>{let n=new Rt.Worker(e,{workerData:{memory:t,receiver:a.receiver()}});ia.push(n);let r=n;return new Promise((e=>{let t=!1;r.on("message",(function(a){null==a||"wasm_bindgen_worker_ready"!==a.type||t||(t=!0,e(n))}))}))}))),a.build(),Jt()},globalThis.terminateWorkers=async function(){return Promise.all(ia.map((e=>e.terminate()))).then((()=>ia=void 0))},Rt.isMainThread||(Rt.parentPort.postMessage({type:"wasm_bindgen_worker_ready"}),Kt.wbg_rayon_start_worker(Rt.workerData.receiver));let Gt,Xt,Zt="none",Yt=0;async function Qt(e){switch(Yt++,Zt){case"none":Gt=ea(),Zt="initializing";break;case"initializing":case"running":break;case"exiting":Gt=Xt.then(ea),Zt="initializing"}let t;await Gt,Gt=void 0,Zt="running";try{t=await e()}finally{switch(Yt--,Zt){case"none":case"initializing":case"exiting":console.error("bug in thread pool state machine");break;case"running":Yt<1&&(Xt=async function(){Rt.isMainThread&&await Kt.exitThreadPool()}(),Zt="exiting",await Xt,"exiting"===Zt&&(Xt=void 0,Zt="none"))}}return t}async function ea(){Rt.isMainThread&&(Wt=new Promise((e=>Jt=e)),await Kt.initThreadPool(Math.max(1,Lt.numWorkers??(Mt.availableParallelism()??1)-1),Ht),await Wt,Wt=void 0)}let ta,aa,na,ra,ia=[],oa=!1;async function pa(){if(oa)return;let e;oa=!0,"undefined"!=typeof require&&(e=require("./bindings/compiled/_node_bindings/o1js_node.bc.cjs")),e=(await a.e(621).then(a.t.bind(a,621,19))).default,({Snarky:ta,Ledger:aa,Pickles:na,Test:ra}=e)}async function sa(){return await pa(),ra}let da=new Set(["object","function"]),la=new Set([Number,String,Boolean,BigInt,null,void 0]);function _a(){const e=ua();function t(e){return"sizeInFields"in e&&"toFields"in e&&"fromFields"in e&&"check"in e&&"toValue"in e&&"fromValue"in e&&"toAuxiliary"in e}function a(e){return"provable"in e&&("object"==typeof e.provable||"function"==typeof e.provable)&&null!==e.provable&&t(e.provable)}function n(t,a){"object"==typeof t&&null!==t&&Object.keys(t);let n=new Set([Number,String,Boolean,BigInt,null,void 0]);if(!n.has(t)&&!da.has(typeof t))throw Error(`provable: unsupported type "${t}"`);function i(t,a){if(n.has(t))return{};if(!da.has(typeof t))throw Error(`provable: unsupported type "${t}"`);return"provable"in t?i(t.provable,a):Array.isArray(t)?t.map(((e,t)=>i(e,a[t]))).reduce(e.append,e.empty):"toInput"in t?t.toInput(a):"toFields"in t?{fields:t.toFields(a)}:Object.keys(t).map((e=>i(t[e],a[e]))).reduce(e.append,e.empty)}function o(e,t){if(e===BigInt)return t.toString();if(e===String||e===Number||e===Boolean)return t;if(null==e)return null;if(!da.has(typeof e))throw Error(`provable: unsupported type "${e}"`);if("provable"in e)return o(e.provable,t);if(Array.isArray(e))return e.map(((e,a)=>o(e,t[a])));if("toJSON"in e)return e.toJSON(t);if(!0===a?.(e))throw Error(`Expected \`toJSON()\` method on ${r(e)}`);return Object.fromEntries(Object.keys(e).map((a=>[a,o(e[a],t[a])])))}function p(e,t){if(e===BigInt)return BigInt(t);if(e===String||e===Number||e===Boolean)return t;if(null==e)return;if(!da.has(typeof e))throw Error(`provable: unsupported type "${e}"`);if("provable"in e)return p(e.provable,t);if(Array.isArray(e))return e.map(((e,a)=>p(e,t[a])));if("fromJSON"in e)return e.fromJSON(t);if(!0===a?.(e))throw Error(`Expected \`fromJSON()\` method on ${r(e)}`);let n=Object.keys(e),i=p(n.map((t=>e[t])),n.map((e=>t[e])));return Object.fromEntries(n.map(((e,t)=>[e,i[t]])))}function s(e){if(e===Number)return 0;if(e===String)return"";if(e===Boolean)return!1;if(e===BigInt)return 0n;if(null==e)return e;if(!da.has(typeof e))throw Error(`provable: unsupported type "${e}"`);if("provable"in e)return s(e.provable);if(Array.isArray(e))return e.map(s);if("empty"in e)return e.empty();if(!0===a?.(e))throw Error(`Expected \`empty()\` method on ${r(e)}`);return Object.fromEntries(Object.keys(e).map((t=>[t,s(e[t])])))}return{toInput:e=>i(t,e),toJSON:e=>o(t,e),fromJSON:e=>p(t,e),empty:()=>s(t)}}function r(e){return"name"in e?e.name:"anonymous type object"}function i(e){return function t(n,r){if(la.has(n))return r;if(!da.has(typeof n))throw Error(`provable: unsupported type "${n}"`);return a(n)&&e in n.provable?n.provable[e](r):Array.isArray(n)?n.map(((e,a)=>t(e,r[a]))):e in n?n[e](r):Object.fromEntries(Object.keys(n).map((e=>[e,t(n[e],r[e])])))}}return{provable:function(e,o){if(!ma(e)&&!da.has(typeof e))throw Error(`provable: unsupported type "${e}"`);function p(e){if(ma(e))return 0;if(!da.has(typeof e))throw Error(`provable: unsupported type "${e}"`);return a(e)?e.provable.sizeInFields():Array.isArray(e)?e.map(p).reduce(((e,t)=>e+t),0):t(e)?e.sizeInFields():Object.values(e).map(p).reduce(((e,t)=>e+t),0)}function s(e,n){if(ma(e))return[];if(!da.has(typeof e))throw Error(`provable: unsupported type "${e}"`);if(a(e))return e.provable.toFields(n);if(Array.isArray(e)){if(!Array.isArray(n))throw Error("Expected an array for type, but got "+typeof n);if(e.length!==n.length)throw Error(`Expected array length ${e.length}, but got ${n.length}`);return e.map(((e,t)=>s(e,n[t]))).flat()}return t(e)?e.toFields(n):Object.keys(e).map((t=>s(e[t],n[t]))).flat()}function d(e,n){if(e===Number)return[n??0];if(e===String)return[n??""];if(e===Boolean)return[n??!1];if(e===BigInt)return[n??0n];if(null==e)return[];if(ma(e)||!da.has(typeof e))throw Error(`provable: unsupported type "${e}"`);return a(e)?e.provable.toAuxiliary(n):Array.isArray(e)?e.map(((e,t)=>d(e,n?.[t]))):t(e)?e.toAuxiliary(n):Object.keys(e).map((t=>d(e[t],n?.[t])))}function l(e,n,r=[]){if(e===Number||e===String||e===Boolean||e===BigInt)return r[0];if(null==e)return e;if(ma(e)||!da.has(typeof e))throw Error(`provable: unsupported type "${e}"`);if(a(e))return e.provable.fromFields(n,r);if(Array.isArray(e)){let t=[],a=0,i=0;for(let o of e){let e=p(o);t.push(l(o,n.slice(i,i+e),r[a])),i+=e,a++}return t}if(t(e))return e.fromFields(n,r);let i=Object.keys(e),o=l(i.map((t=>e[t])),n,r);return Object.fromEntries(i.map(((e,t)=>[e,o[t]])))}function _(e,n){if(!ma(e)){if(!da.has(typeof e))throw Error(`provable: unsupported type "${e}"`);if(a(e))return e.provable.check(n);if(Array.isArray(e))return e.forEach(((e,t)=>_(e,n[t])));if(t(e))return e.check(n);if("Struct"===r(e))throw new Error("provable: cannot run check() on 'Struct' type. Instead of using 'Struct' directly, extend 'Struct' to create a specific type.\n\nExample:\n// Incorrect Usage:\nclass MyStruct extends Struct({\n  fieldA: Struct, // This is incorrect\n}) {}\n\n// Correct Usage:\nclass MyStruct extends Struct({\n  fieldA: MySpecificStruct, // Use the specific struct type\n}) {}\n");if("function"==typeof e)throw new Error("provable: invalid type detected. Functions are not supported as types. Ensure you are passing an instance of a supported type or an anonymous object.\n");return Object.keys(e).forEach((t=>_(e[t],n[t])))}}const m=i("toValue"),u=i("fromValue");let{empty:c,fromJSON:f,toJSON:h,toInput:g}=n(e,(e=>t(e)||a(e)));return{sizeInFields:()=>p(e),toFields:t=>s(e,t),toAuxiliary:t=>d(e,t),fromFields:(t,a)=>l(e,t,a),check:t=>_(e,t),toValue:t=>m(e,t),fromValue:t=>u(e,t),toInput:e=>g(e),toJSON:e=>h(e),fromJSON:e=>f(e),empty:()=>c()}},signable:n}}function ma(e){return la.has(e)}function ua(){return{get empty(){return{}},append:(e,t)=>({fields:(e.fields??[]).concat(t.fields??[]),packed:(e.packed??[]).concat(t.packed??[])})}}function ca(e,t){if(!Number.isInteger(e)||e<=0)throw Error(t)}function fa({toBytes:e,readBytes:t}){let a=(e,a)=>{if(function(e){if(!Number.isInteger(e)||e<0)throw Error("readBytes: offset must be integer >= 0")}(a),a>=e.length)throw Error("readBytes: offset must be within bytes length");let[n,r]=t(e,a);if(r<a)throw Error("offset returned by readBytes must be greater than initial offset");if(r>e.length)throw Error("offset returned by readBytes must not exceed bytes length");return[n,r]};return{toBytes:e,readBytes:a,fromBytes(e){let[t,n]=a(e,0);if(n<e.length)throw Error("fromBytes: input bytes left over");return t}}}function ha(e,t){return fa({toBytes(a){let n=e.toBytes(a);return n.unshift(t),n},readBytes(a,n){let r=a[n++];if(r!==t)throw Error(`fromBytes: Invalid version byte. Expected ${t}, got ${r}.`);return e.readBytes(a,n)}})}function ga(e,t){let a=function(e){let t=e.length;return fa({toBytes(a){let n=[];for(let r=0;r<t;r++){let t=e[r].toBytes(a[r]);n.push(...t)}return n},readBytes(a,n){let r=[];for(let i=0;i<t;i++){let[t,o]=e[i].readBytes(a,n);n=o,r.push(t)}return[r,n]}})}(t.map((t=>e[t])));return fa({toBytes(e){let n=t.map((t=>e[t]));return a.toBytes(n)},readBytes(e,n){let[r,i]=a.readBytes(e,n);return[Object.fromEntries(t.map(((e,t)=>[e,r[t]]))),i]}})}fa({toBytes:e=>[Fa(e),...Aa(e)],readBytes(e,t){let a=e[t++],n=t+a;return[Ba(e.slice(t,n)),n]}});const wa=255,va=254,ya=253,ba=252;function ka(e){let t=1n<<BigInt(e-1),a=e>>3;if(8*a!==e)throw Error("bits must be evenly divisible by 8");return fa({toBytes(a){if(a<-t||a>=t)throw Error(`int${e} out of range, got ${a}`);if(a>=0)return a<0x80n?V(a,1):a<0x8000n?[va,...V(a,2)]:a<2147483648?[ya,...V(a,4)]:[ba,...V(a,8)];{let e=1n<<64n;return a>=-0x80n?[wa,...V(e+a&0xffn,1)]:a>=-0x8000n?[va,...V(e+a&0xffffn,2)]:a>=-2147483648?[ya,...V(e+a&0xffffffffn,4)]:[ba,...V(e+a,8)]}},readBytes(n,r){let i=n[r++];if(i<128)return[BigInt(i),r];let o={[wa]:1,[va]:2,[ya]:4,[ba]:8}[i];if(void 0===o)throw Error("binable integer: invalid start byte");let p=r+o,s=function(e,t){let a=e.length,n=e[a-1]>>7==1?255:0;return A(e.concat(Array(t-a).fill(n)))}(n.slice(r,p),a);if(s>=t&&(s-=2n*t),s<-t||s>=t)throw Error(`int${e} out of range, got ${s}`);return[s,p]}})}function Sa(e){let t=ka(e),a=1n<<BigInt(e-1);return function(e,{to:t,from:a}){return fa({toBytes:a=>e.toBytes(t(a)),readBytes(t,n){let[r,i]=e.readBytes(t,n);return[a(r),i]}})}(t,{to(t){if(t<0n||t>=2n*a)throw Error(`uint${e} out of range, got ${t}`);return t>=a?t-2n*a:t},from(t){let n=t<0n?t+2n*a:t;if(n<0n||n>=2n*a)throw Error(`uint${e} out of range, got ${n}`);return n}})}function xa(e,t){let a=e.sizeInBytes;if(t.length>=a)throw Error("prefix too long");let n=Aa(t);return e.fromBytes(n.concat(Array(a-n.length).fill(0)))}function Ta([...e]){let t=[];for(;e.length>0;){let a=e.splice(0,8),n=0;for(let e=0;e<8;e++)a[e]&&(n|=1<<e);t.push(n)}return t}function Ea(e){return e.map((e=>{let t=Array(8);for(let a=0;a<8;a++)t[a]=!!(1&e),e>>=1;return t})).flat()}function Ia(e,t){return{...e,toBits:a=>Ea(e.toBytes(a)).slice(0,t),fromBits:t=>e.fromBytes(Ta(t)),sizeInBytes:Math.ceil(t/8),sizeInBits:t}}ka(64),ka(32),Sa(64),Sa(32);let Na=new TextEncoder,Ca=new TextDecoder;function Aa(e){return[...Na.encode(e)]}function Ba(e){return Ca.decode(Uint8Array.from(e))}function Fa(e){return Na.encode(e).length}let{signable:qa}=_a();function Va(e){return{toInput:e=>({fields:[e],packed:[]}),toJSON:e=>e.toString(),fromJSON(t){if(isNaN(t)||isNaN(parseFloat(t)))throw Error(`fromJSON: expected a numeric string, got "${t}"`);let a=BigInt(t);return e(a),a},empty:()=>0n}}function Oa(e,t){let a=Math.ceil(e/8);return Ia(fa({toBytes:e=>V(e,a),readBytes(e,n){let r=0n,i=0n,o=Math.min(n+a,e.length);for(let t=n;t<o;t++)r+=BigInt(e[t])<<i,i+=8n;return t(r),[r,o]}}),e)}const Pa=Y.sizeInBits,Da=0x40000000000000000000000000000000224698fc094cf91b992d30ed00000000n,Ua=Ya(0n,Y.modulus,"Field"),za=Qa(new Set([0n,1n]),"Bool"),Ra=Qa(new Set([0,1]),"Bool"),Ma=Qa(new Set([1n,Da]),"Sign"),ja=Oa(Y.sizeInBits,Ua),$a=Va(Ua),La=Za((function(e){return W(BigInt(e),Y.modulus)}),{...$a,...ja,...Y,toBigint:e=>e}),Ha=Za((function(e){return e}),{...(Ka=Ra,Ia(fa({toBytes:e=>[e?1:0],readBytes(e,t){let a=e[t];return Ka(a),[1===a,t+1]}}),1)),fromBigint:e=>(za(e),0n!==e),toBigint:e=>e?1n:0n,toInput:e=>({fields:[],packed:[[Ha.toBigint(e),1]]}),toBoolean:e=>e,toJSON:e=>e,fromJSON:e=>e,empty:()=>!1,sizeInBytes:1,fromField:e=>Ha.fromBigint(e)});var Ka;function Ja(e){let t=(1n<<BigInt(e))-1n,a=Ya(0n,1n<<BigInt(e),`UInt${e}`),n=Oa(e,a),r=Math.ceil(e/8);return Za((function(e){let t=BigInt(e);return a(t),t}),{...Va(a),...n,toInput:t=>({fields:[],packed:[[t,e]]}),maxValue:t,random:()=>n.fromBytes([...H(r)])})}const Wa=Ja(32),Ga=Ja(64),Xa=Za((function(e){if(1!==e&&-1!==e)throw Error("Sign: input must be 1 or -1.");return W(BigInt(e),Y.modulus)}),{...Va(Ma),...Oa(1,Ma),empty:()=>1n,toInput:e=>({fields:[],packed:[[1n===e?1n:0n,1]]}),fromFields:([e])=>0n===e?1n:(Ma(e),e),toJSON:e=>1n===e?"Positive":"Negative",fromJSON(e){if("Positive"!==e&&"Negative"!==e)throw Error("Sign: invalid input");return"Positive"===e?1n:Da}});function Za(e,t){return Object.assign(e,t)}function Ya(e,t,a){return n=>{if(n<e)throw Error(`${a}: inputs smaller than ${e} are not allowed, got ${n}`);if(n>=t)throw Error(`${a}: inputs larger than ${t-1n} are not allowed, got ${n}`)}}function Qa(e,t){return a=>{if(!e.has(a))throw Error(`${t}: input must be one of ${[...e].join(", ")}, got ${a}`)}}const en=function(e={allowsNesting:!0,default:void 0}){let t=Object.assign((function(){return t.data[t.data.length-1]?.context}),{data:[],allowsNesting:e.allowsNesting??!0,get:()=>function(e){if(0===e.data.length)throw Error(nn);return e.data[e.data.length-1].context}(t),has:()=>0!==t.data.length,runWith(e,a){let n,r,i=tn(t,e);try{n=a(e)}finally{r=an(t,i)}return[r,n]},async runWithAsync(e,a){let n,r,i=tn(t,e);try{n=await a(e)}finally{r=an(t,i)}return[r,n]},enter:e=>tn(t,e),leave:e=>an(t,e),id:()=>{if(0===t.data.length)throw Error(nn);return t.data[t.data.length-1].id}});return void 0!==e.default&&tn(t,e.default),t};function tn(e,t){if(e.data.length>0&&!e.allowsNesting)throw Error(nn);let a=Math.random(),n=Error().stack?.slice(5);return e.data.push({context:t,id:a,trace:n}),a}function an(e,t){let a=e.data.pop();if(void 0===a)throw Error(nn);if(a.id!==t){let n=nn,r=e.data.find((e=>e.id===t));throw r?.trace&&(n+=`\n\nWe wanted to leave the global context entered here:${r.trace}`,a.trace&&(n+=`\n\nBut we actually would have left the global context entered here:${a.trace}`,n+="\n\nOur first recommendation is to check for a missing 'await' in the second stack trace."),n+="\n\n"),Error(n)}return a.context}let nn="The global context managed by o1js reached an inconsistent state. This could be caused by one of the following reasons:\n\n- You are missing an 'await' somewhere, which causes a new global context to be entered before we finished the last one.\n\n- You are importing two different instances of o1js, which leads to inconsistent tracking of the global context in one of those instances.\n  - This is a common problem in projects that use o1js as part of a UI!\n\n- You are running multiple async operations concurrently, which conflict in using the global context.\n  - Running async o1js operations (like proving) in parallel is not supported! Try running everything serially.\n  \nInvestigate the stack traces below for more hints about the problem.",rn=en({default:{}});function on(){return!!rn.get().inProver}function pn(){let e=rn.get();return!!e.inCompile||!!e.inProver||!!e.inCheckedComputation}function sn(){return!!rn.get().inAnalyze}function dn(e){pn()?ta.run.asProver(e):e()}async function ln(e,{checkConstraints:t=!0}={}){await pa();let a=rn.enter({inCheckedComputation:!0});try{let a=ta.run.enterGenerateWitness();return t||ta.run.setEvalConstraints(g(!1)),await e(),a()}catch(e){throw ae(e)}finally{t||ta.run.setEvalConstraints(g(!0)),rn.leave(a)}}let _n=Y.modulus-(1n<<64n);function mn(e,t){return 0===t.length?"":"Generic"===e&&t.length>5?`${mn(e,t.slice(0,5))} ${mn(e,t.slice(5))}`:"Poseidon"===e&&t.length>3?`${mn(e,t.slice(0,3)).slice(0,-1)} ...]`:`[${t.map((e=>{let t=BigInt(e);t>_n&&(t-=Y.modulus);let a=t.toString();return a.length>4?`${a.slice(0,4)}..`:a})).join(" ")}]`}function un(e,t){let a=[],n=e.length;for(let r=0;r<n;r++){let n=e[r];n.row===t&&n.col===r||(n.row===t?a.push(`${r}->${n.col}`):a.push(`${r}->(${n.row},${n.col})`))}return a.join(", ")}function cn(e){return[0,Y.mod(e)]}const fn={fromBigint:cn,toBigint:function(e){return e[1]},equal:(e,t)=>e[1]===t[1],0:cn(0n),1:cn(1n),[-1]:cn(-1n)};var hn;!function(e){e[e.Constant=0]="Constant",e[e.Var=1]="Var",e[e.Add=2]="Add",e[e.Scale=3]="Scale"}(hn||(hn={}));const gn={Constant:e=>[hn.Constant,e],Var:e=>[hn.Var,e],Add:(e,t)=>[hn.Add,e,t],Scale:(e,t)=>[hn.Scale,e,t],constant(e){let t="bigint"==typeof e?fn.fromBigint(e):e;return[hn.Constant,t]},add:(e,t)=>gn.isConstant(e)&&0n===e[1][1]?t:gn.isConstant(t)&&0n===t[1][1]?e:gn.isConstant(e)&&gn.isConstant(t)?gn.constant(Y.add(e[1][1],t[1][1])):[hn.Add,e,t],scale(e,t){let a="bigint"==typeof e?fn.fromBigint(e):e;return 0n===a[1]?gn.constant(0n):1n===a[1]?t:gn.isConstant(t)?gn.constant(Y.mul(a[1],t[1][1])):gn.isScale(t)?[hn.Scale,fn.fromBigint(Y.mul(a[1],t[1][1])),t[2]]:[hn.Scale,a,t]},isConstant:e=>e[0]===hn.Constant,isVar:e=>e[0]===hn.Var,isAdd:e=>e[0]===hn.Add,isScale:e=>e[0]===hn.Scale,0:[hn.Constant,fn[0]],1:[hn.Constant,fn[1]],[-1]:[hn.Constant,fn[-1]]};let wn,vn;function yn(e){if(void 0===wn)throw Error("Cannot construct a Field before the class was defined.");return new wn(e)}function bn(e){if(void 0===vn)throw Error("Cannot construct a Bool before the class was defined.");return new vn(e)}function kn(){if(void 0===wn)throw Error("Field class not defined yet.");return wn}const Sn={map:(e,t)=>e.map(t)},xn={map:(e,t)=>e.map(t),fromArray:(e,t)=>(oe(t.length===e,`Expected array of length ${e}, got ${t.length}`),t),hasLength:(e,t)=>t.length===e};function Tn(e,t){let a=ta.run.enterAsProver(e);if(!ta.run.inProver()){let t=f.mapFrom(a(w()),In);return xn.fromArray(e,t)}let n=t();if(n.length!==e)throw Error(`Expected witnessed values of length ${e}, got ${n.length}.`);let r=f.mapTo(n,fn.fromBigint),i=a(w(r)),o=f.mapFrom(i,In);return xn.fromArray(e,o)}function En(e){return Tn(1,(()=>[e()]))[0]}function In(e){return yn(e)}const Nn={rangeCheck0:function(e,t,a,n){ta.gates.rangeCheck0(e.value,y.mapTo(t,(e=>e.value)),y.mapTo(a,(e=>e.value)),n?fn[1]:fn[0])},rangeCheck1:function(e,t,a,n){ta.gates.rangeCheck1(e.value,t.value,y.mapTo(a,(e=>e.value)),y.mapTo(n,(e=>e.value)))},xor:function(e,t,a,n,r,i,o,p,s,d,l,_,m,u,c){ta.gates.xor(e.value,t.value,a.value,n.value,r.value,i.value,o.value,p.value,s.value,d.value,l.value,_.value,m.value,u.value,c.value)},zero:function(e,t,a){An(Bn.Zero,[e,t,a],[])},rotate:function(e,t,a,n,r,i){ta.gates.rotate(e.value,t.value,a.value,f.to(n.map((e=>e.value))),f.to(r.map((e=>e.value))),fn.fromBigint(i))},generic:function(e,t){ta.gates.generic(qn(e.left),Fn(t.left),qn(e.right),Fn(t.right),qn(e.out),Fn(t.out),qn(e.mul),qn(e.const))},lookup:function(e,t,a,n,r,i,o){ta.gates.lookup([0,e.value,t.value,a.value,n.value,r.value,i.value,o.value])},foreignFieldAdd:Cn,foreignFieldMul:function(e){let{left:t,right:a,remainder:n,quotient:r,quotientHiBound:i,product1:o,carry0:p,carry1p:s,carry1c:d,foreignFieldModulus2:l,negForeignFieldModulus:_}=e;ta.gates.foreignFieldMul(y.mapTo(t,(e=>e.value)),y.mapTo(a,(e=>e.value)),y.mapTo(n,(e=>e.value)),y.mapTo(r,(e=>e.value)),i.value,y.mapTo(o,(e=>e.value)),p.value,y.mapTo(s,(e=>e.value)),y.mapTo(d,(e=>e.value)),fn.fromBigint(l),y.mapTo(_,fn.fromBigint))},raw:An};function Cn({left:e,right:t,overflow:a,carry:n,modulus:r,sign:i}){ta.gates.foreignFieldAdd(y.mapTo(e,(e=>e.value)),y.mapTo(t,(e=>e.value)),a.value,n.value,y.mapTo(r,fn.fromBigint),fn.fromBigint(i))}function An(e,t,a){let n=t.length,r=Tn(15-n,(()=>Array(15-n).fill(0n)));ta.gates.raw(e,f.to(t.concat(r).map((e=>e.value))),f.to(a.map(fn.fromBigint)))}var Bn;function Fn(e){return"bigint"==typeof e?gn.constant(e):Array.isArray(e)?e:e.value}function qn(e){return"bigint"==typeof e?fn.fromBigint(e):e}function Vn(e){let t=yn(e);if(function(e){return gn.isVar(Fn(e))}(t))return t;let a=En((()=>t.toBigInt()));return a.assertEquals(t),a}function On(e){return Sn.map(e,Vn)}function Pn(e,t){if("boolean"==typeof e){if(!e)throw Error(t??"Assertion failed")}else e.assertTrue(t??"Assertion failed")}function Dn(e,t,a){return e>>BigInt(t)&(1n<<BigInt(a))-1n}function Un(...e){return e.every((e=>e.isConstant()))}function zn(e,t){let a=Vn(e),[n,r,...i]=t,o=i.length;if(0===o)return void Mn(a,a,[1n,-(n+r),0n,n*r]);let p=Rn(a,a,[1n,-(n+r),0n,n*r]);for(let e=0;e<o;e++)e<o-1?p=Rn(p,a,[1n,-i[e],0n,0n]):Mn(p,a,[1n,-i[e],0n,0n])}function Rn(e,t,[a,n,r,i]){let o=En((()=>{let o=yn(e).toBigInt(),p=yn(t).toBigInt();return a*o*p+n*o+r*p+i}));return Nn.generic({left:n,right:r,out:-1n,mul:a,const:i},{left:e,right:t,out:o}),o}function Mn(e,t,[a,n,r,i],o){Nn.generic({left:n,right:r,out:void 0===o?0n:-1n,mul:a,const:i},{left:e,right:t,out:void 0===o?jn():o})}function jn(){return En((()=>0n))}function $n(e){let{constant:t,terms:a}=Ln(Fn(e));if(a.sort((([,[,e]],[,[,t]])=>e-t)),0===a.length)return[hn.Constant,fn.fromBigint(t)];if(1===a.length){let[e,n]=a[0];if(0n===t)return[hn.Scale,fn.fromBigint(e),n];{let a=function(e,[t,a]){let n=En((()=>{let n=yn(e).toBigInt();return t*n+a}));return Nn.generic({left:t,right:0n,out:-1n,mul:0n,const:a},{left:e,right:jn(),out:n}),n}(n,[e,t]);return[hn.Scale,fn[1],a.value]}}let[[n,r],...i]=a,[o,p]=i.pop();for(let[e,t]of i.reverse())p=Rn(t,p,[0n,e,o,0n]).value,o=1n;let s=Rn(r,p,[0n,n,o,t]);return[hn.Scale,fn[1],s.value]}function Ln(e,t=1n,a={constant:0n,terms:[]}){let{constant:n,terms:r}=a;if(0n===t)return a;switch(e[0]){case hn.Constant:{let[,[,a]]=e;return{constant:Y.add(n,Y.mul(t,a)),terms:r}}case hn.Var:{let[,a]=e,i=r.find((e=>e[1][1]===a));if(void 0===i)return{constant:n,terms:[[t,e],...r]};let[o]=i;return i[0]=Y.add(o,t),0n===i[0]&&(r=r.filter((e=>e[1][1]!==a))),{constant:n,terms:r}}case hn.Scale:{let[,[,n],r]=e;return Ln(r,Y.mul(t,n),a)}case hn.Add:{let[,n,r]=e;return a=Ln(n,t,a),Ln(r,t,a)}}}!function(e){e[e.Zero=0]="Zero",e[e.Generic=1]="Generic",e[e.Poseidon=2]="Poseidon",e[e.CompleteAdd=3]="CompleteAdd",e[e.VarBaseMul=4]="VarBaseMul",e[e.EndoMul=5]="EndoMul",e[e.EndoMulScalar=6]="EndoMulScalar",e[e.Lookup=7]="Lookup",e[e.CairoClaim=8]="CairoClaim",e[e.CairoInstruction=9]="CairoInstruction",e[e.CairoFlags=10]="CairoFlags",e[e.CairoTransition=11]="CairoTransition",e[e.RangeCheck0=12]="RangeCheck0",e[e.RangeCheck1=13]="RangeCheck1",e[e.ForeignFieldAdd=14]="ForeignFieldAdd",e[e.ForeignFieldMul=15]="ForeignFieldMul",e[e.Xor16=16]="Xor16",e[e.Rot64=17]="Rot64"}(Bn||(Bn={}));const Hn={isVar:function(e){return e[0]===hn.Scale},getVar:function(e){return[e[1][1],e[2]]},isConst:function(e){return e[0]===hn.Constant},getConst:function(e){return e[1][1]}};let{isVar:Kn,getVar:Jn,isConst:Wn,getConst:Gn}=Hn;function Xn(e,t,a){let n=$n(e),r=$n(t),i=$n(a);if(Kn(n)&&Kn(r)&&Kn(i)){let[[e,t],[a,o],[p,s]]=[Jn(n),Jn(r),Jn(i)];return Nn.generic({left:0n,right:0n,out:p,mul:-e*a,const:0n},{left:t,right:o,out:s})}if(Kn(n)&&Kn(r)&&Wn(i)){let[[e,t],[a,o],p]=[Jn(n),Jn(r),Gn(i)];return Nn.generic({left:0n,right:0n,out:0n,mul:e*a,const:-p},{left:t,right:o,out:jn()})}if(Kn(n)&&Wn(r)&&Kn(i)){let[[e,t],a,[o,p]]=[Jn(n),Gn(r),Jn(i)];return Nn.generic({left:e*a,right:0n,out:-o,mul:0n,const:0n},{left:t,right:jn(),out:p})}if(Wn(n)&&Kn(r)&&Kn(i)){let[e,[t,a],[o,p]]=[Gn(n),Jn(r),Jn(i)];return Nn.generic({left:0n,right:e*t,out:-o,mul:0n,const:0n},{left:jn(),right:a,out:p})}if(Kn(n)&&Wn(r)&&Wn(i)){let[[e,t],a,o]=[Jn(n),Gn(r),Gn(i)];return Nn.generic({left:e*a,right:0n,out:0n,mul:0n,const:-o},{left:t,right:jn(),out:jn()})}if(Wn(n)&&Kn(r)&&Wn(i)){let[e,[t,a],o]=[Gn(n),Jn(r),Gn(i)];return Nn.generic({left:0n,right:e*t,out:0n,mul:0n,const:-o},{left:jn(),right:a,out:jn()})}if(Wn(n)&&Wn(r)&&Kn(i)){let[e,t,[a,o]]=[Gn(n),Gn(r),Jn(i)];return Nn.generic({left:0n,right:0n,out:a,mul:0n,const:-e*t},{left:jn(),right:jn(),out:o})}if(Wn(n)&&Wn(r)&&Wn(i)){let[e,t,a]=[Gn(n),Gn(r),Gn(i)];Pn(Y.equal(Y.mul(e,t),a),`assertMul(): ${e} * ${t} !== ${a}`)}else Pn(!1,"assertMul(): unreachable")}function Zn(e,t){let a=$n(e),n=$n(t);if(Kn(a)&&Kn(n)){let[[e,t],[r,i]]=[Jn(a),Jn(n)];return Nn.generic({left:0n,right:0n,out:-r,mul:e**2n,const:0n},{left:t,right:t,out:i})}if(Kn(a)&&Wn(n)){let[[e,t],r]=[Jn(a),Gn(n)];return Nn.generic({left:0n,right:0n,out:0n,mul:e**2n,const:-r},{left:t,right:t,out:jn()})}if(Wn(a)&&Kn(n)){let[e,[t,r]]=[Gn(a),Jn(n)];return Nn.generic({left:0n,right:0n,out:t,mul:0n,const:-(e**2n)},{left:jn(),right:jn(),out:r})}if(Wn(a)&&Wn(n)){let[e,t]=[Gn(a),Gn(n)];Pn(Y.equal(Y.square(e),t),`assertSquare(): ${e}^2 !== ${t}`)}else Pn(!1,"assertSquare(): unreachable")}class Yn{constructor(e){e instanceof Yn?this.value=e.value:Array.isArray(e)?this.value=e:this.value=gn.constant(BigInt(e))}isConstant(){return this.value[0]===hn.Constant}toField(){return Yn.toField(this)}not(){if(this.isConstant())return new Yn(!this.toBoolean());let e=new ui(1).sub(this.toField());return new Yn(e.value)}and(e){return this.isConstant()&&er(e)?new Yn(this.toBoolean()&&tr(e)):new Yn(this.toField().mul(Yn.toField(e)).value)}or(e){return this.isConstant()&&er(e)?new Yn(this.toBoolean()||tr(e)):this.not().and(new Yn(e).not()).not()}implies(e){return this.not().or(e)}assertEquals(e,t){try{if(this.isConstant()&&er(e)){if(this.toBoolean()!==tr(e))throw Error(`Bool.assertEquals(): ${this} != ${e}`);return}this.toField().assertEquals(Yn.toField(e))}catch(e){throw wi(e,t)}}assertTrue(e){try{if(this.isConstant()&&!this.toBoolean())throw Error(`Bool.assertTrue(): ${this} != true`);this.assertEquals(!0)}catch(t){throw wi(t,e)}}assertFalse(e){try{if(this.isConstant()&&this.toBoolean())throw Error(`Bool.assertFalse(): ${this} != false`);this.assertEquals(!1)}catch(t){throw wi(t,e)}}equals(e){if(this.isConstant()&&er(e))return new Yn(this.toBoolean()===tr(e));if(er(e))return tr(e)?this:this.not();if(this.isConstant())return new Yn(e).equals(this);let t=En((()=>BigInt(this.toBoolean()!==tr(e)))),a=this.toField(),n=Yn.toField(e);return Xn(a.add(a),n,a.add(n).sub(t)),new Yn(t.value).not()}sizeInFields(){return 1}toFields(){return Yn.toFields(this)}toString(){return this.toBoolean().toString()}toJSON(){return this.toBoolean()}toBoolean(){if(this.isConstant())return fn.equal(this.value[1],fn[1]);if(!ta.run.inProverBlock())throw Error(ki("toBoolean","b","Bool"));let e=ta.field.readVar(this.value);return fn.equal(e,fn[1])}static toField(e){return new ui(function(e){return e instanceof Yn?e.value:gn.constant(BigInt(e))}(e))}static not(e){return e instanceof Yn?e.not():new Yn(!e)}static and(e,t){return e instanceof Yn?e.and(t):new Yn(e).and(t)}static or(e,t){return e instanceof Yn?e.or(t):new Yn(e).or(t)}static assertEqual(e,t){e instanceof Yn?e.assertEquals(t):new Yn(e).assertEquals(t)}static equal(e,t){return e instanceof Yn?e.equals(t):new Yn(e).equals(t)}static toFields(e){return[Yn.toField(e)]}static toAuxiliary(e){return[]}static fromFields(e){if(1!==e.length)throw Error(`Bool.fromFields(): expected 1 field, got ${e.length}`);return new Yn(e[0].value)}static toValue(e){return e.toBoolean()}static fromValue(e){return"boolean"==typeof e?new Yn(e):e}static toJSON(e){return e.toBoolean()}static fromJSON(e){return new Yn(e)}static sizeInFields(){return 1}static empty(){return new Yn(!1)}static toInput(e){return{packed:[[e.toField(),1]]}}static toBytes(e){return Qn.toBytes(e)}static fromBytes(e){return Qn.fromBytes(e)}static readBytes(e,t){return Qn.readBytes(e,t)}static check(e){e.toField().assertBool()}}Yn.sizeInBytes=1,Yn.Unsafe={fromField:e=>new Yn(e.value)},vn=Yn;const Qn=fa({toBytes:e=>[Number(e.toBoolean())],readBytes:(e,t)=>[new Yn(!!e[t]),t+1]});function er(e){return"boolean"==typeof e||e.isConstant()}function tr(e){return"boolean"==typeof e?e:e.toBoolean()}const ar={get:e=>"object"!=typeof e&&"function"!=typeof e||null===e||!("provable"in e)?e:e.provable},nr=ua(),{provable:rr}=_a();function ir(e){return rr(e,{isPure:!0})}function or(e){return rr(e)}function pr(e,t){let a=rr(t);return{sizeInFields:a.sizeInFields,toFields:a.toFields,toAuxiliary:a.toAuxiliary,fromFields:(t,n)=>sr(e,a.fromFields(t,n)),check(t){void 0!==e.check?e.check(t):a.check(t)},toValue:a.toValue,fromValue:t=>sr(e,a.fromValue(t)),toInput:a.toInput,toJSON:a.toJSON,fromJSON:t=>sr(e,a.fromJSON(t)),empty:()=>void 0!==e.empty?e.empty():sr(e,a.empty())}}function sr(e,t){let a=Object.create(e.prototype);return Object.assign(a,t)}function dr(e,t){const a=ar.get(e);let n,r,i=rn.get();if(!pn()||i.inWitnessBlock)return lr(a,a.fromValue(t()));let o=rn.enter({...i,inWitnessBlock:!0});try{r=Tn(a.sizeInFields(),(()=>{let e=a.fromValue(t());return n=e,a.toFields(e).map((e=>e.toBigInt()))}))}finally{rn.leave(o)}let p=a.toAuxiliary(n),s=a.fromFields(r,p);return a.check(s),s}function lr(e,t){let a=e.toFields(t),n=e.toAuxiliary?.(t)??[];return e.fromFields(a,n)}const _r={witness:dr,witnessFields:function(e,t){if(!pn()||rn.get().inWitnessBlock){let a=t().map((e=>yn(e)));return xn.fromArray(e,a)}return Tn(e,(()=>{let a=t().map((e=>"bigint"==typeof e?e:e.toBigInt()));return xn.fromArray(e,a)}))},witnessAsync:async function(e,t){const a=ar.get(e);let n,r,i=rn.get();if(!pn()||i.inWitnessBlock){let e=await t();return lr(a,a.fromValue(e))}let o=rn.enter({...i,inWitnessBlock:!0});try{r=await async function(e,t){let a=ta.run.enterAsProver(e);if(!ta.run.inProver()){let t=f.mapFrom(a(w()),In);return xn.fromArray(e,t)}let n=await t();if(n.length!==e)throw Error(`Expected witnessed values of length ${e}, got ${n.length}.`);let r=f.mapTo(n,fn.fromBigint),i=a(w(r)),o=f.mapFrom(i,In);return xn.fromArray(e,o)}(a.sizeInFields(),(async()=>{let e=a.fromValue(await t());return n=e,a.toFields(e).map((e=>e.toBigInt()))}))}finally{rn.leave(o)}let p=a.toAuxiliary(n),s=a.fromFields(r,p);return a.check(s),s},if:function(e,t,a,n){return void 0===n?function(e,t,a){let n=t.constructor;if(void 0===n)throw Error("You called Provable.if(bool, x, y) with an argument x that has no constructor, which is not supported.\nIf x, y are Structs or other custom types, you can use the following:\nProvable.if(bool, MyType, x, y)");if(n!==a.constructor)throw Error("Provable.if: Mismatched argument types. Try using an explicit type argument:\nProvable.if(bool, MyType, x, y)");if(!("fromFields"in n)||!("toFields"in n))throw Error("Provable.if: Invalid argument type. Try using an explicit type argument:\nProvable.if(bool, MyType, x, y)");return ur(e,n,t,a)}(e,t,a):ur(e,t,a,n)},switch:function(e,t,a,{allowNonExclusive:n=!1}={}){let r=ar.get(t),i=a.length;if(e.length!==i)throw Error(`Provable.switch: \`values\` and \`mask\` have different lengths (${a.length} vs. ${e.length}), which is not allowed.`);let o=()=>{if(n)return;let t=e.filter((e=>e.toBoolean())).length;if(t>1)throw Error(`Provable.switch: \`mask\` must have 0 or 1 true element, found ${t}.`)};e.every((e=>e.toField().isConstant()))?o():_r.asProver(o);let p=r.sizeInFields(),s=Array(p).fill(new ui(0));for(let t=0;t<i;t++){let n=r.toFields(a[t]),i=e[t].toField();for(let e=0;e<p;e++){let t=n[e].mul(i);s[e]=s[e].add(t)}}let d=fr(r,(()=>{let t=e.findIndex((e=>e.toBoolean()));if(-1!==t)return a[t]}));return r.fromFields(s,d)},assertEqual:mr,assertEqualIf:function(e,t,a,n){mr(t,a,ur(e,t,n,a))},equal:function(e,t,a){return void 0===a?function(e,t){let a=e.toFields(),n=t.toFields();return cr("Provable.equal",a,n),a.map(((e,t)=>e.equals(n[t]))).reduce(Yn.and)}(e,t):function(e,t,a){let n=(e=ar.get(e)).toFields(t),r=e.toFields(a);return n.map(((e,t)=>e.equals(r[t]))).reduce(Yn.and)}(e,t,a)},Array:function(e,t){let a=ar.get(e);return{sizeInFields:()=>a.sizeInFields()*t,toFields:e=>e.map((e=>a.toFields(e))).flat(),toAuxiliary(e){let n=e??Array(t).fill(void 0);return n?.map((e=>a.toAuxiliary(e)))},fromFields(e,n){let r=[],i=a.sizeInFields(),o=t;for(let t=0,p=0;t<o;t++,p+=i)r[t]=a.fromFields(e.slice(p,p+i),n?.[t]);return r},check(e){for(let n=0;n<t;n++)a.check(e[n])},toValue:e=>e.map((e=>a.toValue(e))),fromValue:e=>e.map((e=>a.fromValue(e))),toJSON(e){if(!("toJSON"in a))throw Error("circuitArray.toJSON: element type has no toJSON method");return e.map((e=>a.toJSON(e)))},fromJSON(e){if(!("fromJSON"in a))throw Error("circuitArray.fromJSON: element type has no fromJSON method");return e.map((e=>a.fromJSON(e)))},toInput(e){if(!("toInput"in a))throw Error("circuitArray.toInput: element type has no toInput method");return e.reduce(((e,t)=>nr.append(e,a.toInput(t))),nr.empty)},empty(){if(!("empty"in a))throw Error("circuitArray.empty: element type has no empty() method");return Array.from({length:t},(()=>a.empty()))}}},isConstant:function(e,t){return ar.get(e).toFields(t).every((e=>e.isConstant()))},log:function(...e){dn((()=>{let t=[];for(let a of e)if(void 0!==a?.toPretty)t.push(a.toPretty());else try{t.push(JSON.parse(JSON.stringify(a)))}catch{t.push(a)}console.log(...t)}))},asProver:dn,async runAndCheck(e){await ln(e,{checkConstraints:!0})},async runUnchecked(e){await ln(e,{checkConstraints:!1})},constraintSystem:async function(e){await pa();let t=rn.enter({inAnalyze:!0,inCheckedComputation:!0});try{let t=ta.run.enterConstraintSystem();return await e(),function(e){let t=ta.constraintSystem.toJson(e),a=ta.constraintSystem.rows(e),n=ta.constraintSystem.digest(e),{gates:r,publicInputSize:i}=function(e){let t=e.gates.map((({typ:e,wires:t,coeffs:a})=>({type:e,wires:t,coeffs:a.map((e=>function(e){F.encodeInto(e,q);for(let e=0;e<32;e++){let t=B[q[2*e]],a=B[q[2*e+1]];q[e]=t<<4|a}return N(q)}(e).toString()))})));return{publicInputSize:e.public_input_size,gates:t}}(t);return{rows:a,digest:n,gates:r,publicInputSize:i,print(){!function(e){for(let t=0,a=e.length;t<a;t++){let{type:a,wires:n,coeffs:r}=e[t];console.log(t.toString().padEnd(4," "),a.padEnd(15," "),mn(a,r).padEnd(30," "),un(n,t))}console.log()}(r)},summary:()=>function(e){let t={};t["Total rows"]=e.length;for(let a of e)t[a.type]??=0,t[a.type]++;return t}(r)}}(t())}catch(e){throw ae(e)}finally{rn.leave(t)}},inProver:on,inCheckedComputation:pn,toConstant:(e,t)=>(e=ar.get(e)).fromFields(e.toFields(t).map((e=>e.toConstant())),e.toAuxiliary(t))};function mr(e,t,a){return void 0===a?function(e,t){let a=e.toFields(),n=t.toFields(),r=cr("Provable.assertEqual",a,n);for(let e=0;e<r;e++)a[e].assertEquals(n[e])}(e,t):function(e,t,a){let n=(e=ar.get(e)).toFields(t),r=e.toFields(a);for(let e=0;e<n.length;e++)n[e].assertEquals(r[e])}(e,t,a)}function ur(e,t,a,n){let r=(t=ar.get(t)).toFields(a),i=t.toFields(n),o=e.toField();if(o.isConstant())return function(e,t){let a=e.toFields(t),n=e.toAuxiliary?.(t)??[];return e.fromFields(a,n)}(t,e.toBoolean()?a:n);let p=r.map(((e,t)=>function(e,t,a){return e.mul(t.sub(a)).add(a).seal()}(o,e,i[t]))),s=fr(t,(()=>e.toBoolean()?a:n));return t.fromFields(p,s)}function cr(e,t,a){let n=t.length,r=a.length;if(n!==r)throw Error(`${e}: inputs must contain the same number of field elements, got ${n} !== ${r}`);return n}function fr(e,t){let a;return _r.asProver((()=>{let n=t();void 0!==n&&(a=e.toAuxiliary?.(n))})),a??e.toAuxiliary?.()??[]}let hr=en();function gr(e,t){return _r.witness(e,(()=>{if(!hr.has())return t();let a=hr.get(),{memoized:n,currentIndex:r}=a,i=n[r];if(void 0===i){let a=t();i={fields:e.toFields(a).map((e=>e.toConstant())),aux:e.toAuxiliary(a)},n[r]=i}return a.currentIndex+=1,e.fromFields(i.fields,i.aux)}))}function wr(){if(!hr.has())return ui.random();let e=hr.get();return void 0===e.blindingValue&&(e.blindingValue=ui.random()),e.blindingValue}function vr(e,t,a,n){var r,i=arguments.length,o=i<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,a,n);else for(var p=e.length-1;p>=0;p--)(r=e[p])&&(o=(i<3?r(o):i>3?r(t,a,o):r(t,a))||o);return i>3&&o&&Object.defineProperty(t,a,o),o}function yr(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}function br(e,t,a,n){if("a"===a&&!n)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===a?n:"a"===a?n.call(e):n?n.value:t.get(e)}function kr(e,t,a,n,r){if("m"===n)throw new TypeError("Private method is not writable");if("a"===n&&!r)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!r:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===n?r.call(e,a):r?r.value=a:t.set(e,a),a}Object.create,Object.create,"function"==typeof SuppressedError&&SuppressedError;class Sr{constructor(e,t){this.option={isSome:e,value:t}}get(){if(pn()&&!ta.run.inProverBlock())throw Error("You cannot use Unconstrained.get() in provable code.\n\nThe only place where you can read unconstrained values is in Provable.witness()\nand Provable.asProver() blocks, which execute outside the proof.\n");return oe(this.option.isSome,"Empty `Unconstrained`"),this.option.value}set(e){this.option={isSome:!0,value:e}}setTo(e){this.option=e.option}static from(e){return e instanceof Sr?e:new Sr(!0,e)}static witness(e){return dr(Sr,e)}updateAsProver(e){return dn((()=>{let t=this.get();this.set(e(t))}))}static withEmpty(e){return{...Sr.provable,empty:()=>Sr.from(e)}}static provableWithEmpty(e){return Sr.withEmpty(e)}}Sr.provable={sizeInFields:()=>0,toFields:()=>[],toAuxiliary:e=>[e??new Sr(!1)],fromFields:(e,[t])=>t,check:()=>{},toValue:e=>e.get(),fromValue:e=>Sr.from(e),toInput:()=>({}),empty:()=>{throw Error("There is no default empty value for Unconstrained.")}};const xr={sizeInFields:()=>1,toFields:e=>[e],toAuxiliary:()=>[],fromFields:([e])=>e,check:()=>{},toValue:e=>e.toBigInt(),fromValue:e=>yn(e),toInput:e=>({fields:[e]}),toJSON:e=>kn().toJSON(e),fromJSON:e=>kn().fromJSON(e),empty:()=>yn(0)};function Tr(e){return Object.assign({},xr,e)}function Er(e){if(e.isConstant()){if(e.toBigInt()>=1n<<32n)throw Error(`rangeCheck32: expected field to fit in 32 bits, got ${e}`)}else Ur(32,e).assertEquals(e)}function Ir(e){if(e.isConstant()){let t=e.toBigInt();if(t>=1n<<64n)throw Error(`rangeCheck64: expected field to fit in 64 bits, got ${e}`);return[yn(Dn(t,52,12)),yn(Dn(t,40,12)),yn(Dn(t,28,12)),yn(Dn(t,16,12))]}let[t,a,n,r,i,o,p,s]=Tn(8,(()=>{let t=e.toBigInt();return[Dn(t,0,2),Dn(t,2,2),Dn(t,4,2),Dn(t,6,2),Dn(t,8,2),Dn(t,10,2),Dn(t,12,2),Dn(t,14,2)]})),[d,l,_,m]=Tn(4,(()=>{let t=e.toBigInt();return[Dn(t,16,12),Dn(t,28,12),Dn(t,40,12),Dn(t,52,12)]}));return Nn.rangeCheck0(e,[yn(0),yn(0),m,_,l,d],[s,p,o,i,r,n,a,t],!1),[m,_,l,d]}const Nr=88n,Cr=2n*Nr,Ar=3n*Nr,Br=(1n<<Nr)-1n,Fr=(1n<<Cr)-1n;function qr([e,t,a]){if(e.isConstant()&&t.isConstant()&&a.isConstant()){if(e.toBigInt()>>Nr||t.toBigInt()>>Nr||a.toBigInt()>>Nr)throw Error(`Expected fields to fit in ${Nr} bits, got ${e}, ${t}, ${a}`);return}[e,t,a]=On([e,t,a]);let n=Vn(0n),[r,i]=Pr(e),[o,p]=Pr(t);Dr({x64:r,x76:i,y64:o,y76:p,z:a,yz:n})}function Vr(e,t){if(e.isConstant()&&t.isConstant()){if(e.toBigInt()>>Cr||t.toBigInt()>>Nr)throw Error(`Expected fields to fit in ${Cr} and ${Nr} bits respectively, got ${e}, ${t}`);let[a,n]=Or(e.toBigInt());return[yn(a),yn(n),t]}[e,t]=On([e,t]);let[a,n]=Tn(2,(()=>Or(e.toBigInt()))),[r,i]=Pr(t,!1),[o,p]=Pr(a,!0);return Dr({x64:r,x76:i,y64:o,y76:p,z:n,yz:e}),[a,n,t]}function Or(e){return[e&Br,e>>Nr]}function Pr(e,t=!1){let[a,n,r,i,o,p,s,d]=Tn(8,(()=>{let t=e.toBigInt();return[Dn(t,0,2),Dn(t,2,2),Dn(t,4,2),Dn(t,6,2),Dn(t,8,2),Dn(t,10,2),Dn(t,12,2),Dn(t,14,2)]})),[l,_,m,u,c,f]=Tn(6,(()=>{let t=e.toBigInt();return[Dn(t,16,12),Dn(t,28,12),Dn(t,40,12),Dn(t,52,12),Dn(t,64,12),Dn(t,76,12)]}));return Nn.rangeCheck0(e,[f,c,u,m,_,l],[d,s,p,o,i,r,n,a],t),[c,f]}function Dr(e){let{x64:t,x76:a,y64:n,y76:r,z:i,yz:o}=e,[p,s,d,l,_,m,u,c,f,h,g,w,v]=Tn(13,(()=>{let e=i.toBigInt();return[Dn(e,22,2),Dn(e,24,2),Dn(e,26,2),Dn(e,28,2),Dn(e,30,2),Dn(e,32,2),Dn(e,34,2),Dn(e,36,2),Dn(e,38,12),Dn(e,50,12),Dn(e,62,12),Dn(e,74,12),Dn(e,86,2)]})),[y,b,k,S,x,T,E,I,N,C,A]=Tn(11,(()=>{let e=i.toBigInt();return[Dn(e,0,2),Dn(e,2,2),Dn(e,4,2),Dn(e,6,2),Dn(e,8,2),Dn(e,10,2),Dn(e,12,2),Dn(e,14,2),Dn(e,16,2),Dn(e,18,2),Dn(e,20,2)]}));Nn.rangeCheck1(i,o,[v,w,g,h,f,c,u,m,_,l,d,s,p],[A,C,N,a,t,r,n,I,E,T,x,S,k,b,y])}function Ur(e,t){Pn(e<=Y.sizeInBits,`bit length must be ${Y.sizeInBits} or less, got ${e}`),Pn(e>0,`bit length must be positive, got ${e}`),Pn(e%16==0,"`length` has to be a multiple of 16.");let a=e/16;if(t.isConstant()){let a=ja.toBits(t.toBigInt()).slice(0,e).concat(Array(Y.sizeInBits-e).fill(!1));return yn(ja.fromBits(a))}return yn(ta.field.truncateToBits16(a,t.value))}function zr(e,t,a=""){if(Pn(e<=Y.sizeInBits,`bit length must be ${Y.sizeInBits} or less, got ${e}`),Pn(e>0,`bit length must be positive, got ${e}`),Pn(e%16==0,"`length` has to be a multiple of 16."),t.isConstant()){if(t.toBigInt()>=1n<<BigInt(e))throw Error(`rangeCheckN: expected field to fit in ${e} bits, got ${t}.\n${a}`)}else Ur(e,t).assertEquals(t,a)}function Rr(e){e.isConstant()?Pn(e.toBigInt()<65536n,`rangeCheck16: expected field to fit in 8 bits, got ${e}`):Ur(16,e).assertEquals(e)}function Mr(e){if(e.isConstant())return void Pn(e.toBigInt()<256n,`rangeCheck8: expected field to fit in 8 bits, got ${e}`);Ur(16,e).assertEquals(e);let t=e.mul(256).seal();Ur(16,t).assertEquals(t)}var jr,$r,Lr,Hr,Kr;const Jr={add:(e,t,a)=>Wr([e,t],[1n],a),sub:(e,t,a)=>Wr([e,t],[-1n],a),negate:(e,t)=>Wr([ei.from(0n),e],[-1n],t),sum:Wr,Sum:e=>new ii(e),mul:function(e,t,a){if(Pn(a<1n<<259n,"Foreign modulus fits in 259 bits"),ei.isConstant(e)&&ei.isConstant(t)){let n=ei.toBigint(e)*ei.toBigint(t);return ei.from(W(n,a))}let{r01:n,r2:r,q:i}=Zr(e,t,a);return qr(i),Vr(n,r)},inv:function(e,t){if(Pn(t<1n<<259n,"Foreign modulus fits in 259 bits"),ei.isConstant(e)){let a=X(ei.toBigint(e),t);return Pn(void 0!==a,"inverse exists"),ei.from(a)}let a=Tn(3,(()=>{let a=X(ei.toBigint(e),t);return void 0===a?[0n,0n,0n]:ni(a)}));qr(a);let n=Yr(a[2],t),r=[yn(1n),yn(0n)];return Xr(e,a,r,t),qr([n,yn(0n),yn(0n)]),a},div:function(e,t,a,{allowZeroOverZero:n=!1}={}){if(Pn(a<1n<<259n,"Foreign modulus fits in 259 bits"),ei.isConstant(e)&&ei.isConstant(t)){let n=X(ei.toBigint(t),a);return Pn(void 0!==n,"inverse exists"),ei.from(W(ei.toBigint(e)*n,a))}let r=Tn(3,(()=>{let n=X(ei.toBigint(t),a);return void 0===n?[0n,0n,0n]:ni(W(ei.toBigint(e)*n,a))}));qr(r);let i=Yr(r[2],a);return Xr(r,t,e,a),qr([i,yn(0n),yn(0n)]),n||Jr.equals(t,0n,a).assertFalse(),r},assertMul:function(e,t,a,n,r){e=ii.fromUnfinished(e),t=ii.fromUnfinished(t),a=ii.fromUnfinished(a),Pn(BigInt(Math.ceil(Math.sqrt(e.length*t.length)))*n<1n<<258n,`Foreign modulus is too large for multiplication of sums of lengths ${e.length} and ${t.length}`);let i=t.finishForMulInput(n),o=a.finish(n),p=e.finishForMulInput(n,!0);if(ei.isConstant(p)&&ei.isConstant(i)&&ei.isConstant(o)){let e=ei.toBigint(p),t=ei.toBigint(i),a=ei.toBigint(o);Pn(W(e*t,n)===a,r??"assertMul(): incorrect multiplication result")}else Xr(p,i,o,n,r)},assertAlmostReduced:function(e,t,a=!1){let n=[];for(let r of e)a||qr(r),n.push(Yr(r[2],t)),xn.hasLength(3,n)&&(qr(n),n=[]);xn.hasLength(1,n)&&qr([...n,yn(0n),yn(0n)]),xn.hasLength(2,n)&&qr([...n,yn(0n)])},assertLessThan:function(e,t){let a=ei.from(t);if(!ei.isConstant(e)||!ei.isConstant(a))return ei.isConstant(a)?(Pn((t="bigint"==typeof t?t:ei.toBigint(t))>0n,"assertLessThan: y <= 0, so x < y is impossible"),void Jr.negate(e,t-1n)):void Wr([a,e,ei.from(1n)],[-1n,-1n],0n);Pn(ei.toBigint(e)<ei.toBigint(a),"assertLessThan: got x >= y")},assertLessThanOrEqual:function(e,t){Pn("bigint"!=typeof t||t>=0n,"assertLessThanOrEqual: upper bound must be positive");let a=ei.from(t);ei.isConstant(e)&&ei.isConstant(a)?Pn(ei.toBigint(e)<=ei.toBigint(a),"assertLessThan: got x > y"):Wr([a,e],[-1n],0n)},equals:function(e,t,a){if(Pn(t>=0n&&t<a,"equals: c must be in [0, f)"),ei.isConstant(e))return bn(W(ei.toBigint(e),a)===t);if(a>=1n<<Cr){let n=Vn(e[0].add(e[1].mul(1n<<Nr))),[r,i]=[t&Fr,t>>Cr],[o,p]=[t+a&Fr,t+a>>Cr],s=n.equals(r).and(e[2].equals(i)),d=n.equals(o).and(e[2].equals(p));return s.or(d)}return Jr.assertLessThan(e,a),Vn(e[0].add(e[1].mul(1n<<Nr)).add(e[2].mul(1n<<Cr))).equals(t)}};function Wr(e,t,a){if(Pn(e.length===t.length+1,"inputs and operators match"),e.every(ei.isConstant)){let n=e.map(ei.toBigint),r=t.reduce(((e,t,a)=>e+t*n[a+1]),n[0]);return ei.from(W(r,a))}let n=(e=e.map(On))[0];for(let r=0;r<t.length;r++)({result:n}=Gr(n,e[r+1],t[r],a));return Nn.zero(...n),function(e,t="multi-range check failed"){let a=Tn(3,(()=>{let[t,a,n]=ti(e);return[t&Br,a&Br,n&Br]}));qr(a),e[0].assertEquals(a[0],t),e[1].assertEquals(a[1],t),e[2].assertEquals(a[2],t)}(n),n}function Gr(e,t,a,n){let r=ni(n),[i,o,p,s,d]=Tn(5,(()=>{let i=ti(e),o=ti(t),p=ai(i)+a*ai(o),s=0n;1n===a&&p>=n&&(s=1n),-1n===a&&p<0n&&(s=-1n),0n===n&&(s=0n);let d=ri(i)+a*ri(o)-s*ri(r),l=d>>Cr;d&=Fr;let[_,m]=function(e){return[e&Br,e>>Nr&Br]}(d);return[_,m,i[2]+a*o[2]-s*r[2]+l,s,l]}));return Cn({left:e,right:t,overflow:s,carry:d,modulus:r,sign:a}),{result:[i,o,p],overflow:s}}function Xr(e,t,a,n,r){let{r01:i,r2:o,q:p}=Zr(e,t,n);if(qr(p),2===a.length){let[e,t]=a;i.assertEquals(e,r),o.assertEquals(t,r)}else{let e=a[0].add(a[1].mul(1n<<Nr));i.assertEquals(e,r),o.assertEquals(a[2],r)}}function Zr(e,t,a){let n=(1n<<Ar)-a,[r,i,o]=ni(n),p=a>>Cr,s=(1n<<Nr)-p-1n,d=Tn(21,(()=>{let[n,p,d]=ti(e),[l,_,m]=ti(t),u=ai([n,p,d])*ai([l,_,m]),c=u/a,f=u-c*a,[h,g,w]=ni(c),[v,y,b]=ni(f),k=ri([v,y]),S=n*l+h*r,x=n*_+p*l+h*i+g*r,T=n*m+p*_+d*l+h*o+g*i+w*r,[E,I,N]=ni(x),C=ri([I,N]),A=S+(E<<Nr)-k>>Cr,B=T-b+C+A>>Nr,F=Dn(B,0,12),q=Dn(B,12,12),V=Dn(B,24,12),O=Dn(B,36,12),P=Dn(B,48,12),D=Dn(B,60,12),U=Dn(B,72,12),z=Dn(B,84,2),R=Dn(B,86,2),M=Dn(B,88,2),j=Dn(B,90,1);return[k,b,h,g,w,w+s,E,I,N,A,F,q,V,O,P,D,U,z,R,M,j]})),[l,_,m,u,c,f,h,g,w,v,y,b,k,S,x,T,E,I,N,C,A]=d,B=[m,u,c];return Nn.foreignFieldMul({left:e,right:t,remainder:[l,_],quotient:B,quotientHiBound:f,product1:[h,g,w],carry0:v,carry1p:[y,b,k,S,x,T,E],carry1c:[I,N,C,A],foreignFieldModulus2:p,negForeignFieldModulus:[r,i,o]}),qr([h,g,f]),{r01:l,r2:_,q:B}}function Yr(e,t){return 0n===(t&Fr)?e.add(Br+1n-(t>>Cr)):e.add(Br-(t>>Cr))}const Qr=Tr({toInput:e=>({packed:[[e,Number(Nr)]]})}),ei={from:e=>Array.isArray(e)?e:Sn.map(ni(e),yn),toBigint:e=>ai(ti(e)),toBigints:(...e)=>Sn.map(e,ei.toBigint),isConstant:e=>e.every((e=>e.isConstant())),provable:{...or([Qr,Qr,Qr]),toValue:e=>ei.toBigint(e),fromValue:e=>"bigint"==typeof e?ei.from(e):e}};function ti(e){return Sn.map(e,(e=>e.toBigInt()))}function ai([e,t,a]){return e+(t<<Nr)+(a<<Cr)}function ni(e){return[e&Br,e>>Nr&Br,e>>Cr&Br]}function ri([e,t]){return e+(t<<Nr)}class ii{constructor(e){jr.add(this),$r.set(this,void 0),Lr.set(this,void 0),Hr.set(this,[]),kr(this,Lr,[e],"f")}get result(){return Pn(void 0!==br(this,$r,"f"),"sum not finished"),br(this,$r,"f")}get length(){return br(this,Lr,"f").length}add(e){return Pn(void 0===br(this,$r,"f"),"sum already finished"),br(this,Hr,"f").push(1n),br(this,Lr,"f").push(e),this}sub(e){return Pn(void 0===br(this,$r,"f"),"sum already finished"),br(this,Hr,"f").push(-1n),br(this,Lr,"f").push(e),this}isConstant(){return br(this,Lr,"f").every(ei.isConstant)}finish(e,t=!1){Pn(void 0===br(this,$r,"f"),"sum already finished");let a=br(this,Hr,"f"),n=a.length;if(0===n)return br(this,jr,"m",Kr).call(this,br(this,Lr,"f")[0]);if(this.isConstant())return br(this,jr,"m",Kr).call(this,Wr(br(this,Lr,"f"),a,e));let r=br(this,Lr,"f").map(On),i=r[0];for(let t=0;t<n;t++)({result:i}=Gr(i,r[t+1],a[t],e));return t||Nn.zero(...i),kr(this,$r,i,"f"),i}finishForMulInput(e,t=!1){Pn(void 0===br(this,$r,"f"),"sum already finished");let a=br(this,Hr,"f"),n=a.length;if(0===n)return br(this,jr,"m",Kr).call(this,br(this,Lr,"f")[0]);if(this.isConstant())return br(this,jr,"m",Kr).call(this,Wr(br(this,Lr,"f"),a,e));let r=br(this,Lr,"f").map(On),i=e&Br,o=r[0][0],p=[],s=[],d=Sr.witness((()=>ei.toBigint(r[0])));for(let t=0;t<n;t++){let[n,l]=Tn(2,(()=>{let n=d.get(),o=n&Br,p=ti(r[t+1]),s=a[t];n+=s*ai(p);let l=0n;return 1n===s&&n>=e&&(l=1n),-1n===s&&n<0n&&(l=-1n),0n===e&&(l=0n),d.set(n-l*e),o=o+s*p[0]-l*i,[o>>Nr,l]}));s.push(l),zn(n,[0n,1n,-1n]),o=Vn(o.add(r[t+1][0].mul(a[t])).sub(l.mul(i)).sub(n.mul(1n<<Nr))),p.push(o)}let l=r[0];for(let t=0;t<n;t++){let{result:n,overflow:i}=Gr(l,r[t+1],a[t],e);n[0].assertEquals(p[t]),i.assertEquals(s[t]),l=n}return t||Nn.zero(...l),kr(this,$r,l,"f"),l}rangeCheck(){Pn(void 0!==br(this,$r,"f"),"sum not finished"),br(this,Hr,"f").length>0&&qr(br(this,$r,"f"))}static fromUnfinished(e){return e instanceof ii?(Pn(void 0===br(e,$r,"f"),"sum already finished"),e):new ii(e)}}function oi(e,t,a){a(t.sub(e).seal())}function pi(e,t,a){a(t.sub(1).sub(e).seal())}function si(e,t,a,n){let r=En((()=>BigInt(e.toBigInt()<t.toBigInt()))),i=r.assertBool();return n(r.mul(a).add(e).sub(t).seal()),i}function di(e,t,a,n){let r=En((()=>BigInt(e.toBigInt()<=t.toBigInt()))),i=r.assertBool();return n(r.mul(a).add(e).sub(t).sub(1).seal()),i}function li(e,t){let a=En((()=>BigInt(e.toBigInt()<t.toBigInt()))),n=a.assertBool(),r=mi(e),i=mi(t);Jr.assertLessThan(r,Y.modulus),Jr.assertLessThan(i,Y.modulus);let[o,p,s]=ei.from(Y.modulus),d=[o.mul(a),p.mul(a),s.mul(a)],l=Jr.sum([d,r,i],[1n,-1n],0n);return Jr.assertLessThan(l,Y.modulus),n}function _i(e){if(e.isConstant()){let t=e.toBigInt();return{isOdd:bn(1n===(1n&t)),high:yn(t>>1n)}}let[t,a]=Tn(2,(()=>{let t=e.toBigInt();return[1n&t,t>>1n]})),n=t.assertBool();a.assertLessThan((Y.modulus+1n)/2n),t.add(a.mul(2n)).assertEquals(e);let r=En((()=>0n===t.toBigInt()?0n:Y.inverse(e.toBigInt())??0n));return e.mul(r).assertEquals(t),{isOdd:n,high:a}}function mi(e){if(e.isConstant())return ei.from(e.toBigInt());let t=dr(ei,(()=>e.toBigInt()));qr(t);let[a,n,r]=t;return a.add(n.mul(1n<<Nr)).add(r.mul(1n<<Cr)).assertEquals(e),t}$r=new WeakMap,Lr=new WeakMap,Hr=new WeakMap,jr=new WeakSet,Kr=function(e){return kr(this,$r,e,"f"),e};class ui{constructor(e){if(!(e instanceof ui))return Array.isArray(e)?"bigint"==typeof e[1]?void(this.value=gn.constant(e)):void(this.value=e):void(this.value=gn.constant(Y.mod(BigInt(e))));this.value=e.value}static from(e){return e instanceof ui?e:new ui(e)}isConstant(){return this.value[0]===hn.Constant}toConstant(){return yi(this,"toConstant")}toBigInt(){let e=yi(this,"toBigInt");return fn.toBigint(e.value[1])}toString(){return yi(this,"toString").toBigInt().toString()}assertEquals(e,t){try{if(this.isConstant()&&fi(e)){if(this.toBigInt()!==hi(e))throw Error(`Field.assertEquals(): ${this} != ${e}`);return}!function(e,t){let a=$n(t),n=$n(e);if(Kn(n)&&Kn(a)){let[[e,t],[r,i]]=[Jn(n),Jn(a)];return e===r?ta.field.assertEqual(t,i):Nn.generic({left:e,right:-r,out:0n,mul:0n,const:0n},{left:t,right:i,out:jn()})}if(Kn(n)&&Wn(a)){let[[e,t],r]=[Jn(n),Gn(a)];return ta.field.assertEqual(gn.scale(e,t),gn.constant(r))}if(Wn(n)&&Kn(a)){let[e,[t,r]]=[Gn(n),Jn(a)];return ta.field.assertEqual(gn.constant(e),gn.scale(t,r))}if(Wn(n)&&Wn(a)){let[e,t]=[Gn(n),Gn(a)];Pn(Y.equal(e,t),`assertEqual(): ${e} !== ${t}`)}else Pn(!1,"assertEqual(): unreachable")}(this,gi(e))}catch(e){throw wi(e,t)}}add(e){if(this.isConstant()&&fi(e))return new ui(Y.add(this.toBigInt(),hi(e)));let t=gn.add(this.value,gi(e));return new ui(t)}neg(){if(this.isConstant())return new ui(Y.negate(this.toBigInt()));let e=gn.scale(fn[-1],this.value);return new ui(e)}sub(e){return this.add(ui.from(e).neg())}isOdd(){return _i(this).isOdd}isEven(){return this.isOdd().not()}mul(e){if(this.isConstant()&&fi(e))return new ui(Y.mul(this.toBigInt(),hi(e)));if(fi(e)){let a=gn.scale((t=e)instanceof ui?t.value[1]:fn.fromBigint(Y.mod(BigInt(t))),this.value);return new ui(a)}var t;if(this.isConstant()){let t=gn.scale(this.value[1],e.value);return new ui(t)}let a=En((()=>Y.mul(this.toBigInt(),hi(e))));return Xn(this,e,a),a}inv(){if(this.isConstant()){let e=Y.inverse(this.toBigInt());if(void 0===e)throw Error("Field.inv(): Division by zero");return new ui(e)}let e=En((()=>Y.inverse(this.toBigInt())??0n));return Xn(this,e,gn[1]),e}div(e){return this.mul(ui.from(e).inv())}square(){if(this.isConstant())return new ui(Y.square(this.toBigInt()));let e=En((()=>Y.square(this.toBigInt())));return Zn(this,e),e}sqrt(){if(this.isConstant()){let e=Y.sqrt(this.toBigInt());if(void 0===e)throw Error(`Field.sqrt(): input ${this} has no square root in the field.`);return new ui(e)}let e=En((()=>Y.sqrt(this.toBigInt())??0n));return Zn(e,this),e}equals(e){if(this.isConstant()&&fi(e))return new Yn(this.toBigInt()===hi(e));let t=this.sub(e).seal(),[a,n]=Tn(2,(()=>{let e=t.toBigInt(),a=Y.inverse(e)??0n;return[Y.sub(1n,Y.mul(a,e)),a]}));return Xn(a,t,gn[0]),Xn(n,t,new ui(1).sub(a)),Yn.Unsafe.fromField(a)}lessThan(e){return this.isConstant()&&fi(e)?new Yn(this.toBigInt()<hi(e)):li(this,ui.from(e))}lessThanOrEqual(e){return this.isConstant()&&fi(e)?new Yn(this.toBigInt()<=hi(e)):function(e,t){return li(t,e).not()}(this,ui.from(e))}greaterThan(e){return ui.from(e).lessThan(this)}greaterThanOrEqual(e){return ui.from(e).lessThanOrEqual(this)}assertLessThan(e,t){try{if(this.isConstant()&&fi(e)){if(!(this.toBigInt()<hi(e)))throw Error(`Field.assertLessThan(): expected ${this} < ${e}`);return}!function(e,t){let a=mi(e),n=mi(t);Jr.assertLessThan(a,n),Jr.assertLessThan(n,Y.modulus)}(this,ui.from(e))}catch(e){throw wi(e,t)}}assertLessThanOrEqual(e,t){try{if(this.isConstant()&&fi(e)){if(!(this.toBigInt()<=hi(e)))throw Error(`Field.assertLessThan(): expected ${this} <= ${e}`);return}!function(e,t){let a=mi(e),n=mi(t);Jr.assertLessThanOrEqual(a,n),Jr.assertLessThan(n,Y.modulus)}(this,ui.from(e))}catch(e){throw wi(e,t)}}assertGreaterThan(e,t){ui.from(e).assertLessThan(this,t)}assertGreaterThanOrEqual(e,t){ui.from(e).assertLessThanOrEqual(this,t)}assertNotEquals(e,t){try{if(this.isConstant()&&fi(e)){if(this.toBigInt()===hi(e))throw Error(`Field.assertNotEquals(): ${this} = ${e}`);return}if(fi(e)){let t=Vn(this),a=hi(e);return void Mn(t,En((()=>Y.inverse(this.toBigInt()-a)??0n)),[1n,0n,-a,-1n])}this.sub(e).inv()}catch(e){throw wi(e,t)}}assertBool(e){try{if(this.isConstant()){let e=this.toBigInt();return oe(0n===e||1n===e,`Field.assertBool(): expected ${e} to be 0 or 1`),new Yn(1n===e)}return function(e){let t=$n(e);if(Kn(t)){let[e,a]=Jn(t);return Nn.generic({left:-e,right:0n,out:0n,mul:e**2n,const:0n},{left:a,right:a,out:jn()})}let a=Gn(t);Pn(Y.equal(Y.square(a),a),`assertBoolean(): ${e} is not 0 or 1`)}(this),Yn.Unsafe.fromField(this)}catch(t){throw wi(t,e)}}toBits(e=254){if(vi("Field.toBits()",e,254),this.isConstant()){let t=ja.toBits(this.toBigInt());if(t.slice(e).some((e=>e)))throw Error(`Field.toBits(): ${this} does not fit in ${e} bits`);return t.slice(0,e).map((e=>new Yn(e)))}let t=_r.witness(_r.Array(Yn,e),(()=>{let t=this.toBigInt();return Array.from({length:e},((e,a)=>new Yn(!!(t>>BigInt(a)&0x1n))))}));return ui.fromBits(t).assertEquals(this,`Field.toBits(): Input does not fit in ${e} bits`),t}static fromBits(e){const t=e.length;if(vi("Field.fromBits()",t,254),e.every((e=>"boolean"==typeof e||e.toField().isConstant()))){let a=e.map((e=>"boolean"==typeof e?e:e.toBoolean())).concat(Array(Y.sizeInBits-t).fill(!1));return new ui(ja.fromBits(a))}return e.map((e=>new Yn(e))).reduce(((e,t,a)=>{const n=1n<<BigInt(a);return e.add(t.toField().mul(n))}),ui.from(0)).seal()}seal(){let{constant:e,terms:t}=Ln(this.value);if(0===t.length)return function(e){return new ui(e)}(e);if(1===t.length&&0n===e){let[e,a]=t[0];if(1n===e)return function(e){return new ui(e)}(a)}let a=En((()=>this.toBigInt()));return this.assertEquals(a),a}static random(){return new ui(Y.random())}static toFields(e){return[e]}static toAuxiliary(){return[]}static sizeInFields(){return 1}static fromFields([e]){return e}static check(){}static toValue(e){return e.toBigInt()}static toBigint(e){return e.toBigInt()}static fromValue(e){return ui.from(e)}toFields(){return ui.toFields(this)}toAuxiliary(){return ui.toAuxiliary()}static empty(){return new ui(0n)}toJSON(){return yi(this,"toJSON").toString()}static toJSON(e){return e.toJSON()}static fromJSON(e){return new ui($a.fromJSON(e))}static toInput(e){return{fields:[e]}}static toBytes(e){return ci.toBytes(e)}static readBytes(e,t){return ci.readBytes(e,t)}static fromBytes(e){return ci.fromBytes(e)}}ui.ORDER=Y.modulus,ui.sizeInBytes=ja.sizeInBytes,ui.sizeInBits=Y.sizeInBits,wn=ui;const ci=fa({toBytes(e){let t=bi(e,"toBytes").toBigInt();return ja.toBytes(t)},readBytes(e,t){let a=new Uint8Array(32);a.set(e.slice(t,t+32));let n=ja.fromBytes([...a]);return[new ui(n),t+32]}});function fi(e){let t=typeof e;return"bigint"===t||"number"===t||"string"===t||e.isConstant()}function hi(e){let t=typeof e;return"bigint"===t||"number"===t||"string"===t?Y.mod(BigInt(e)):e.toBigInt()}function gi(e){return e instanceof ui?e.value:gn.constant(Y.mod(BigInt(e)))}function wi(e,t){return void 0!==t&&e instanceof Error?(e.message=`${t}\n${e.message}`,e):e}function vi(e,t,a=Y.sizeInBits){if(t>a)throw Error(`${e}: bit length must be ${a} or less, got ${t}`);if(t<0)throw Error(`${e}: bit length must be non-negative, got ${t}`)}function yi(e,t){return bi(e,t,"x","field element")}function bi(e,t,a="x",n="field element"){if(e.isConstant())return e;if(oe(pn(),"variables only exist inside checked computations"),ta.run.inProverBlock()){let t=ta.field.readVar(e.value);return new ui(t)}throw Error(ki(t,a,n))}function ki(e,t,a){return`${t}.${e}() was called on a variable ${a} \`${t}\` in provable code.\nThis is not supported, because variables represent an abstract computation, \nwhich only carries actual values during proving, but not during compiling.\n\nAlso, reading out JS values means that whatever you're doing with those values will no longer be\nlinked to the original variable in the proof, which makes this pattern prone to security holes.\n\nYou can check whether your ${a} is a variable or a constant by using ${t}.isConstant().\n\nTo inspect values for debugging, use Provable.log(${t}). For more advanced use cases,\nthere is \`Provable.asProver(() => { ... })\` which allows you to use ${t}.${e}() inside the callback.\nWarning: whatever happens inside asProver() will not be part of the zk proof.\n`}var Si=a(312);const xi="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz".split("");let Ti={};function Ei(e){let t=Si.sha256.create();t.update(e);let a=Si.sha256.create();return a.update(t.array()),a.array().slice(0,4)}function Ii(e,t){return{toBase58:a=>function(e,t){let a=[t,...e],n=Ei(a);return function(e){let t=0;for(;0===e[t];)t++;let a=P([...e].map(BigInt).reverse(),256n,58n).reverse();return a=Array(t).fill(0n).concat(a),a.map((e=>xi[Number(e)])).join("")}(a.concat(n))}(e.toBytes(a),t),fromBase58(a){let n=function(e,t){let a=function(e){let t=[...e].map((e=>{let t=Ti[e];if(void 0===t)throw Error("fromBase58: invalid character");return BigInt(t)})),a=0;for(;0n===t[a];)a++;let n=P(t.reverse(),58n,256n).reverse();return n=Array(a).fill(0n).concat(n),n.map(Number)}(e),n=a.slice(-4),r=a.slice(0,-4);if(!function(e,t){if(e.length!==t.length)return!1;for(let a=0;a<e.length;a++)if(e[a]!==t[a])return!1;return!0}(n,Ei(r)))throw Error("fromBase58Check: invalid checksum");if(r[0]!==t)throw Error(`fromBase58Check: input version byte ${t} does not match encoded version byte ${r[0]}`);return r.slice(1)}(a,t);return e.fromBytes(n)}}}function Ni(e,t,a){return Ii(void 0!==a?ha(e,a):e,t)}xi.forEach(((e,t)=>{Ti[e]=t}));function Ci(e){return{TokenId:Ni(e,i),ReceiptChainHash:Ni(e,o,1),LedgerHash:Ni(e,p,1),EpochSeed:Ni(e,s,1),StateHash:Ni(e,d,1)}}const Ai={toProjective:({x:e,y:t})=>xe.fromAffine({x:e,y:t,infinity:!1}),fromProjective(e){let{x:t,y:a,infinity:n}=xe.toAffine(e);if(n)throw Error("Group.fromProjective: point is infinity");return{x:t,y:a}},get generatorMina(){return Ai.fromProjective(xe.one)},scale:(e,t)=>Ai.fromProjective(xe.scale(Ai.toProjective(e),t)),b:xe.b,toFields:({x:e,y:t})=>[e,t]};let Bi=ha(La,1),Fi=ha(function({toBytes:e,readBytes:t},a){return fa({toBytes:e,readBytes(e,n){let[r,i]=t(e,n);return a(r),[r,i]}})}(ga({x:Bi,isOdd:Ha},["x","isOdd"]),(({x:e})=>{let{mul:t,add:a}=La,n=a(t(e,t(e,e)),xe.b);if(!La.isSquare(n))throw Error("PublicKey: not a valid group element")})),1);const qi={...qa({x:La,isOdd:Ha}),...(Vi=Fi,Oi=l,{...Vi,...Ii(Vi,Oi)}),toJSON:e=>qi.toBase58(e),fromJSON:e=>qi.fromBase58(e),toGroup({x:e,isOdd:t}){let{mul:a,add:n}=La,r=n(a(e,a(e,e)),xe.b),i=La.sqrt(r);if(void 0===i)throw Error("PublicKey.toGroup: not a valid group element");return t!==!!(1n&i)&&(i=La.negate(i)),{x:e,y:i}},fromGroup:({x:e,y:t})=>({x:e,isOdd:!!(1n&t)}),equal:(e,t)=>e.x===t.x&&e.isOdd===t.isOdd,toInputLegacy:({x:e,isOdd:t})=>({fields:[e],bits:[!!t]})};var Vi,Oi;const Pi=Ya(0n,Q.modulus,"Scalar"),Di=Za((function(e){return W(BigInt(e),Q.modulus)}),{...Va(Pi),...Oa(Q.sizeInBits,Pi),...Q});let Ui=ha(Di,1),zi=Ii(Ui,m);const Ri={...Di,...qa(Di),...zi,...Ui,toPublicKey:e=>qi.fromGroup(Ai.scale(Ai.generatorMina,e)),convertPrivateKeyToBase58WithMod:function(e){let t=Mi.fromBase58(e);return t=W(t,Q.modulus),Ri.toBase58(t)}},Mi=Ii(ha(Oa(256,(()=>{})),1),m);function ji(e,t){let a=Tn(7,(()=>{let a=e.x.toBigInt(),n=e.y.toBigInt(),r=t.x.toBigInt(),i=t.y.toBigInt(),o=BigInt(a===r),p=BigInt(o&&n!==i),s=o?Y.inverse(i-n)??0n:0n,d=Y.inverse(r-a)??0n,l=Y.div(3n*a**2n,2n*n)??0n,_=Y.mul(i-n,d),m=o?l:_,u=Y.mod(m**2n-a-r);return[o,p,s,d,m,u,Y.mod(m*(a-u)-n)]})),[n,r,i,o,p,s,d]=a;return ta.gates.ecAdd(h(e.x.seal().value,e.y.seal().value),h(t.x.seal().value,t.y.seal().value),h(s.value,d.value),r.value,n.value,p.value,i.value,o.value),{result:{x:s,y:d},isInfinity:(l=r,function(){if(void 0===vn)throw Error("Bool class not defined yet.");return vn}().Unsafe.fromField(l))};var l}function $i(e){return{x:e.x,y:e.y.neg()}}class Li{constructor(e,t){this.lowBit=e,this.high254=t}static from(e){if(e instanceof Li)return e;let t=Q.mod(BigInt(e)-(1n<<255n)),a=new Yn(1n===(1n&t)),n=new ui(t>>1n);return new Li(a,n)}static fromShiftedScalar(e){return new Li(e.lowBit,e.high254)}static fromField(e){let{lowBit:t,high254:a}=function(e){if(e.isConstant()){let t=Q.mod(e.toBigInt()-(1n<<255n));return{lowBit:bn(1n===(1n&t)),high254:yn(t>>1n)}}let{isOdd:t,high:a}=_i(e),n=Q.mod(-(1n<<255n));Pn(0n===(1n&n));let r=n>>1n,i=t,o=a.add(r).seal();return Pn(r<Y.modulus/2n),{lowBit:i,high254:o}}(e);return new Li(t,a)}isConstant(){let{lowBit:e,high254:t}=this;return Un(e,t)}toConstant(){return this.isConstant()?this:_r.toConstant(Li,this)}toBigInt(){let{lowBit:e,high254:t}=this.toConstant(),a=e.toField().toBigInt()+2n*t.toBigInt();return Q.mod(a+(1n<<255n))}static fromBits(e){vi("Scalar.fromBits()",e.length,255);let t=function(e){const t=kn();let a=Number(Nr);return[t.fromBits(e.slice(0*a,1*a)),t.fromBits(e.slice(1*a,2*a)),t.fromBits(e.slice(2*a,3*a))]}(e),{lowBit:a,high254:n}=function(e){if(ei.isConstant(e)){let t=Q.mod(ei.toBigint(e)-(1n<<255n));return{lowBit:bn(1n===(1n&t)),high254:yn(t>>1n)}}let t=ei.from(Q.mod(1n<<255n)),a=Jr.sub(e,t,Q.modulus),[n,r,i]=a;Jr.assertLessThan(a,Q.modulus);let[o,p,s]=Tn(3,(()=>{let e=n.toBigInt();return[(t=e,a=0,t>>BigInt(a)&1n),Dn(e,1,64),Dn(e,65,23)];var t,a})),d=o.assertBool();Ir(p),Ir(s);let l=p.add(s.mul(1n<<64n));return o.add(l.mul(2n)).assertEquals(n),{lowBit:d,high254:l.add(r.mul(1n<<Nr-1n)).add(i.mul(1n<<2n*Nr-1n)).seal()}}(t);return new Li(a,n)}static random(){return Li.from(Q.random())}neg(){let e=Hi(this,"neg"),t=Q.negate(e);return Li.from(t)}add(e){let t=Hi(this,"add"),a=Hi(e,"add"),n=Q.add(t,a);return Li.from(n)}sub(e){let t=Hi(this,"sub"),a=Hi(e,"sub"),n=Q.sub(t,a);return Li.from(n)}mul(e){let t=Hi(this,"mul"),a=Hi(e,"mul"),n=Q.mul(t,a);return Li.from(n)}div(e){let t=Hi(this,"div"),a=Hi(e,"div"),n=Q.div(t,a);if(void 0===n)throw Error("Scalar.div(): Division by zero");return Li.from(n)}toFieldsCompressed(){let e=Hi(this,"toFieldsCompressed"),t=BigInt(Q.sizeInBits-1);return{field:new ui(e&(1n<<t)-1n),highBit:new Yn(e>>t===1n)}}static toFields(e){return[e.lowBit.toField(),e.high254]}toFields(){return Li.toFields(this)}static toInput(e){return{fields:[e.high254],packed:[[e.lowBit.toField(),1]]}}static toAuxiliary(){return[]}static fromFields(e){M(2===e.length,`Scalar.fromFields(): expected 2 fields, got ${e.length}`);let t=Yn.Unsafe.fromField(e[0]),a=e[1];return new Li(t,a)}static sizeInFields(){return 2}static check(e){return Yn.check(e.lowBit)}static toValue(e){return e.toBigInt()}static fromValue(e){return Li.from(e)}static toJSON(e){return Hi(e,"toJSON").toString()}toJSON(){return Li.toJSON(this)}static fromJSON(e){return Li.from(Di.fromJSON(e))}static empty(){return Li.from(0n)}}function Hi(e,t){return M(e.isConstant(),`${t}() is not available in provable code.\nThat means it can't be called in a @method or similar environment, and there's no alternative implemented to achieve that.`),e.toBigInt()}Li.ORDER=Q.modulus;class Ki{static get generator(){return new Ki({x:xe.one.x,y:xe.one.y})}static get zero(){return new Ki({x:0,y:0})}constructor({x:e,y:t}){if(this.x=e instanceof ui?e:new ui(e),this.y=t instanceof ui?t:new ui(t),Ji(this)){if(this.x.equals(0).and(this.y.equals(0)).toBoolean())return;const{add:e,mul:t,square:a}=Y;let n=this.x.toBigInt(),r=this.y.toBigInt();if(e(t(n,t(n,n)),xe.b)!==a(r))throw Error(`(x: ${n}, y: ${r}) is not a valid group element`)}}isZero(){return this.x.equals(0)}add(e){if(Ji(this)&&Ji(e))return this.isZero().toBoolean()?e:e.isZero().toBoolean()?this:Gi(xe.add(Wi(this),Wi(e)));{let{result:t,isInfinity:a}=ji(this,e),n=e.isZero(),r=this.isZero().and(n.not()),i=a,o=n.or(r).or(i).not();return _r.switch([n,r,i,o],Ki,[this,e,Ki.zero,new Ki(t)],{allowNonExclusive:!0})}}addNonZero(e,t=!1){if(Ji(this)&&Ji(e)){let{x:a,y:n,infinity:r}=Be.add(Zi(this),Zi(e));return M(!r||t,"Group.addNonzero(): Result is zero"),Xi({x:a,y:n,infinity:r})}let{result:a,isInfinity:n}=ji(this,e);return t?_r.if(n,Ki.zero,new Ki(a)):(n.assertFalse("Group.addNonzero(): Result is zero"),new Ki(a))}sub(e){return this.add(e.neg())}neg(){let{x:e,y:t}=this;return new Ki({x:e,y:t.neg()})}scale(e){if(e instanceof ui)return new Ki(function(e,t){let{x:a,y:n}=e;if(a.isConstant()&&n.isConstant()&&t.isConstant()){let e=Be.scale(Be.fromNonzero({x:a.toBigInt(),y:n.toBigInt()}),t.toBigInt());return{x:yn(e.x),y:yn(e.y)}}const r=kn(),i=rr({x:r,y:r});let{isOdd:o,high:p}=_i(t),s=Q.mod(-(1n<<255n));Pn(0n===(1n&s));let d=s>>1n,l=o,_=p.add(d).seal();Pn(d<Y.modulus/2n);let m=p.equals(0n),u=_r.if(m,yn(0n),_),[,c,[,...f]]=ta.group.scaleFastUnpack([0,a.value,n.value],[0,u.value],255),h={x:yn(c[1]),y:yn(c[2])};yn(f[254]).assertEquals(0n);let g=function(e,t){let{result:a,isInfinity:n}=ji(e,t);return n.assertFalse(),a}(h,$i(e));h=_r.if(l,i,h,g);let w=yn(0n),v={x:w,y:w},y=_r.if(o,i,e,v);return _r.if(m,i,y,h)}(this,e));let t=Li.from(e);if(Ji(this)&&t.isConstant())return Gi(xe.scale(Wi(this),t.toBigInt()));{let e=function({x:e,y:t},{lowBit:a,high254:n},r=254){if(Un(e,t,n,a)){let r=Be.scale(Be.fromNonzero({x:e.toBigInt(),y:t.toBigInt()}),Q.mod(a.toField().toBigInt()+2n*n.toBigInt()+(1n<<255n)));return{x:yn(r.x),y:yn(r.y)}}const i=kn(),o=rr({x:i,y:i});let p=yn(0n),s=n.equals(Q.modulus-(1n<<254n)),d=n.equals(Q.modulus-(1n<<254n)-1n),l=s.or(d),_=_r.if(l,p,n),[,m,[,...u]]=ta.group.scaleFastUnpack([0,e.value,t.value],[0,_.value],255),c={x:e,y:t},f={x:yn(m[1]),y:yn(m[2])};for(let e=r;e<255;e++)yn(u[e]).assertEquals(p);let h={x:e,y:t.mul(s.toField().mul(2n).sub(1n))};f=_r.if(l,o,h,f);let{result:g,isInfinity:w}=ji(f,$i(c));return g=_r.if(w,o,{x:p,y:p},g),f=_r.if(a,o,f,g),f}(this,t);return new Ki(e)}}assertEquals(e,t){let{x:a,y:n}=this,{x:r,y:i}=e;a.assertEquals(r,t),n.assertEquals(i,t)}equals(e){let{x:t,y:a}=this,{x:n,y:r}=e;return t.equals(n).and(a.equals(r))}static toValue({x:e,y:t}){return{x:e.toBigInt(),y:t.toBigInt()}}static fromValue(e){return new Ki(e)}toJSON(){return{x:this.x.toString(),y:this.y.toString()}}toFields(){return[this.x,this.y]}static from(e,t){return new Ki({x:e,y:t})}static toFields(e){return e.toFields()}static toAuxiliary(e){return[]}static fromFields([e,t]){return new Ki({x:e,y:t})}static sizeInFields(){return 2}static toJSON(e){return e.toJSON()}static fromJSON({x:e,y:t}){return new Ki({x:e,y:t})}static check(e){try{const{x:t,y:a}=e;let n=t.square().mul(t),r=t.mul(xe.a);t.equals(0).and(a.equals(0)).or(n.add(r).add(xe.b).equals(a.square())).assertTrue()}catch(t){if(!(t instanceof Error))return t;throw`Element (x: ${e.x}, y: ${e.y}) is not an element of the group.\n${t.message}`}}static toInput(e){return{fields:[e.x,e.y]}}static empty(){return Ki.zero}}function Ji(e){return e.x.isConstant()&&e.y.isConstant()}function Wi(e){return xe.fromAffine({x:e.x.toBigInt(),y:e.y.toBigInt(),infinity:!1})}function Gi({x:e,y:t,z:a}){return Xi(xe.toAffine({x:e,y:t,z:a}))}function Xi({x:e,y:t,infinity:a}){return a?Ki.zero:new Ki({x:e,y:t})}function Zi(e){return Be.from({x:e.x.toBigInt(),y:e.y.toBigInt()})}const Yi=to(ui),Qi=to(Yn),eo=to(Ki);function to(e){function t(...t){return new e(...t)}return Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)),t}const ao={sizeInFields:()=>0,toFields:()=>[],toAuxiliary:()=>[],fromFields:()=>null,check:()=>{},toInput:()=>({}),toJSON:()=>null,fromJSON:()=>null,empty:()=>null,toValue:()=>null,fromValue:()=>null},no={...ao,fromFields:()=>{},toJSON:()=>null,fromJSON:()=>{},empty:()=>{},toValue:()=>{},fromValue:()=>{}};let ro=new Set(["number","string","null"]);const io={number:{...ao,toAuxiliary:(e=0)=>[e],toJSON:e=>e,fromJSON:e=>e,fromFields:(e,[t])=>t,empty:()=>0,toValue:e=>e,fromValue:e=>e},string:{...ao,toAuxiliary:(e="")=>[e],toJSON:e=>e,fromJSON:e=>e,fromFields:(e,[t])=>t,empty:()=>"",toValue:e=>e,fromValue:e=>e},null:ao};function oo(e,t){function a(a){return t.update(t.initialState(),[xa(e,a)])}return{salt:a,emptyHashWithPrefix:function(e){return a(e)[0]},hashWithPrefix:function(e,n){let r=a(e);return t.update(r,n)[0]}}}const po={to:e=>f.to(e.map((e=>e.value))),from:([,...e])=>e.map((e=>new ui(e)))},so={to:e=>f.to(e.map((e=>e.toConstant().value[1]))),from:([,...e])=>e.map((e=>new ui(e)))},lo=fo(Y,{mds:[["12035446894107573964500871153637039653510326950134440362813193268448863222019","25461374787957152039031444204194007219326765802730624564074257060397341542093","27667907157110496066452777015908813333407980290333709698851344970789663080149"],["4491931056866994439025447213644536587424785196363427220456343191847333476930","14743631939509747387607291926699970421064627808101543132147270746750887019919","9448400033389617131295304336481030167723486090288313334230651810071857784477"],["10525578725509990281643336361904863911009900817790387635342941550657754064843","27437632000253211280915908546961303399777448677029255413769125486614773776695","27566319851776897085443681456689352477426926500749993803132851225169606086988"]],roundConstants:[["21155079691556475130150866428468322463125560312786319980770950159250751855431","16883442198399350202652499677723930673110172289234921799701652810789093522349","17030687036425314703519085065002231920937594822150793091243263847382891822670"],["25216718237129482752721276445368692059997901880654047883630276346421457427360","9054264347380455706540423067244764093107767235485930776517975315876127782582","26439087121446593160953570192891907825526260324480347638727375735543609856888"],["15251000790817261169639394496851831733819930596125214313084182526610855787494","10861916012597714684433535077722887124099023163589869801449218212493070551767","18597653523270601187312528478986388028263730767495975370566527202946430104139"],["15831416454198644276563319006805490049460322229057756462580029181847589006611","15171856919255965617705854914448645702014039524159471542852132430360867202292","15488495958879593647482715143904752785889816789652405888927117106448507625751"],["19039802679983063488134304670998725949842655199289961967801223969839823940152","4720101937153217036737330058775388037616286510783561045464678919473230044408","10226318327254973427513859412126640040910264416718766418164893837597674300190"],["20878756131129218406920515859235137275859844638301967889441262030146031838819","7178475685651744631172532830973371642652029385893667810726019303466125436953","1996970955918516145107673266490486752153434673064635795711751450164177339618"],["15205545916434157464929420145756897321482314798910153575340430817222504672630","25660296961552699573824264215804279051322332899472350724416657386062327210698","13842611741937412200312851417353455040950878279339067816479233688850376089318"],["1383799642177300432144836486981606294838630135265094078921115713566691160459","1135532281155277588005319334542025976079676424839948500020664227027300010929","4384117336930380014868572224801371377488688194169758696438185377724744869360"],["21725577575710270071808882335900370909424604447083353471892004026180492193649","676128913284806802699862508051022306366147359505124346651466289788974059668","25186611339598418732666781049829183886812651492845008333418424746493100589207"],["10402240124664763733060094237696964473609580414190944671778761753887884341073","11918307118590866200687906627767559273324023585642003803337447146531313172441","16895677254395661024186292503536662354181715337630376909778003268311296637301"],["23818602699032741669874498456696325705498383130221297580399035778119213224810","4285193711150023248690088154344086684336247475445482883105661485741762600154","19133204443389422404056150665863951250222934590192266371578950735825153238612"],["5515589673266504033533906836494002702866463791762187140099560583198974233395","11830435563729472715615302060564876527985621376031612798386367965451821182352","7510711479224915247011074129666445216001563200717943545636462819681638560128"],["24694843201907722940091503626731830056550128225297370217610328578733387733444","27361655066973784653563425664091383058914302579694897188019422193564924110528","21606788186194534241166833954371013788633495786419718955480491478044413102713"],["19934060063390905409309407607814787335159021816537006003398035237707924006757","8495813630060004961768092461554180468161254914257386012937942498774724649553","27524960680529762202005330464726908693944660961000958842417927307941561848461"],["15178481650950399259757805400615635703086255035073919114667254549690862896985","16164780354695672259791105197274509251141405713012804937107314962551600380870","10529167793600778056702353412758954281652843049850979705476598375597148191979"],["721141070179074082553302896292167103755384741083338957818644728290501449040","22044408985956234023934090378372374883099115753118261312473550998188148912041","27068254103241989852888872162525066148367014691482601147536314217249046186315"],["3880429241956357176819112098792744584376727450211873998699580893624868748961","17387097125522937623262508065966749501583017524609697127088211568136333655623","6256814421247770895467770393029354017922744712896100913895513234184920631289"],["2942627347777337187690939671601251987500285937340386328746818861972711408579","24031654937764287280548628128490074801809101323243546313826173430897408945397","14401457902976567713827506689641442844921449636054278900045849050301331732143"],["20170632877385406450742199836933900257692624353889848352407590794211839130727","24056496193857444725324410428861722338174099794084586764867109123681727290181","11257913009612703357266904349759250619633397075667824800196659858304604714965"],["22228158921984425749199071461510152694025757871561406897041788037116931009246","9152163378317846541430311327336774331416267016980485920222768197583559318682","13906695403538884432896105059360907560653506400343268230130536740148070289175"],["7220714562509721437034241786731185291972496952091254931195414855962344025067","27608867305903811397208862801981345878179337369367554478205559689592889691927","13288465747219756218882697408422850918209170830515545272152965967042670763153"],["8251343892709140154567051772980662609566359215743613773155065627504813327653","22035238365102171608166944627493632660244312563934708756134297161332908879090","13560937766273321037807329177749403409731524715067067740487246745322577571823"],["21652518608959234550262559135285358020552897349934571164032339186996805408040","22479086963324173427634460342145551255011746993910136574926173581069603086891","13676501958531751140966255121288182631772843001727158043704693838707387130095"],["5680310394102577950568930199056707827608275306479994663197187031893244826674","25125360450906166639190392763071557410047335755341060350879819485506243289998","22659254028501616785029594492374243581602744364859762239504348429834224676676"],["23101411405087512171421838856759448177512679869882987631073569441496722536782","24149774013240355952057123660656464942409328637280437515964899830988178868108","5782097512368226173095183217893826020351125522160843964147125728530147423065"],["13540762114500083869920564649399977644344247485313990448129838910231204868111","20421637734328811337527547703833013277831804985438407401987624070721139913982","7742664118615900772129122541139124149525273579639574972380600206383923500701"],["1109643801053963021778418773196543643970146666329661268825691230294798976318","16580663920817053843121063692728699890952505074386761779275436996241901223840","14638514680222429058240285918830106208025229459346033470787111294847121792366"],["17080385857812672649489217965285727739557573467014392822992021264701563205891","26176268111736737558502775993925696791974738793095023824029827577569530708665","4382756253392449071896813428140986330161215829425086284611219278674857536001"],["13934033814940585315406666445960471293638427404971553891617533231178815348902","27054912732979753314774418228399230433963143177662848084045249524271046173121","28916070403698593376490976676534962592542013020010643734621202484860041243391"],["24820015636966360150164458094894587765384135259446295278101998130934963922381","7969535238488580655870884015145760954416088335296905520306227531221721881868","7690547696740080985104189563436871930607055124031711216224219523236060212249"],["9712576468091272384496248353414290908377825697488757134833205246106605867289","12148698031438398980683630141370402088785182722473169207262735228500190477924","14359657643133476969781351728574842164124292705609900285041476162075031948227"],["23563839965372067275137992801035780013422228997724286060975035719045352435470","4184634822776323233231956802962638484057536837393405750680645555481330909086","16249511905185772125762038789038193114431085603985079639889795722501216492487"],["11001863048692031559800673473526311616702863826063550559568315794438941516621","4702354107983530219070178410740869035350641284373933887080161024348425080464","23751680507533064238793742311430343910720206725883441625894258483004979501613"],["28670526516158451470169873496541739545860177757793329093045522432279094518766","3568312993091537758218792253361873752799472566055209125947589819564395417072","1819755756343439646550062754332039103654718693246396323207323333948654200950"],["5372129954699791301953948907349887257752247843844511069896766784624930478273","17512156688034945920605615850550150476471921176481039715733979181538491476080","25777105342317622165159064911913148785971147228777677435200128966844208883059"],["25350392006158741749134238306326265756085455157012701586003300872637887157982","20096724945283767296886159120145376967480397366990493578897615204296873954844","8063283381910110762785892100479219642751540456251198202214433355775540036851"],["4393613870462297385565277757207010824900723217720226130342463666351557475823","9874972555132910032057499689351411450892722671352476280351715757363137891038","23590926474329902351439438151596866311245682682435235170001347511997242904868"],["17723373371137275859467518615551278584842947963894791032296774955869958211070","2350345015303336966039836492267992193191479606566494799781846958620636621159","27755207882790211140683010581856487965587066971982625511152297537534623405016"],["6584607987789185408123601849106260907671314994378225066806060862710814193906","609759108847171587253578490536519506369136135254150754300671591987320319770","28435187585965602110074342250910608316032945187476441868666714022529803033083"],["16016664911651770663938916450245705908287192964254704641717751103464322455303","17551273293154696089066968171579395800922204266630874071186322718903959339163","20414195497994754529479032467015716938594722029047207834858832838081413050198"],["19773307918850685463180290966774465805537520595602496529624568184993487593855","24598603838812162820757838364185126333280131847747737533989799467867231166980","11040972566103463398651864390163813377135738019556270484707889323659789290225"],["5189242080957784038860188184443287562488963023922086723850863987437818393811","1435203288979376557721239239445613396009633263160237764653161500252258220144","13066591163578079667911016543985168493088721636164837520689376346534152547210"],["17345901407013599418148210465150865782628422047458024807490502489711252831342","22139633362249671900128029132387275539363684188353969065288495002671733200348","1061056418502836172283188490483332922126033656372467737207927075184389487061"],["10241738906190857416046229928455551829189196941239601756375665129874835232299","27808033332417845112292408673209999320983657696373938259351951416571545364415","18820154989873674261497645724903918046694142479240549687085662625471577737140"],["7983688435214640842673294735439196010654951226956101271763849527529940619307","17067928657801807648925755556866676899145460770352731818062909643149568271566","24472070825156236829515738091791182856425635433388202153358580534810244942762"],["25752201169361795911258625731016717414310986450004737514595241038036936283227","26041505376284666160132119888949817249574689146924196064963008712979256107535","23977050489096115210391718599021827780049209314283111721864956071820102846008"],["26678257097278788410676026718736087312816016749016738933942134600725962413805","10480026985951498884090911619636977502506079971893083605102044931823547311729","21126631300593007055117122830961273871167754554670317425822083333557535463396"],["1564862894215434177641156287699106659379648851457681469848362532131406827573","13247162472821152334486419054854847522301612781818744556576865965657773174584","8673615954922496961704442777870253767001276027366984739283715623634850885984"],["2794525076937490807476666942602262298677291735723129868457629508555429470085","4656175953888995612264371467596648522808911819700660048695373348629527757049","23221574237857660318443567292601561932489621919104226163978909845174616477329"],["1878392460078272317716114458784636517603142716091316893054365153068227117145","2370412714505757731457251173604396662292063533194555369091306667486647634097","17409784861870189930766639925394191888667317762328427589153989811980152373276"],["25869136641898166514111941708608048269584233242773814014385564101168774293194","11361209360311194794795494027949518465383235799633128250259863567683341091323","14913258820718821235077379851098720071902170702113538811112331615559409988569"],["12957012022018304419868287033513141736995211906682903915897515954290678373899","17128889547450684566010972445328859295804027707361763477802050112063630550300","23329219085372232771288306767242735245018143857623151155581182779769305489903"],["1607741027962933685476527275858938699728586794398382348454736018784568853937","2611953825405141009309433982109911976923326848135736099261873796908057448476","7372230383134982628913227482618052530364724821976589156840317933676130378411"],["20203606758501212620842735123770014952499754751430660463060696990317556818571","4678361398979174017885631008335559529633853759463947250620930343087749944307","27176462634198471376002287271754121925750749676999036165457559387195124025594"],["6361981813552614697928697527332318530502852015189048838072565811230204474643","13815234633287489023151647353581705241145927054858922281829444557905946323248","10888828634279127981352133512429657747610298502219125571406085952954136470354"]],fullRounds:55,partialRounds:0,hasInitialRoundConstant:!1,stateSize:3,rate:2,power:7}),_o={...lo,hashToGroup:(uo=lo.hash,e=>{let t=function(e){const{potentialXs:t,tryDecode:a}=ce;return t(e).map((e=>a(e))).find((e=>e))}(uo(e));if(void 0===t)return;let a=1n===(1n&t.y)?Y.negate(t.y):t.y;return{x:t.x,y:a}})},mo=fo(Y,{mds:[["5328350144166205084223774245058198666309664348635459768305312917086056785354","15214731724107930304595906373487084110291887262136882623959435918484004667388","22399519358931858664262538157042328690232277435337286643350379269028878354609"],["10086628405675314879458652402278736459294354590428582803795166650930540770072","17127968360683744052278857147989507037142007029142438136689352416106177192235","14207324749280135281015658576564097509614634975132487654324863824516044294735"],["3059104278162906687184746935153057867173086006783171716838577369156969739687","16755849208683706534025643823697988418063305979108082130624352443958404325985","16889774624482628108075965871448623911656600744832339664842346756371603433407"]],roundConstants:[["1346081094044643970582493287085428191977688221215786919106342366360741041016","10635969173348128974923358283368657934408577270968219574411363948927109531877","18431955373344919956072236142080066866861234899777299873162413437379924987003"],["5797044060651575840084283729791357462720161727701814038830889113712361837236","931288489507796144596974766082847744938192694315568692730730202141894005205","13659894470945121760517769979107966886673294523737498361566285362771110125394"],["6076231707445968054305995680347976771585015308155855387339303513025362636128","28822740034050339685362260108484262889265034407340240070058997651710236456303","23420266473857869790486107029614186913447272961845992963194006142267563993493"],["13753917374184785903125509246122783296344288469304898921025291716613575849357","22396739346703340038555577564698139382745239004673153148674304627904081092826","13064238335532551154986111986409392866270911640785653458047811526842088084911"],["23165923875642452719095776619341762858050322341374771345641255745672274104746","1876216571769482372914291210815859835162659440705283782713345335434924136736","25448252060136178247213604035267580231762596830634036926922217427938159849142"],["2161875315509206970842862195937323600322108268401381254431163181777726747153","19159855698625842998331760283165907305622417625829203038229273729196960321630","24828563875172432296791053766778475681869974948122169083176331088266823626561"],["15959479662608710141128458274961057999257961784282074767105536637788386907463","8006369581283017287449277389162056290714176164680299906116833200510117952858","18794336794618132129607701188430371953320538976527988886453665523008714542779"],["19408271715954593722501381885401160867835377473312521553027032015227895029571","13654747284005184272412579731446984220568337794941823533879059135026064413631","14094055032353750931629930778481002727722804310855727808905931659115939920989"],["13241818625838429282823260827177433104574315653706102174619924764342778921524","25709259239494174564705048436260891089407557689981668111890003079561388887725","26866626910239634723971078462134580196819809568632305020800296809092442642381"],["23886826350713085163238005260075062110062681905356997481925492650252417143049","16853602711255261520713463306790360324679500458440235992292027384928526778856","18444710386168488194610417945072711530390091945738595259171890487504771614189"],["16896789009769903615328691751424474161656500693270070895928499575572871141439","23842266984616972287898037872537536999393060934879414668030219493005225085992","24369698563802298585444760814856330583118549706483939267059237951238240608187"],["25360195173713628054110426524260405937218170863260484655473435413697869858790","1486437708678506228822038923353468635394979165769861487132708983207562337116","18653498960429911228442559598959970807723487073275324556015861725806677047150"],["18878179044241268037057256060083772636369783391816038647949347814518015576522","178715779905629247116805974152863592571182389085419970371289655361443016848","8381006794425876451998903949255801618132578446062133243427381291481465852184"],["4176946262813877719206528849579392120806054050640974718891398605746592169324","16376345520728802444699629729684297833862527190772376028981704525651968727081","8399065769082251057361366626601550736334213197703006866551331927128775757919"],["15435308585611812393531506745122614542196708285088622615406141986333182280857","4082259282787276939431186930090898350392871145699460879678141552997816391817","26348742719959309014730178326877937464605873211235784184917342950648457078699"],["9707631711734344681918469569872517425107158187591261754498805460753455298868","27910768846011709391567916011595957279088224137468948238696800459136335473132","20407239095656434708569263842372155762970847207558227886302782130015730063802"],["22726225412881182965250630589245572283256255052470345984553083359461473893802","12443967854426795490638709950679156338200426963050610832781263082981525248175","27102543658848146076219989119639465430524061997280788166887046421706499775415"],["14427224233985680214097547669945064793149553513421479297921556194475574770861","22917454832925781549840198815703114840452733537799472739275668965081704937832","3455076056123630366063931123762198941796412458154689469887583689725886013901"],["4513100023937785913596662867311227004762025658663076805918211014066645403017","18187619530784075723418065322038024507729605774832001333883311123910954334059","9447065431426150382325592560406989926365684509675374414068135115024495130938"],["3227816098015819796753427754968234889554095489076864339942014527747604603014","14798316759185072116520458171957899889489461918408669809912344751222514418582","23013904852315603905843158448056763116188801262838729536210355401378476650033"],["20979191509934291452182967564058656088941447895799901211038858159903580333267","20772973010251235271448378823573767262405703078344288856168565499702414379868","10105446427739226002497411811738001382334316505480517822035303561899927603685"],["11079074761356717003579108002319997196881121172538617046865136940931215263187","4693927775411489288330326150094711670434597808961717172753867514688725690438","18581720304902876944842830383273503265470859268712618325357902881821721540119"],["3065369948183164725765083504606321683481629263177690053939474679689088169185","18515622379147081456114962668688706121098539582467584736624699157043365677487","17563088600719312877716085528177751048248154461245613291986010180187238198006"],["26199746176994924146211004840756471702409132230831594954444947705902602287290","7576136600627345523051497639367002272003104458453478964661395239732811642605","20058687874612168338994287374025378897088936171250328231848098497610185784281"],["16894722532414195606958290526999761110785277556463400588047573469106594850228","13961730805696859614283621225672002906734926278118993580398533742874863598733","25256842011135514243352951950573936602906198374305137963222382546140030647211"],["18530360047537856737482157200091774590035773602620205695980247565433703032532","23014819965938599260086897799541446473887833964178378497976832161473586995397","27911426213258307990762460361663504655967992659180759140364181941291843542489"],["1067338118323302017358103178057182291035336430305886255160210378977812067042","17219092885519007424608854460610388434712113621163885775309496940189894433620","16432921127615937542183846559291144733339643093361323334499888895135356545408"],["28608851042959977114787048070153637607786033079364369200270218128830983558707","10121629780013165888398831090128011045011860641816380162950736555305748332191","2348036340843128746981122630521268144839343500596932561106759754644596320722"],["16619881370356823200358060093334065394764987467483650323706184068451904156452","2302436627861989749837563733434625231689351276818486757748445924305258835336","27514536540953539473280001431110316405453388911725550380123851609652679788049"],["9459277727420672604737117687200019308525004979918488827092207438664125039815","23425670740358068509956137586663046763224562225383386726193078231034380596217","7641885067011661443791509688937280323563328029517832788240965464798835873658"],["9579420382351699601929202663836555665702024548386778299996961509578687980280","18513671386572584282611234979588379470994484682444053600751415262497237017703","24923151431234706142737221165378041700050312199585085101919834422744926421604"],["21131320841803068139502705966375283830095161079635803028011171241658723560073","19208476595309656066589572658712717685014329237892885950958199953675225096566","24023185216737416080949689106968568821656545490748664446389634158498624398204"],["7510552996848634969347937904645640209946785877619890235458182993413526028718","3694415017252995094553868781762548289196990492336482360084813900937464847638","9219021070107873028263141554048987416559034633883158827414043929220388719352"],["5058327241234443421111591959922712922949620710493120384930391763032694640881","13148252221647574076185511663661016015859769210867362839817254885265598775418","15186790492457240277904880519227706403545816456632095870015828239411033220638"],["2775942914650502409705888572245750999561427024488403026572311267798009048466","6277965230841030155341171319927732572492215818164736949144854827643964384893","24144742149845235561087977558785057713814731737434473021812189457617252043745"],["25789129719327437503403457598813971826156253950521984610569937361506914183550","21500534320778995945845999974779950304491968082325255355181901574840373597824","17185359848218837018503091932245529880546896465437232425673134558221638601375"],["12253896579078110143384981818031883112606762215016553811786428215758384195713","12956658260778456372481429232709881794962204180363200699121804724437678625542","3023603786717368708677300377055384474816569333060487675635618249403832078921"],["4186492855716808019562789862833898284927736051002588766326482010810259565130","4263939782228419774639068267872291539552889472311225829898746091327730032923","24068843626280451423530509388397151179174104901782990365720205643492047328816"],["14564937827374621319716285527475223392664010281568256859627186463065876537730","28367596550218705971881480694115935470211319172596432472834880507822452927283","28712267437482356021504544448225827500268648754270274754623969882031853409874"],["4542596163006916397403529184431773692747461300288194722982487051249951403191","2530461821259252672899452671728393208543894014761816288817584587718369998371","12886393063011539390567049190923398676964700147222878509238966758839020897414"],["21593897590707514492037699253654745501762191795293908682495110982956631870528","13233005790593128135480716846773978578237145313006994631606474472023504621256","21621863098292803642478350494794106282518362577273973885587684567452726939909"],["26068620073001644720969640099644251616742620988609091568084348314770436291745","18248589586787935500122854210401321966459127818593446990365211078521058875685","21247134484403265289037859533347798468858819117600251067578809852124865474448"],["7947383127165915366383984718363902897504221803836013123394785749404572432524","22173041014621867335598230447618036223462011647696367239478182269973488867154","16773227734018849308448505860847939069870370055633571816925675705713088305139"],["10708707957340055662073314227607620808612686977606082605219160019699644826999","21249897193797038261479589555720746994050836195265348846222835266344091683000","12581195059139097540117398803363514148192715293133623516709277290477633379593"],["19779599816866992123290302397082614570282926215253589712189610064229996603178","21749216503901548676985371189807470207364320167486559936962401093285243029177","17600045923623503357380202389718735904174992978547372448837488832457719009224"],["2732872979548118117758016335601225525660858727422778256671975055129965858636","13703031005128062046175331918702218558750713240446179585947851411173844703597","28447710105386636841938034820015573492556750872924193415447818187228356409281"],["28539960355005748517007309210788803416171161412204526246799800716567376494244","21329318452221893900731030722137844458345358926323127858742388587761302609863","28135302149599894709369178097439582767613940517471323224020113411362601191873"],["24980774120400248734054527936006392540889095705961960837980443629260392758683","20339911045808632098936066397942175169549806052128535543540543556255197716643","7929293103930252545581851978492699598413941396422930641071359388697302362494"],["8911092207145893152276662096451247820054843777071569723455408545101628926203","19648860643145256523615441075182036100116634560394529500146405733687718224516","14635387208623683806428528837466762532853903031263830054986064902455379735903"],["11555212214346132926966321609673228184079851030522218543981385635403167028692","20896918157639814425520058178561910811657326967880217845710779511927814874973","4650158165912007049140499755153804318686705949436165235742106170124284287326"],["13880660273492757167295696447853232191657893303250187467329180558670697369810","8043529172463774320604378774840863923445982272478964686447801046272917236836","2134399296482715903442913099374581981696436050603410080564843555725771329441"],["27320952903412641133501507962185246982787769547770982814240701526492601978122","23417491374379751329394424924400186404791519133465537872457405970098902747611","17612427354278346772575179176139417348059847375297761006336024476146551185903"],["10710998507064742997612080847223278109404482930427999113323732519626499166548","14958094513415797513745395709487730603918953350067504982704138489305723550923","24096319595904213497633343966229498735553590589105811393277073274927955202995"],["17983724131200292654039765185049138356840415443160477259330748730019147254309","17598096800487588874709548646068838880468456205252324677357706597166777506441","27420647821110229619898200875848631488422182349567475956209153112306555222281"],["448538544835457571662601142415301047108854812427100562339376187510452313026","23494184556634922103535803143214434479598067155171780264810485708203176455201","22626342941879801989161990529511235538216563009907378573817996229389756621777"],["26128268137723417163973860961686381960826033145738852158792607959175787222856","20225791828042873305317281581105429726352058325970107209484198122707862156597","7538871133759632802857159609785118198934349221046986784429069814655215585732"],["26184554861259642274153262777073624024579929401668865520166966302070394487366","28755259264665180745537307265993667261709206143628938749669440804401623257679","11896066093033549470312328497237649508068258723531931099214795928200015717321"],["21657721599978732693249012287058163532690942515202465984736373311077240614059","9214914097169852704753116653702415951907628005986883140609006971322091003693","18710111680849814325169297240208687402588261569152088592693815711857504371037"],["6813635166770764528979084175325709935892248249948967889926276426090222296643","20546585456429436268067726231902751119458200511988152296570567167520382569278","20087466019194902429054761607398988292568594301671509779549344754172952693871"],["28185105286740691904534067831357491310995891986363455251895371651360605333143","10108348212894231193041286244259038275269464277821588425688314560368589986063","11433633215392393209829215018579238412423821563056156785641278458497271271546"],["27870881917195016999862550657996865268956893566432995492427618003637597051321","102309803677783876701097881491240456320211833502658383473112057006867019389","22844040227595875612525628393174357057929113317578127744718774517498324646590"],["18364790233947478619325319418813215212267974311771564959136180502266118026133","2480624341921718230432383518425561514824501138863702825916674641657321180841","16778939567530361665956758171503829349658551798564323167725356065198936433124"],["11947564511486966895926950599696532964589539443187518177489990556481125699966","3133187646540385483015602955087323554103587039123577645562801570574691666057","27704797101265438206569218421707753788081674727344603874614391656565567951541"],["13001484695584753475562184349533365512515447041450030471627087395341039487710","477322000667279478600757543806155989948171541982639893984064422067850617496","13913755821658634147813329813115566967428755223601185963529801459396673113438"],["16621869429023470107454028095846067937827722393398508604914831452950874033411","21755744236927410239079501831014076529931327263341620300431356747367343619046","26538666591151124505694487799121414506088199961481579132019627484065014831180"],["3066480818457008068617042549071052338581291837882909165666223566402713429090","16182268213934119294035309949459684472027705439038023775276926916166831108357","28907604876608422892474268478706783033050951245339691569015166507728369585190"],["27973960109508292680965426133498827831691369851701664449575719912259359998113","1456924360278399121996742356757866616312146358469991014696110099534285524446","8234248752911525485438611255163504976087091103090603316695312869292347668495"],["8716078950082339630026654067608811496722305720644485560320987802533380421009","19016744645809919602099479306503354923553336014593353020688463619133130053825","24379650661051444982012238084495990858827340608012118841005379796362233056432"],["2245379544097631382062919677963998259142792890502492881341386639439507471783","28788137434161061988371619554419440748189388934884757179010092973102292086583","7187000185648741287953633167647835668543536354944774631102766873251849991238"],["18319349500538500800225762827448369057030532278398270164660609327776487168142","2622932985948021877314529887962683530522545893985767148345336304947201715671","13805188629797792210337544360632964855143280581052079479249966961215582531026"],["27457600993464082637917106210690168172469473943609357897393615707457194410878","15448646156961779103834447043970817898237835202826003934642165760908058355399","9396792545729486882231669677795667529746274932273033601723318032992363022062"],["9927877141952679457141759789181418464292082444806533413864151258248124544859","23827901395971835838179844085051957393677906360196119690926757794561937573142","3273544693673216914876067527455588276979859627093391584406340272737391174619"],["19571510438350300564152393820251652609646082150148656806391655428002614034315","4458840243585913642400750597703353770666314833058197517675446022682775625834","6452218213610300363069953741424106105609715382419342511693148495219793324457"],["14558167930891460678441266912176752652821641543245953113671886345167213541771","10650967986920075561478528461783351160938460620955779955379459848889204404950","19990009778942542934049216419052172134625404062770188357110708518621145688588"],["26855242974447190235826233682457047761532515293146087151296725996543442567035","22785340043356532865086769889360674409753343398766563441587096485751538658065","28603049427449348335651629195385434188071937908693764500052489540779792538285"],["20545812864989828913452616721240947168977365844984763819184465128164378967167","23234068381345797209897730226956922073109641728569353961504167817770340037954","26031714567641615877877111172701145299483019910006153132858512509897185854695"],["9512221744061419790435674197238913998387834650389922233458121639503195504983","12587458000103271975978240683793268604398305885278203470492658961734100340536","9670291694005369437277651504604785512303147991710650505302465204429311229197"],["26995526763045548800439747262386290359229145489609341602564040676717570935439","23742712112104280264401317024221734961713400615669958343926511931219510484675","27931469778579449247589315744656633392873808631802461175539563849884447358271"],["20669006894143187877081688942720159738269397552445286314270368345994751825389","26891772301075275370472640177651637211280740381619976926886106618375467277414","28387986011980449959047232529988203397251084614417760995257355718700961696092"],["6579105010484741592730389416372694666279917604793318157514380025250233913402","11007035767869292700964744408562802781669930023548892567535397874932420229930","981148366863906885900456473323410468923514528856216824044152942069412627408"],["22213671088722307302576907504985884923571642958053627659840326928319445671280","1318836216310789598614608105109389429335273432455224127576823891011367206122","25586582796990779718352441955439394949194222626688223867952982491529809559257"],["4923739488579452777913681531125585976446366144127161879759262506690369040090","23505612338866210737103599484620591026802005128655081877133994175016351514827","323887003859465324514901860965142186539600668250760639664361851354147799637"],["10198923064967306784017949469108033682156920551672348936591491217255268794658","9593680688139131432883442351722730169325112619984238956948153423155998917175","27027988263960602112273050725720071355535922812577299127302015348825197871870"],["14419883951157390867695097127684346981136020111885301573583640959136319507752","5104414988075833278683649298543440897371415916271358703850262680431809374355","24739655595299332818980677669648719986462429574612913501586844601377825836782"],["28522818684103966731129743408029731246564480741348128436668680764518115102581","21520350704208288978690888796633940487888044365108767319141211249242880355961","17391005598311948834360476853940353239444383292422171321575043660157438608537"],["15367833944125677011173327826570204350687925236257190051755087781855930646142","21715073802090413714601069529558707101797361591183718695054701329871284436172","8994093285353831008525761670339342200997965950202092028313103110478252647618"],["8370824693889782161629525898408725452177580012023459750897244954935682978671","16123253540853556024347150096993154278773652905830608614979368087152152043083","3535380953353495025888433493640531836449699255364366295870140701379497967423"],["6954518484798178646508803478426114267143074508396663899281411171704702743829","28903134801897070276701950388422104654018369750191967384271618837091859516942","20872505363530172448468374920196608937030884647150175861507911076568784054834"],["6902861581703501105786795670676641959401710346423594578401934671029571262513","10124161387604183369443890585742198433184078889862870469507328332805848271064","10488004060799269337071647841224034919633445750252076195310163972966405029030"],["507704911991278613147490289466075160618843900088471236546244459176211783848","7252739745607302667257774481690407709040936359589867974787811552896597703097","23278073497974004442836030100920157527910770509761505828038443336325476654930"],["22766285055433137793164317120096790621982728188995759745859222009100808389090","23129058299483468195787339200845749049960038336751758017949899311636830205152","16665333681978951552434356320651834889869437822496200946959897681307959400425"],["12145699202182574939376505075528461451757079041659894988784442097333218352048","26340666275844437932755852805027863696219004039301187587209926587657008948704","19208771804191839410002226941825269105677187954811130189835856228258013753206"],["21957102494792377508237608216278079874536155315851198461024084071231867104453","6933367436450995525851693784691226222726503560893470094614235356287049091852","15707767379191450768747057313641112321773921923533732633534831270357733757271"],["27661963645951389261638591385668507557739541354225916772550248746235106571003","19699458096897937575096494582288688995241392471402204995195057374756282223421","902873385171181344315871113842580653512118892800584003934454469411716098791"],["17184835876565576154014372215369798779520343573944211203710896053325717110660","664657295519303589036289440053175741110032988007278988577620229144220576240","10803972669668998371638869508774217165881281885838503958226056357738500321396"],["2329846733754251453632375727999372856194157027336139087170310553870624325301","14139944357035048486675740400655356660678187875721949218090128899571575479791","18368148273419807418427674359327442879484531833435081951870369910704734685351"],["10480273665080572189328459165704340191901489646067580012574464138528963201459","21773636700078124500346009061678153597323236568110076029811348966753228682835","18184268307211429260956076021417309535471438696101133218049142374847151474905"],["25957533025669311312382992376854735734491934602484112256289764602447226406852","22223261506176684934865714490719116745135417403915426392159449667435294570739","22937309162832499167063076416585504361695925730111272512450449042837586253575"],["16956181785481598286719868503945127919581091625126206673934113115358441284347","8497782777197814773596870810881707148695901557289856910220737358078100998191","21135503731586600979470064722475007625236017670426339278983640892218291297054"],["17809297343844488723046665739910571149089769215421130894378638450427880983923","72435395972188389387093550708873189001876361107443937983754878061522372356","7511239878692099209014947248389283109997289411550315391143819429585903287870"]],fullRounds:63,partialRounds:0,hasInitialRoundConstant:!0,stateSize:3,rate:2,power:5});var uo,co;function fo(e,{fullRounds:t,partialRounds:a,hasInitialRoundConstant:n,stateSize:r,rate:i,power:o,roundConstants:p,mds:s}){if(0!==a)throw Error("we don't support partial rounds");ca(i,"rate must be a positive integer"),ca(t,"fullRounds must be a positive integer"),ca(o,"power must be a positive integer");let d=BigInt(o),l=p.map((e=>e.map(BigInt))),_=s.map((e=>e.map(BigInt)));function m(){return Array(r).fill(0n)}function u([...t],a){if(0===a.length)return c(t),t;let n=Math.ceil(a.length/i)*i;a=a.concat(Array(n-a.length).fill(0n));for(let r=0;r<n;r+=i){for(let n=0;n<i;n++)t[n]=e.add(t[n],a[r+n]);c(t)}return t}function c(a){let i=0;if(n){for(let t=0;t<r;t++)a[t]=e.add(a[t],l[0][t]);i=1}for(let n=0;n<t;n++){for(let t=0;t<r;t++)a[t]=e.power(a[t],d);let t=[...a];for(let o=0;o<r;o++)a[o]=e.dot(_[o],t),a[o]=e.add(a[o],l[n+i][o])}}return{initialState:m,update:u,hash:function(e){return u(m(),e)[0]}}}co=new WeakMap;const ho={hash:e=>Io(e)?Yi(_o.hash(No(e))):ho.update(ho.initialState(),e)[0],update(e,t){if(Io(e)&&Io(t)){let a=_o.update(No(e),No(t));return xn.fromArray(3,a.map(Yi))}let a=ta.poseidon.update(po.to(e),po.to(t));return po.from(a)},hashWithPrefix(e,t){let a=ho.update(ho.initialState(),[ko(e)]);return ho.update(a,t)[0]},initialState:()=>[Yi(0),Yi(0),Yi(0)],Unsafe:{hashToGroup(e){if(Io(e)){let t=_o.hashToGroup(No(e));return oe(void 0!==t,"hashToGroup works on all inputs"),new Ki(t)}let[,t,a]=ta.poseidon.hashToGroup(po.to(e));return new Ki({x:t,y:a})}},hashToGroup(e){if(Io(e))return ho.Unsafe.hashToGroup(e);let{x:t,y:a}=ho.Unsafe.hashToGroup(e),n=Yi.from(1n).sub(a.isOdd().toField().mul(2n));return a=a.mul(n),new Ki({x:t,y:a})},hashPacked(e,t){let a=So(ar.get(e).toInput(t));return ho.hash(a)},Sponge:class{constructor(){co.set(this,void 0);let e=_r.inCheckedComputation();oe(void 0!==ta,"Poseidon.Sponge(): bindings are not initialized, try calling `await initializeBindings()` first."),kr(this,co,ta.poseidon.sponge.create(e),"f")}absorb(e){ta.poseidon.sponge.absorb(br(this,co,"f"),e.value)}squeeze(){return Yi(ta.poseidon.sponge.squeeze(br(this,co,"f")))}}};function go(e){return Yi(_o.hash(No(e)))}const wo=oo(Yi,ho);let{salt:vo,emptyHashWithPrefix:yo,hashWithPrefix:bo}=wo;function ko(e){if(8*e.length>=255)throw Error("prefix too long");let t=[...e].map((e=>{let t=[];for(let a=0,n=e.charCodeAt(0);a<8;a++,n>>=1)7===a&&oe(0===n,`Invalid character ${e}, only ASCII characters are supported.`),t.push(!!(1&n));return t})).flat();return Yi.fromBits(t)}function So({fields:e=[],packed:t=[]}){if(0===t.length)return e;let a=[],n=Yi(0),r=0;for(let[e,i]of t)r+=i,r<255?n=n.mul(Yi(1n<<BigInt(i))).add(e):(a.push(n),r=i,n=e);return a.push(n),e.concat(a)}function xo(e){if(!e)return!1;const t="toInput"in e&&"function"==typeof e.toInput,a="empty"in e&&"function"==typeof e.empty;return t&&a}const To={toFields:({field:e})=>[e],toAuxiliary:e=>[e?.symbol??""],fromFields:([e],[t])=>({symbol:t,field:e}),sizeInFields:()=>1,check({field:e}){zr(48,e)},toValue:({symbol:e})=>e,fromValue(e){if("string"!=typeof e)return e;let t=(new TextEncoder).encode(e).length;if(t>6)throw Error(`Token symbol ${e} should be a maximum of 6 bytes, but is ${t}`);return{symbol:e,field:ko(e)}},toJSON:({symbol:e})=>e,fromJSON:e=>({symbol:e,field:ko(e)}),toInput:({field:e})=>({packed:[[e,48]]}),empty:()=>({symbol:"",field:Yi(0n)})};class Eo extends(lp(To)){static from(e){return Eo.fromValue(e)}}function Io(e){return e.every((e=>e.isConstant()))}function No(e){return e.map((e=>e.toBigInt()))}var Co;function Ao(e,t,a){let n=na.util.fromMlString(a[1][2][6]);switch(a[0]){case Co.StepProvingKey:case Co.StepVerificationKey:{let r=Fo[a[0]],i=a[1][3],o=t[i].methodName,p=Bo(`${r}-${e}-${o}`),s=Bo(`${r}-${e}-${i}-${o}-${n}`);return{version:St,uniqueId:s,kind:r,persistentId:p,programName:e,methodName:o,methodIndex:i,hash:n,dataType:qo[a[0]]}}case Co.WrapProvingKey:case Co.WrapVerificationKey:{let t=Fo[a[0]],r=qo[a[0]],i=Bo(`${t}-${e}`),o=Bo(`${t}-${e}-${n}`);return{version:St,uniqueId:o,kind:t,persistentId:i,programName:e,hash:n,dataType:r}}}}function Bo(e){return e.toLowerCase().replace(/[^a-z0-9_-]/g,"_")}!function(e){e[e.StepProvingKey=0]="StepProvingKey",e[e.StepVerificationKey=1]="StepVerificationKey",e[e.WrapProvingKey=2]="WrapProvingKey",e[e.WrapVerificationKey=3]="WrapVerificationKey"}(Co||(Co={}));const Fo={[Co.StepProvingKey]:"step-pk",[Co.StepVerificationKey]:"step-vk",[Co.WrapProvingKey]:"wrap-pk",[Co.WrapVerificationKey]:"wrap-vk"},qo={[Co.StepProvingKey]:"bytes",[Co.StepVerificationKey]:"string",[Co.WrapProvingKey]:"bytes",[Co.WrapVerificationKey]:"string"},Vo=no,Oo=Vo,Po=no;class Do{toJSON(){let e=ap(this.constructor);return{publicInput:e.input.toFields(this.publicInput).map(String),publicOutput:e.output.toFields(this.publicOutput).map(String),maxProofsVerified:this.maxProofsVerified,proof:na.proofToBase64([this.maxProofsVerified,this.proof])}}constructor({proof:e,publicInput:t,publicOutput:a,maxProofsVerified:n}){this.shouldVerify=Qi(!1),this.publicInput=t,this.publicOutput=a,this.proof=e,this.maxProofsVerified=n}}Do.publicInputType=void 0,Do.publicOutputType=void 0,Do.tag=()=>{throw Error("You cannot use the `Proof` class directly. Instead, define a subclass:\nclass MyProof extends Proof<PublicInput, PublicOutput> { ... }")};class Uo extends Do{verify(){this.shouldVerify=Qi(!0)}verifyIf(e){this.shouldVerify=e}static async fromJSON({maxProofsVerified:e,proof:t,publicInput:a,publicOutput:n}){await pa();let[,r]=na.proofOfBase64(t,e),i=ap(this);return new this({publicInput:i.input.fromFields(a.map(Yi)),publicOutput:i.output.fromFields(n.map(Yi)),proof:r,maxProofsVerified:e})}static async dummy(e,t,a,n=14){return new this({publicInput:e,publicOutput:t,proof:await op(a,n),maxProofsVerified:a})}}var zo=0;class Ro extends Do{static tag(){let e;return void 0!==this.memoizedCounter?e=this.memoizedCounter:(e=zo++,this.memoizedCounter=e),{name:`o1js-sideloaded-${e}`}}verify(e){this.shouldVerify=Qi(!0),this.usedVerificationKey=e}verifyIf(e,t){this.shouldVerify=t,this.usedVerificationKey=e}static async fromJSON({maxProofsVerified:e,proof:t,publicInput:a,publicOutput:n}){await pa();let[,r]=na.proofOfBase64(t,e),i=ap(this);return new this({publicInput:i.input.fromFields(a.map(Yi)),publicOutput:i.output.fromFields(n.map(Yi)),proof:r,maxProofsVerified:e})}static async dummy(e,t,a,n=14){return this.fromProof(await Uo.dummy(e,t,a,n))}static fromProof(e){return new this({publicInput:e.publicInput,publicOutput:e.publicOutput,maxProofsVerified:e.maxProofsVerified,proof:e.proof})}}Ro.featureFlags={rangeCheck0:!1,rangeCheck1:!1,foreignFieldAdd:!1,foreignFieldMul:!1,xor:!1,rot:!1,lookup:!1,runtimeTables:!1};let Mo=new WeakMap,jo={get:e=>Mo.get(e),store(e,t){Mo.set(e,t)}},$o={},Lo={get:e=>$o[e],store(e,t){$o[e]=t}};function Ho(e){let t=!0,a=e.methods,n=ar.get(e.publicInput??Vo),r=ar.get(e.publicOutput??Po),i={name:e.name};class o extends Uo{}o.publicInputType=n,o.publicOutputType=r,o.tag=()=>i;let p,s=Object.keys(a).sort(),d=s.map((e=>Wo("program",e,a[e].privateInputs,o))),l=s.map((e=>a[e].method)),_=np(d);async function m(){let e={};for(let t=0;t<d.length;t++){let a=d[t];e[a.methodName]=await Qo(n,a,l[t])}return e}let u=Object.fromEntries(s.map((function(e,o){async function s(s,...l){class m extends Uo{}if(m.publicInputType=n,m.publicOutputType=r,m.tag=()=>i,!t){let t=f.to(Xo(l,d[o])),n=await a[e].method(s,t);return m.dummy(s,n,_)}let u=p?.provers?.[o];if(void 0===u)throw Error(`Cannot prove execution of program.${e}(), no prover found. Try calling \`await program.compile()\` first, this will cache provers in the background.\nIf you compiled your zkProgram with proofs disabled (\`proofsEnabled = false\`), you have to compile it with proofs enabled first.`);let c,g=ip(n,s),w=f.to(Xo(l,d[o])),v=rn.enter({witnesses:l,inProver:!0});try{c=await u(g,w)}finally{rn.leave(v)}let[y,b]=h.from(c);return new m({publicInput:s,publicOutput:(k=r,S=y,k.fromFields(so.from(S))),proof:b,maxProofsVerified:_});var k,S}let l;return l=n===Vo||n===Po?(...e)=>s(void 0,...e):s,[e,l]})));const c=Object.assign(i,{compile:async function({cache:a=At.FileSystemDefault,forceRecompile:o=!1,proofsEnabled:_=!0}={}){if(t=_,t){let t=await m(),_=s.map((e=>t[e].gates)),{provers:u,verify:c,verificationKey:f}=await Yo({publicInputType:n,publicOutputType:r,methodIntfs:d,methods:l,gates:_,proofSystemTag:i,cache:a,forceRecompile:o,overrideWrapDomain:e.overrideWrapDomain});return p={provers:u,verify:c},{verificationKey:f}}return{verificationKey:Jo.empty()}},verify:function(e){if(!t)return Promise.resolve(!0);if(void 0===p?.verify)throw Error("Cannot verify proof, verification key not found. Try calling `await program.compile()` first.");let a=h(ip(n,e.publicInput),ip(r,e.publicOutput));return p.verify(a,e.proof)},digest:async function(){let e=await m();return go(s.map((t=>Yi(BigInt("0x"+e[t].digest))))).toBigInt().toString(16)},analyzeMethods:m,publicInputType:n,publicOutputType:r,privateInputTypes:Object.fromEntries(s.map((e=>[e,a[e].privateInputs]))),rawMethods:Object.fromEntries(s.map((e=>[e,a[e].method]))),setProofsEnabled(e){t=e}},u);return Object.defineProperty(c,"proofsEnabled",{get:()=>t}),c}class Ko extends Uo{}class Jo extends(lp({...rr({data:String,hash:Yi}),toJSON:({data:e})=>e})){}function Wo(e,t,a,n){let r=[],i=[],o=[];for(let e=0;e<a.length;e++){let s=a[e];if((p=s)===Uo||p===Ro||"function"==typeof p&&p.prototype instanceof Do){if(s===Do||s===Uo||s===Ro){const e=s.name;throw Error(`You cannot use the \`${e}\` class directly. Instead, define a subclass:\nclass MyProof extends ${e}<PublicInput, PublicOutput> { ... }`)}o.push({type:"proof",index:i.length}),s===Ko?i.push(n):i.push(s)}else if(Go(s))o.push({type:"witness",index:r.length}),r.push(s);else{if(!Go(s?.provable))throw Error(`Argument ${e+1} of method ${t} is not a provable type: ${s}`);o.push({type:"witness",index:r.length}),r.push(s.provable)}}var p;if(i.length>2)throw Error(`${e}.${t}() has more than two proof arguments, which is not supported.\nSuggestion: You can merge more than two proofs by merging two at a time in a binary tree.`);return{methodName:t,witnessArgs:r,proofArgs:i,allArgs:o}}function Go(e){return("function"==typeof e||"object"==typeof e)&&null!==e&&["toFields","fromFields","sizeInFields","toAuxiliary"].every((t=>t in e))}function Xo(e,{allArgs:t}){let a=[];for(let n=0;n<t.length;n++){let r=t[n];"proof"===r.type&&(a[r.index]=e[n].proof)}return a}const Zo={0:0,1:1,2:1};async function Yo({publicInputType:e,publicOutputType:t,methodIntfs:a,methods:n,gates:i,proofSystemTag:o,cache:p,forceRecompile:s,overrideWrapDomain:d}){if(await pa(),0===a.length)throw Error("The Program you are trying to compile has no methods. \nTry adding a method to your ZkProgram or SmartContract.\nIf you are using a SmartContract, make sure you are using the @method decorator.");let l=a.map(((a,p)=>function(e,t,a,n,{methodName:i,witnessArgs:o,proofArgs:p,allArgs:s},d){if(p.length>2)throw Error(`${n.name}.${i}() has more than two proof arguments, which is not supported.\nSuggestion: You can merge more than two proofs by merging two at a time in a binary tree.`);let l=p.map((e=>{let t=e.tag();if(t===n)return{isSelf:!0};if("function"==typeof(a=e)&&a.prototype instanceof Ro){let a;return void 0===Lo.get(t.name)?(a=na.sideLoaded.create(t.name,e.maxProofsVerified,e.publicInputType?.sizeInFields()??0,e.publicOutputType?.sizeInFields()??0,dp(e.featureFlags)),Lo.store(t.name,a)):a=Lo.get(t.name),{isSelf:!1,tag:a}}{let e=jo.get(t);if(void 0===e)throw Error(`${n.name}.compile() depends on ${t.name}, but we cannot find compilation output for ${t.name}.\nTry to run ${t.name}.compile() first.`);return{isSelf:!1,tag:e}}var a})),_=dp(function(e){let t={rangeCheck0:!1,rangeCheck1:!1,foreignFieldAdd:!1,foreignFieldMul:!1,xor:!1,rot:!1,lookup:!1,runtimeTables:!1};for(let a of e){let e=sp[a.type];void 0!==e&&(t[e]=!0)}return t}(d));return{identifier:i,main:async function(n){let{witnesses:d,inProver:l}=rn.get();oe(!(l&&void 0===d));let _,m=[],u=[],c=[];for(let e=0;e<s.length;e++){let t=s[e];if("witness"===t.type){let a=o[t.index];try{m[e]=_r.witness(a,(()=>d?.[e]??ep(a)))}catch(t){throw t.message=`Error when witnessing in ${i}, argument ${e}: ${t.message}`,t}}else if("proof"===t.type){let a=p[t.index],n=ap(a),r=d?.[e]??{proof:void 0,publicInput:ep(n.input),publicOutput:ep(n.output)},{proof:i,publicInput:o,publicOutput:s}=r;o=_r.witness(n.input,(()=>o)),s=_r.witness(n.output,(()=>s));let l=new a({publicInput:o,publicOutput:s,proof:i});m[e]=l,u.push({proofInstance:l,classReference:a});let _=rp(n.input,o),f=rp(n.output,s);c.push(h(_,f))}}if(e===Vo||e===Po)_=await a(...m);else{let t=(g=n,e.fromFields(po.from(g)));_=await a(t,...m)}var g;u.forEach((({proofInstance:e,classReference:t})=>{if(!(e instanceof Ro))return;const a=t.tag(),n=Lo.get(a.name),i=e.usedVerificationKey;if(void 0===i)throw new Error("proof.verify() not called, call it at least once in your circuit");_r.inProver()&&na.sideLoaded.inProver(n,i.data);const o=na.sideLoaded.vkToCircuit((()=>i.data)),p=function(e){const t=na.sideLoaded.vkDigest(e),a=ta.poseidon.update(po.to([Yi(0),Yi(0),Yi(0)]),po.to([xa(Yi,r.sideLoadedVK)])),n=ta.poseidon.update(a,t);return po.from(n)[0]}(o);Yi(p).assertEquals(i.hash,"Provided VerificationKey hash not correct"),na.sideLoaded.inCircuit(n,o)}));let w=0!==t.sizeInFields()?t.toFields(_):[];return{publicOutput:po.to(w),previousStatements:f.to(c),shouldVerify:f.to(u.map((e=>e.proofInstance.shouldVerify.toField().value)))}},featureFlags:_,proofsToVerify:f.to(l)}}(e,t,n[p],o,a,i[p]))),_=np(a);d??=Zo[_];let m=[0,function(e){if(s)return v.unitError();let t=Ao(o.name,a,e),n=Tt(p,t,(t=>function(e,t){switch(e[0]){case Co.StepProvingKey:{let a=na.loadSrsFp(),n=Kt.caml_pasta_fp_plonk_index_decode(t,a),r=e[1][4];return[Co.StepProvingKey,[0,n,r]]}case Co.StepVerificationKey:{let e=na.loadSrsFp(),a=(new TextDecoder).decode(t),n=Kt.caml_pasta_fp_plonk_verifier_index_deserialize(e,a),r=zt(Kt).fp.verifierIndexFromRust(n);return[Co.StepVerificationKey,r]}case Co.WrapProvingKey:{let a=na.loadSrsFq(),n=Kt.caml_pasta_fq_plonk_index_decode(t,a),r=e[1][3];return[Co.WrapProvingKey,[0,n,r]]}case Co.WrapVerificationKey:{let e=(new TextDecoder).decode(t),a=na.decodeVerificationKey(e);return[Co.WrapVerificationKey,a]}default:throw Error("unreachable")}}(e,t)));return void 0===n?v.unitError():v.ok(n)},function(e,t){if(!p.canWrite)return v.unitError();let n=Ao(o.name,a,e),r=Et(p,n,function(e){switch(e[0]){case Co.StepProvingKey:{let t=e[1][1];return Kt.caml_pasta_fp_plonk_index_encode(t)}case Co.StepVerificationKey:{let t=e[1],a=zt(Kt).fp.verifierIndexToRust(t),n=Kt.caml_pasta_fp_plonk_verifier_index_serialize(a);return(new TextEncoder).encode(n)}case Co.WrapProvingKey:{let t=e[1][1];return Kt.caml_pasta_fq_plonk_index_encode(t)}case Co.WrapVerificationKey:{let t=e[1],a=na.encodeVerificationKey(t);return(new TextEncoder).encode(a)}default:throw Error("unreachable")}}(t));return r?v.ok(void 0):v.unitError()},g(p.canWrite)],{verificationKey:u,provers:c,verify:w,tag:y}=await ne(Qt((async()=>{let a,n=rn.enter({inCompile:!0});qt(p);try{a=na.compile(f.to(l),{publicInputSize:e.sizeInFields(),publicOutputSize:t.sizeInFields(),storable:m,overrideWrapDomain:d});let{getVerificationKey:n,provers:r,verify:i,tag:p}=a;jo.store(o,p);let[,s,_]=await n();return{verificationKey:{data:s,hash:Yi(_)},provers:f.from(r),verify:i,tag:p}}finally{rn.leave(n),Vt()}})));return{verificationKey:u,provers:c.map((e=>async function(t,a){return ne(Qt((()=>e(t,a))))})),verify:async function(e,t){return ne(Qt((()=>w(e,t))))},tag:y}}function Qo(e,t,a){return _r.constraintSystem((()=>{let n=function({allArgs:e,proofArgs:t,witnessArgs:a},n=!1){let r=[],i=n?tp:ep;for(let n of e)if("witness"===n.type)r.push(i(a[n.index]));else if("proof"===n.type){let e=t[n.index],a=ap(e),o=i(a.input),p=i(a.output);r.push(new e({publicInput:o,publicOutput:p,proof:void 0}))}return r}(t,!0),r=tp(e);return e===Vo||e===Po?a(...n):a(r,...n)}))}function ep(e){return e.fromFields(Array(e.sizeInFields()).fill(Yi(0)),e.toAuxiliary())}function tp(e){return _r.witness(e,(()=>ep(e)))}function ap(e){if(void 0===e.publicInputType||void 0===e.publicOutputType)throw Error("You cannot use the `Proof` class directly. Instead, define a subclass:\nclass MyProof extends Proof<PublicInput, PublicOutput> { ... }");return{input:e.publicInputType,output:e.publicOutputType}}function np(e){return e.reduce(((e,{proofArgs:t})=>Math.max(e,t.length)),0)}function rp(e,t){return po.to(e.toFields(t))}function ip(e,t){return so.to(e.toFields(t))}async function op(e,t){return await pa(),Qt((async()=>na.dummyProof(e,t)[1]))}let pp;Ho.Proof=function(e){var t;return(t=class extends Uo{}).publicInputType=e.publicInputType,t.publicOutputType=e.publicOutputType,t.tag=()=>e,t};const sp={RangeCheck0:"rangeCheck0",RangeCheck1:"rangeCheck1",ForeignFieldAdd:"foreignFieldAdd",ForeignFieldMul:"foreignFieldMul",Xor16:"xor",Rot64:"rot",Lookup:"lookup"};function dp(e){const{rangeCheck0:t,rangeCheck1:a,foreignFieldAdd:n,foreignFieldMul:r,xor:i,rot:o,lookup:p,runtimeTables:s}=e;return[0,w.mapTo(t,g),w.mapTo(a,g),w.mapTo(n,g),w.mapTo(r,g),w.mapTo(i,g),w.mapTo(o,g),w.mapTo(p,g),w.mapTo(s,g)]}function lp(e){class t{constructor(e){Object.assign(this,e)}static sizeInFields(){return this.type.sizeInFields()}static toFields(e){return this.type.toFields(e)}static toAuxiliary(e){return this.type.toAuxiliary(e)}static toInput(e){return this.type.toInput(e)}static toJSON(e){return this.type.toJSON(e)}static fromJSON(e){let t=this.type.fromJSON(e),a=Object.create(this.prototype);return Object.assign(a,t)}static empty(){let e=this.type.empty(),t=Object.create(this.prototype);return Object.assign(t,e)}static check(e){return this.type.check(e)}static toValue(e){return this.type.toValue(e)}static fromValue(e){let t=this.type.fromValue(e),a=Object.create(this.prototype);return Object.assign(a,t)}static fromFields(e,t){let a=this.type.fromFields(e,t),n=Object.create(this.prototype);return Object.assign(n,a)}}return t.type=rr(e),t}function _p(e){return lp(e)}let mp=new Set([Yi,Qi,Li,eo]);function up(e){if("object"!=typeof e||null===e)return e;if(void 0!==e.constructor&&"clone"in e.constructor)return e.constructor.clone(e);if("clone"in e&&"function"==typeof e.clone)return e.clone(e);if(Array.isArray(e))return e.map(up);if(e instanceof Set)return new Set([...e].map(up));if(e instanceof Map)return new Map([...e].map((([e,t])=>[e,up(t)])));if(ArrayBuffer.isView(e))return new e.constructor(e);if(function(e){for(let t of mp)if(e instanceof t)return!0;return!1}(e))return e;if(e instanceof Uo||e instanceof Ro)return e;let t={};for(let[a,n]of Object.entries(e))t[a]={value:up(n),writable:!0,enumerable:!0,configurable:!0};return Object.create(Object.getPrototypeOf(e),t)}function cp(e,t){if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return e===t;if(Array.isArray(e))return Array.isArray(t)&&e.length===t.length&&e.every(((e,a)=>cp(e,t[a])));if(e instanceof Set)return t instanceof Set&&e.size===t.size&&[...e].every((e=>t.has(e)));if(e instanceof Map)return t instanceof Map&&e.size===t.size&&[...e].every((([e,a])=>cp(a,t.get(e))));if(ArrayBuffer.isView(e)&&!(e instanceof DataView))return ArrayBuffer.isView(t)&&!(t instanceof DataView)&&cp([...e],[...t]);if("equals"in e&&"function"==typeof e.equals){let a=e.equals(t).toBoolean();if("boolean"==typeof a)return a;if(a instanceof Qi)return a.toBoolean()}if("toFields"in e&&"function"==typeof e.toFields&&"toFields"in t&&"function"==typeof t.toFields){let a=e.toFields(),n=t.toFields();return a.every(((e,t)=>e.equals(n[t]).toBoolean()))}let a=Object.entries(e).filter((([,e])=>void 0!==e)),n=Object.entries(t).filter((([,e])=>void 0!==e));return a.length===n.length&&a.every((([e,a])=>e in t&&cp(t[e],a)))}function fp(e,t=32){if(e.isConstant()){oe(e.toBigInt()<1n<<64n,`n needs to fit into 64 bit, but got ${e.toBigInt()}`);let t=e.toBigInt(),a=t>>32n;return{remainder:new Yi(t-(a<<32n)),quotient:new Yi(a)}}let[a,n]=_r.witness(or([Yi,Yi]),(()=>{let t=e.toBigInt(),a=t>>32n;return[a,t-(a<<32n)]}));return 1===t?a.assertBool():zr(t,a),Er(n),e.assertEquals(a.mul(1n<<32n).add(n)),{remainder:n,quotient:a}}function hp(e,t){return fp(e.add(t),1).remainder}function gp(e,t,a=!1){Ep(t,240,"not");let n=16*Math.ceil(t/16);if(e.isConstant()){let a=1n<<BigInt(n);return Pn(e.toBigInt()<a,`${e.toBigInt()} does not fit into ${n} bits`),new ui(Y.not(e.toBigInt(),t))}let r=new ui(2n**BigInt(t)-1n);return a?wp(e,r,t):r.sub(e).seal()}function wp(e,t,a){Ep(a,240,"xor");let n=16*Math.ceil(a/16);if(e.isConstant()&&t.isConstant()){let a=1n<<BigInt(n);return Pn(e.toBigInt()<a,`${e} does not fit into ${n} bits`),Pn(t.toBigInt()<a,`${t} does not fit into ${n} bits`),new ui(e.toBigInt()^t.toBigInt())}let r=_r.witness(ui,(()=>e.toBigInt()^t.toBigInt()));return function(e,t,a,n){for(;0!==n;){let r=Tn(15,(()=>{let n=e.toBigInt(),r=t.toBigInt(),i=a.toBigInt();return[Dn(n,0,4),Dn(n,4,4),Dn(n,8,4),Dn(n,12,4),Dn(r,0,4),Dn(r,4,4),Dn(r,8,4),Dn(r,12,4),Dn(i,0,4),Dn(i,4,4),Dn(i,8,4),Dn(i,12,4),n>>16n,r>>16n,i>>16n]})),[i,o,p,s,d,l,_,m,u,c,f,h,g,w,v]=r;Nn.xor(e,t,a,i,o,p,s,d,l,_,m,u,c,f,h),e=g,t=w,a=v,n-=16}Nn.zero(e,t,a);let r=new ui(0);r.assertEquals(e),r.assertEquals(t),r.assertEquals(a)}(e,t,r,n),r}function vp(e,t,a){Ep(a,240,"and");let n=16*Math.ceil(a/16);if(e.isConstant()&&t.isConstant()){let a=1n<<BigInt(n);return Pn(e.toBigInt()<a,`${e} does not fit into ${n} bits`),Pn(t.toBigInt()<a,`${t} does not fit into ${n} bits`),new ui(e.toBigInt()&t.toBigInt())}let r=_r.witness(ui,(()=>e.toBigInt()&t.toBigInt())),i=e.add(t),o=wp(e,t,a);return r.mul(2).add(o).assertEquals(i),r}function yp(e,t,a="left"){if(Pn(t>=0&&t<=64,`rotation: expected bits to be between 0 and 64, got ${t}`),e.isConstant())return Pn(e.toBigInt()<1n<<64n,`rotation: expected field to be at most 64 bits, got ${e.toBigInt()}`),new ui(Y.rot(e.toBigInt(),BigInt(t),a));const[n]=kp(e,t,a);return n}function bp(e,t,a="left"){if(Pn(t<=32&&t>0,"bits must be between 0 and 32"),e.isConstant())return Pn(e.toBigInt()<1n<<32n,`rotation: expected field to be at most 32 bits, got ${e.toBigInt()}`),new ui(Y.rot(e.toBigInt(),BigInt(t),a,32n));let{quotient:n,remainder:r}=fp(e.mul(1n<<BigInt("left"===a?t:32-t))),i=r.add(n);return Er(i),i}function kp(e,t,a="left"){const n=1n<<64n,r=1n<<BigInt("right"===a?64-t:t),[i,o,p,s]=_r.witness(_r.Array(ui,4),(()=>{const t=e.toBigInt(),{quotient:a,remainder:i}=function(e,t){const a=e/t;return{quotient:a,remainder:e-t*a}}(t*r,n);return[i+a,a,i,a+n-r]}));Vn(0n);let d=Tn(12,(()=>{let e=s.toBigInt();return[Dn(e,52,12),Dn(e,40,12),Dn(e,28,12),Dn(e,16,12),Dn(e,14,2),Dn(e,12,2),Dn(e,10,2),Dn(e,8,2),Dn(e,6,2),Dn(e,4,2),Dn(e,2,2),Dn(e,0,2)]})),[l,_,m,u,c,f,h,g,w,v,y,b]=d;return Nn.rotate(e,i,o,[l,_,m,u],[c,f,h,g,w,v,y,b],r),Ir(p),[i,o,p]}function Sp(e,t){if(Pn(t>=0&&t<=64,`rightShift: expected bits to be between 0 and 64, got ${t}`),e.isConstant())return Pn(e.toBigInt()<1n<<64n,`rightShift: expected field to be at most 64 bits, got ${e.toBigInt()}`),new ui(Y.rightShift(e.toBigInt(),t));const[,a]=kp(e,t,"right");return a}function xp(e,t){if(Pn(t>=0&&t<=64,`rightShift: expected bits to be between 0 and 64, got ${t}`),e.isConstant())return Pn(e.toBigInt()<1n<<64n,`rightShift: expected field to be at most 64 bits, got ${e.toBigInt()}`),new ui(Y.leftShift(e.toBigInt(),t));const[,,a]=kp(e,t,"left");return a}function Tp(e,t){let{remainder:a}=fp(e.mul(1n<<BigInt(t)));return a}function Ep(e,t,a){Pn(e>0,`${a}: Input length must be a positive value.`),Pn(e<=t,`${a}: Length ${e} exceeds maximum of ${t} bits.`)}a(741);class Ip{constructor(...e){if(0===e.length)return;let t=this.constructor.prototype._fields;if(void 0!==t){if(e.length!==t.length)throw Error(`${this.constructor.name} constructor called with ${e.length} arguments, but expected ${t.length}`);for(let a=0;a<t.length;++a){let[n]=t[a];this[n]=e[a]}}}static fromObject(e){return Object.assign(Object.create(this.prototype),e)}static sizeInFields(){return this.prototype._fields.reduce(((e,[t,a])=>e+a.sizeInFields()),0)}static toFields(e){const t=[],a=this.prototype._fields;if(null==a)return t;for(let n=0,r=a.length;n<r;++n){const[r,i]=a[n];i.toFields(e[r]).forEach((e=>t.push(e)))}return t}static toAuxiliary(){return[]}static toInput(e){let t={fields:[],packed:[]},a=this.prototype._fields;if(void 0===a)return t;for(let n=0,r=a.length;n<r;++n){let[r,i]=a[n];if("toInput"in i){t=nr.append(t,i.toInput(e[r]));continue}let o=i.toFields(e[r]);t.fields.push(...o)}return t}toFields(){return this.constructor.toFields(this)}static toValue(e){const t={};return(this.prototype._fields??[]).forEach((([a,n])=>{t[a]=n.toValue(e[a])})),t}static fromValue(e){let t={},a=this.prototype._fields??[];if("object"!=typeof e||null===e||Array.isArray(e))throw Error(`${this.name}.fromValue(): invalid input ${e}`);for(let n=0;n<a.length;++n){let[r,i]=a[n];if(void 0===e[r])throw Error(`${this.name}.fromValue(): invalid input ${e}`);t[r]=i.fromValue(e[r])}return Object.assign(Object.create(this.prototype),t)}toJSON(){return this.constructor.toJSON(this)}toConstant(){return this.constructor.toConstant(this)}equals(e){return _r.equal(this,e)}assertEquals(e){_r.assertEqual(this,e)}isConstant(){return this.toFields().every((e=>e.isConstant()))}static fromFields(e){const t=this.prototype._fields;if(e.length<t.length)throw Error(`${this.name}.fromFields: Expected ${t.length} field elements, got ${e?.length}`);let a=0;const n={};for(let r=0;r<t.length;++r){const[i,o]=t[r],p=o.sizeInFields(),s=o.fromFields(e.slice(a,a+p),[]);n[i]=s,a+=p}return Object.assign(Object.create(this.prototype),n)}static check(e){const t=this.prototype._fields;if(null!=t)for(let a=0;a<t.length;++a){const[n,r]=t[a],i=e[n];if(void 0===r.check)throw Error("bug: CircuitValue without .check()");r.check(i)}}static toConstant(e){const t=this.toFields(e);return this.fromFields(t.map((e=>e.toConstant())))}static toJSON(e){const t={};return void 0!==this.prototype._fields&&this.prototype._fields.forEach((([a,n])=>{t[a]=n.toJSON(e[a])})),t}static fromJSON(e){let t={},a=this.prototype._fields;if("object"!=typeof e||null===e||Array.isArray(e))throw Error(`${this.name}.fromJSON(): invalid input ${e}`);if(void 0!==a)for(let n=0;n<a.length;++n){let[r,i]=a[n];if(void 0===e[r])throw Error(`${this.name}.fromJSON(): invalid input ${e}`);t[r]=i.fromJSON(e[r])}return Object.assign(Object.create(this.prototype),t)}static empty(){const e=this.prototype._fields??[];let t={};return e.forEach((([e,a])=>{t[e]=a.empty()})),Object.assign(Object.create(this.prototype),t)}}function Np(e,t){const a=Reflect.getMetadata("design:type",e,t);e.hasOwnProperty("_fields")||(e._fields=[]),void 0===a||(a.toFields&&a.fromFields?e._fields.push([t,a]):console.log(`warning: property ${t} missing field element conversion methods`))}function Cp(e,t){return function(a,n){a.hasOwnProperty("_fields")||(a._fields=[]),a._fields.push([n,_r.Array(e,t)])}}class Ap extends Ip{constructor(e){(e instanceof Ap||e instanceof Bp)&&(e=e.value.value);let t=Yi(e);super(t),Ap.checkConstant(t)}static get zero(){return new Ap(0)}static get one(){return new Ap(1)}toString(){return this.value.toString()}toBigInt(){return this.value.toBigInt()}toUInt32(){let e=new Bp(this.value.value);return Bp.check(e),e}toUInt32Clamped(){let e=(1n<<32n)-1n,t=_r.if(this.greaterThan(Ap.from(e)),Yi.from(e),this.value);return Bp.Unsafe.fromField(t)}static check(e){zr(Ap.NUM_BITS,e.value)}static toInput(e){return{packed:[[e.value,64]]}}static toJSON(e){return e.value.toString()}static fromJSON(e){return this.from(e)}static checkConstant(e){if(!e.isConstant())return e;let t=e.toBigInt();if(t<0n||t>=1n<<BigInt(this.NUM_BITS))throw Error(`UInt64: Expected number between 0 and 2^64 - 1, got ${t}`);return e}static from(e){return e instanceof Ap?e:new this(e)}static MAXINT(){return new Ap((1n<<64n)-1n)}divMod(e){let t=this.value,a=Ap.from(e).value;if(this.value.isConstant()&&a.isConstant()){let e=t.toBigInt(),n=a.toBigInt(),r=e/n,i=e-r*n;return{quotient:new Ap(r),rest:new Ap(i)}}a=a.seal();let n=_r.witness(Yi,(()=>new Yi(t.toBigInt()/a.toBigInt())));zr(Ap.NUM_BITS,n);let r=t.sub(n.mul(a)).seal();zr(Ap.NUM_BITS,r);let i=new Ap(r.value),o=new Ap(n.value);return i.assertLessThan(new Ap(a.value)),{quotient:o,rest:i}}div(e){return this.divMod(e).quotient}mod(e){return this.divMod(e).rest}mul(e){let t=this.value.mul(Ap.from(e).value);return zr(Ap.NUM_BITS,t),new Ap(t.value)}add(e){let t=this.value.add(Ap.from(e).value);return zr(Ap.NUM_BITS,t),new Ap(t.value)}sub(e){let t=this.value.sub(Ap.from(e).value);return zr(Ap.NUM_BITS,t),new Ap(t.value)}xor(e){return new Ap(wp(this.value,e.value,Ap.NUM_BITS).value)}not(){return new Ap(gp(this.value,Ap.NUM_BITS,!1).value)}rotate(e,t="left"){return new Ap(yp(this.value,e,t).value)}leftShift(e){return new Ap(xp(this.value,e).value)}rightShift(e){return new Ap(Sp(this.value,e).value)}and(e){return new Ap(vp(this.value,e.value,Ap.NUM_BITS).value)}lessThanOrEqual(e){return this.value.isConstant()&&e.value.isConstant()?Qi(this.value.toBigInt()<=e.value.toBigInt()):di(this.value,e.value,1n<<64n,(e=>zr(Ap.NUM_BITS,e)))}assertLessThanOrEqual(e,t){if(this.value.isConstant()&&e.value.isConstant()){let[a,n]=[this.value.toBigInt(),e.value.toBigInt()];return M(a<=n,t??`UInt64.assertLessThanOrEqual: expected ${a} <= ${n}`)}oi(this.value,e.value,(e=>zr(Ap.NUM_BITS,e,t)))}lessThan(e){return this.value.isConstant()&&e.value.isConstant()?Qi(this.value.toBigInt()<e.value.toBigInt()):si(this.value,e.value,1n<<64n,(e=>zr(Ap.NUM_BITS,e)))}assertLessThan(e,t){if(this.value.isConstant()&&e.value.isConstant()){let[a,n]=[this.value.toBigInt(),e.value.toBigInt()];return M(a<n,t??`UInt64.assertLessThan: expected ${a} < ${n}`)}pi(this.value,e.value,(e=>zr(Ap.NUM_BITS,e,t)))}greaterThan(e){return e.lessThan(this)}assertGreaterThan(e,t){e.assertLessThan(this,t)}greaterThanOrEqual(e){return e.lessThanOrEqual(this)}assertGreaterThanOrEqual(e,t){e.assertLessThanOrEqual(this,t)}static toValue(e){return e.value.toBigInt()}static fromValue(e){return Ap.from(e)}}Ap.NUM_BITS=64,Ap.Unsafe={fromField:e=>new Ap(e.value)},vr([Np,yr("design:type",Yi)],Ap.prototype,"value",void 0);class Bp extends Ip{constructor(e){e instanceof Bp&&(e=e.value.value);let t=Yi(e);super(t),Bp.checkConstant(t)}static get zero(){return new Bp(0)}static get one(){return new Bp(1)}toString(){return this.value.toString()}toBigint(){return this.value.toBigInt()}toUInt64(){return new Ap(this.value.value)}static check(e){Er(e.value)}static toInput(e){return{packed:[[e.value,32]]}}static toJSON(e){return e.value.toString()}static fromJSON(e){return this.from(e)}static checkConstant(e){if(!e.isConstant())return e;let t=e.toBigInt();if(t<0n||t>=1n<<BigInt(this.NUM_BITS))throw Error(`UInt32: Expected number between 0 and 2^32 - 1, got ${t}`);return e}static from(e){return e instanceof Bp?e:new this(e)}static MAXINT(){return new Bp((1n<<32n)-1n)}addMod32(e){return new Bp(hp(this.value,e.value).value)}divMod(e){let t=this.value,a=Bp.from(e).value;if(t.isConstant()&&a.isConstant()){let e=t.toBigInt(),n=a.toBigInt(),r=e/n,i=e-r*n;return{quotient:new Bp(new Yi(r.toString()).value),rest:new Bp(new Yi(i.toString()).value)}}a=a.seal();let n=_r.witness(Yi,(()=>new Yi(t.toBigInt()/a.toBigInt())));Er(n);let r=t.sub(n.mul(a)).seal();Er(r);let i=new Bp(r.value),o=new Bp(n.value);return i.assertLessThan(new Bp(a.value)),{quotient:o,rest:i}}div(e){return this.divMod(e).quotient}mod(e){return this.divMod(e).rest}mul(e){let t=this.value.mul(Bp.from(e).value);return Er(t),new Bp(t.value)}add(e){let t=this.value.add(Bp.from(e).value);return Er(t),new Bp(t.value)}sub(e){let t=this.value.sub(Bp.from(e).value);return Er(t),new Bp(t.value)}xor(e){return new Bp(wp(this.value,e.value,Bp.NUM_BITS).value)}not(){return new Bp(gp(this.value,Bp.NUM_BITS,!1).value)}rotate(e,t="left"){return new Bp(bp(this.value,e,t).value)}leftShift(e){return new Bp(Tp(this.value,e).value)}rightShift(e){return new Bp(Sp(this.value,e).value)}and(e){return new Bp(vp(this.value,e.value,Bp.NUM_BITS).value)}lessThanOrEqual(e){return this.value.isConstant()&&e.value.isConstant()?Qi(this.value.toBigInt()<=e.value.toBigInt()):di(this.value,e.value,1n<<32n,(e=>zr(Bp.NUM_BITS,e)))}assertLessThanOrEqual(e,t){if(this.value.isConstant()&&e.value.isConstant()){let[a,n]=[this.value.toBigInt(),e.value.toBigInt()];return M(a<=n,t??`UInt32.assertLessThanOrEqual: expected ${a} <= ${n}`)}oi(this.value,e.value,(e=>zr(Bp.NUM_BITS,e,t)))}lessThan(e){return this.value.isConstant()&&e.value.isConstant()?Qi(this.value.toBigInt()<e.value.toBigInt()):si(this.value,e.value,1n<<64n,(e=>zr(Ap.NUM_BITS,e)))}assertLessThan(e,t){if(this.value.isConstant()&&e.value.isConstant()){let[a,n]=[this.value.toBigInt(),e.value.toBigInt()];return M(a<n,t??`UInt32.assertLessThan: expected ${a} < ${n}`)}pi(this.value,e.value,(e=>zr(Bp.NUM_BITS,e,t)))}greaterThan(e){return e.lessThan(this)}assertGreaterThan(e,t){e.assertLessThan(this,t)}greaterThanOrEqual(e){return e.lessThanOrEqual(this)}assertGreaterThanOrEqual(e,t){e.assertLessThanOrEqual(this,t)}static toValue(e){return e.value.toBigInt()}static fromValue(e){return Bp.from(e)}}Bp.NUM_BITS=32,Bp.Unsafe={fromField:e=>new Bp(e.value)},vr([Np,yr("design:type",Yi)],Bp.prototype,"value",void 0);class Fp extends Ip{static get one(){return new Fp(Yi(1))}static get minusOne(){return new Fp(Yi(-1))}static check(e){e.value.square().assertEquals(1)}static empty(){return Fp.one}static toInput(e){return{packed:[[e.isPositive().toField(),1]]}}static toJSON(e){if("1"===e.toString())return"Positive";if("1"===e.neg().toString())return"Negative";throw Error(`Invalid Sign: ${e}`)}static fromJSON(e){return new Fp(Yi("Positive"===e?1:-1))}neg(){return new Fp(this.value.neg())}mul(e){return new Fp(this.value.mul(e.value))}isPositive(){return this.value.equals(1)}isNegative(){return this.value.equals(-1)}toString(){return this.value.toString()}static toValue(e){return e.value.toBigInt()}static fromValue(e){return e instanceof Fp?e:new Fp(Yi(e))}}vr([Np,yr("design:type",Yi)],Fp.prototype,"value",void 0);class qp extends Ip{constructor(e,t=Fp.one){super(e,t)}static create(e,t=Fp.one){const a=Ap.from(e),n=a.equals(Ap.zero),r=_r.if(n,Fp.one,t);return new qp(a,r)}static fromFieldUnchecked(e){let t=1n<<64n,a=e.toBigInt(),n=a<t,r=Yi.ORDER-a<t;if(!n&&!r)throw Error(`Int64: Expected a value between (-2^64, 2^64), got ${e}`);let i=(n?e:e.neg()).toConstant(),o=n?Fp.one:Fp.minusOne;return new qp(Ap.Unsafe.fromField(i),o)}static fromUnsigned(e){return new qp(e instanceof Bp?e.toUInt64():e)}static from(e){return e instanceof qp?e:e instanceof Ap||e instanceof Bp?qp.fromUnsigned(e):qp.fromFieldUnchecked(Yi(e))}fromObjectV2(e){return qp.create(Ap.from(e.magnitude),Fp.fromValue(e.sgn))}toBigint(){let e=this.magnitude.toBigInt();return(this.sgn.isPositive().toBoolean()?1n:-1n)*e}toString(){return this.toBigint().toString()}isConstant(){return this.magnitude.value.isConstant()&&this.sgn.isConstant()}static get zero(){return new qp(Ap.zero)}static get one(){return new qp(Ap.one)}static get minusOne(){return new qp(Ap.one).neg()}toField(){return this.magnitude.value.mul(this.sgn.value)}static fromField(e){if(e.isConstant())return qp.fromFieldUnchecked(e);let t=_r.witness(qp,(()=>qp.fromFieldUnchecked(e)));return t.toField().assertEquals(e),t}neg(){return new qp(this.magnitude,this.sgn.neg())}negV2(){return _r.if(this.magnitude.value.equals(0),qp.zero,new qp(this.magnitude,this.sgn.neg()))}add(e){let t=qp.from(e);return qp.fromField(this.toField().add(t.toField()))}sub(e){let t=qp.from(e);return qp.fromField(this.toField().sub(t.toField()))}mul(e){let t=qp.from(e);return qp.fromField(this.toField().mul(t.toField()))}div(e){let t=qp.from(e),{quotient:a}=this.magnitude.divMod(t.magnitude),n=this.sgn.mul(t.sgn);return new qp(a,n)}divV2(e){let t=qp.from(e),{quotient:a}=this.magnitude.divMod(t.magnitude),n=this.sgn.mul(t.sgn);return qp.create(a,n)}mod(e){let t=Ap.from(e),a=this.magnitude.divMod(t).rest.value;return a=_r.if(this.isPositive(),a,t.value.sub(a)),new qp(new Ap(a.value))}modV2(e){let t=Ap.from(e),a=this.magnitude.divMod(t).rest.value,n=this.magnitude.equals(Ap.zero).or(this.sgn.isPositive());return a=_r.if(n.or(a.equals(0)),a,t.value.sub(a)),new qp(new Ap(a.value))}equals(e){let t=qp.from(e);return this.toField().equals(t.toField())}assertEquals(e,t){let a=qp.from(e);this.toField().assertEquals(a.toField(),t)}isPositive(){return this.sgn.isPositive()}isPositiveV2(){return this.magnitude.equals(Ap.zero).not().and(this.sgn.isPositive())}static checkV2({magnitude:e,sgn:t}){Ap.check(e),Fp.check(t),e.value.add(t.value).assertNotEquals(-1,"Int64: 0 must have positive sign")}}qp.Unsafe={fromObject:e=>Ip.fromObject.call(qp,e)},vr([Np,yr("design:type",Ap)],qp.prototype,"magnitude",void 0),vr([Np,yr("design:type",Fp)],qp.prototype,"sgn",void 0);class Vp extends(lp({value:Yi})){constructor(e){e instanceof Vp&&(e=e.value.value),super({value:Yi(e)}),Vp.checkConstant(this.value)}add(e){let t=this.value.add(Vp.from(e).value);return Mr(t),Vp.Unsafe.fromField(t)}sub(e){let t=this.value.sub(Vp.from(e).value);return Mr(t),Vp.Unsafe.fromField(t)}mul(e){let t=this.value.mul(Vp.from(e).value);return Mr(t),Vp.Unsafe.fromField(t)}div(e){return this.divMod(e).quotient}mod(e){return this.divMod(e).remainder}divMod(e){let t=this.value,a=Vp.from(e).value.seal();if(this.value.isConstant()&&a.isConstant()){let e=t.toBigInt(),n=a.toBigInt(),r=e/n,i=e-r*n;return{quotient:Vp.from(r),remainder:Vp.from(i)}}let n=_r.witness(Yi,(()=>Yi(t.toBigInt()/a.toBigInt()))),r=t.sub(n.mul(a)).seal();Rr(n),Rr(r);let i=Vp.Unsafe.fromField(r),o=Vp.Unsafe.fromField(n);return i.assertLessThan(e),{quotient:o,remainder:i}}lessThanOrEqual(e){let t=Vp.from(e);return this.value.isConstant()&&t.value.isConstant()?Qi(this.toBigInt()<=t.toBigInt()):di(this.value,t.value,256n,Mr)}lessThan(e){let t=Vp.from(e);return this.value.isConstant()&&t.value.isConstant()?Qi(this.toBigInt()<t.toBigInt()):si(this.value,t.value,256n,Mr)}assertLessThan(e,t){let a=Vp.from(e);if(this.value.isConstant()&&a.value.isConstant()){let[e,n]=[this.value.toBigInt(),a.value.toBigInt()];return M(e<n,t??`UInt8.assertLessThan: expected ${e} < ${n}`)}try{pi(this.value,a.value,Rr)}catch(e){throw wi(e,t)}}assertLessThanOrEqual(e,t){let a=Vp.from(e);if(this.value.isConstant()&&a.value.isConstant()){let[e,n]=[this.value.toBigInt(),a.value.toBigInt()];return M(e<=n,t??`UInt8.assertLessThanOrEqual: expected ${e} <= ${n}`)}try{oi(this.value,a.value,Rr)}catch(e){throw wi(e,t)}}greaterThan(e){return Vp.from(e).lessThan(this)}greaterThanOrEqual(e){return Vp.from(e).lessThanOrEqual(this)}assertGreaterThan(e,t){Vp.from(e).assertLessThan(this,t)}assertGreaterThanOrEqual(e,t){Vp.from(e).assertLessThanOrEqual(this,t)}assertEquals(e,t){let a=Vp.from(e);this.value.assertEquals(a.value,t)}toString(){return this.value.toString()}toNumber(){return Number(this.value.toBigInt())}toBigInt(){return this.value.toBigInt()}static check(e){e instanceof Yi&&(e={value:e}),Mr(e.value)}static toInput(e){return{packed:[[e.value,8]]}}toUInt32(){return new Bp(this.value.value)}toUInt64(){return new Ap(this.value.value)}static MAXINT(){return new Vp((1n<<BigInt(Vp.NUM_BITS))-1n)}static from(e){if(e instanceof Vp)return e;if(e instanceof Ap||e instanceof Bp||e instanceof Yi){let t=e instanceof Yi?{value:e}:e;return Vp.check(t),new Vp(t.value.value)}return new Vp(e)}static checkConstant(e){e.isConstant()&&Mr(e)}}function Op(e,t){return oe(e.length%t==0,"invalid input length"),Array.from({length:e.length/t},((a,n)=>e.slice(t*n,t*(n+1))))}Vp.NUM_BITS=8,Vp.Unsafe={fromField:e=>new Vp(e.value)};class Pp{constructor(e){let t=this.constructor.size;Pn(e.length<=t,`Expected at most ${t} bytes, got ${e.length}`);let a=Array.from({length:t-e.length},(()=>new Vp(0)));this.bytes=e.concat(a)}static from(e){return e instanceof Pp?e:void 0===this._size?Dp(e.length).from(e):new this([...e].map(Vp.from))}toBytes(){return Uint8Array.from(this.bytes.map((e=>e.toNumber())))}toFields(){return this.bytes.map((e=>e.value))}static fromString(e){let t=(new TextEncoder).encode(e);return this.from(t)}static random(){let e=H(this.size);return this.from(e)}static fromHex(e){let t=(a=e,Op([...a],2).map((e=>e.join("")))).map((e=>parseInt(e,16)));var a;return this.from(t)}toHex(){return this.bytes.map((e=>e.toBigInt().toString(16).padStart(2,"0"))).join("")}base64Encode(){const e=this.bytes;let t=e.map((e=>e.value.toBits(8).reverse())).flat();const a=t.length%6!=0?6-t.length%6:0;t.push(...Array(a).fill(new Yn(!1)));let n=[];for(let e=0;e<t.length;e+=6){let a=t.slice(e,e+6).reverse();const r=Vp.Unsafe.fromField(ui.fromBits(a));n.push(zp(r))}const r=e.length%3!=0?3-e.length%3:0;return n.push(...Array(r).fill(Vp.from(61))),Pp.from(n)}base64Decode(e){const t=this.bytes,a=t.length;Pn(a%4==0,"Input base64 byte length should be a multiple of 4!");let n=new Array(e).fill(Vp.from(0)),r=Array.from({length:a/4},(()=>[])),i=Array.from({length:a/4},(()=>Array.from({length:4},(()=>[])))),o=0;for(let p=0;p<a/4;p++){for(let e=0;e<4;e++){const a=Up(t[4*p+e]);r[p][e]=a.toBits(6)}i[p][0]=[r[p][1][4],r[p][1][5],...r[p][0]];for(let e=0;e<4;e++)i[p][1][e]=r[p][2][e+2],i[p][1][e+4]=r[p][1][e];i[p][2]=[...r[p][3],r[p][2][0],r[p][2][1]];for(let t=0;t<3;t++)o+t<e&&(n[o+t]=Vp.Unsafe.fromField(ui.fromBits(i[p][t])));o+=3}return Pp.from(n)}chunk(e){return Op(this.bytes,e)}static get size(){return Pn(void 0!==this._size,"Bytes not initialized"),this._size}get length(){return this.bytes.length}static get provable(){return Pn(void 0!==this._provable,"Bytes not initialized"),this._provable}}function Dp(e){var t;return(t=class extends Pp{})._size=e,t._provable=pr(t,{bytes:_r.Array(Vp,e)}),t}function Up(e){let t=new ui(0);const a=e.lessThan(91),n=e.greaterThan(64),r=a.and(n),i=r.toField().mul(e.value.sub(65));t=t.add(r.toField());const o=e.lessThan(123),p=e.greaterThan(96),s=o.and(p),d=s.toField().mul(e.value.sub(71)).add(i);t=t.add(s.toField());const l=e.lessThan(58),_=e.greaterThan(47),m=l.and(_),u=m.toField().mul(e.value.add(4)).add(d);t=t.add(m.toField());const c=e.value.equals(43),f=c.toField().mul(e.value.add(19)).add(u);t=t.add(c.toField());const h=e.value.equals(47),g=h.toField().mul(e.value.add(16)).add(f);t=t.add(h.toField());const w=e.value.equals(61);return t=t.add(w.toField()),t.assertEquals(1,"Please provide Base64-encoded bytes containing only alphanumeric characters and +/="),g}function zp(e){let t=new ui(0);const a=e.lessThanOrEqual(25),n=a.toField().mul(e.value.add(65));t=t.add(a.toField());const r=e.lessThanOrEqual(51),i=e.greaterThanOrEqual(26),o=r.and(i),p=o.toField().mul(e.value.add(71)).add(n);t=t.add(o.toField());const s=e.lessThanOrEqual(61),d=e.greaterThanOrEqual(52),l=s.and(d),_=l.toField().mul(e.value.sub(4)).add(p);t=t.add(l.toField());const m=e.value.equals(62),u=m.toField().mul(e.value.sub(19)).add(_);t=t.add(m.toField());const c=e.value.equals(63),f=c.toField().mul(e.value.sub(16)).add(u);return t=t.add(c.toField()),t.assertEquals(1,"Invalid character detected: The input contains a byte that is not present in the BASE64 index table!"),Vp.Unsafe.fromField(f)}function Rp(e){return Dp(e)}function Mp(e){return e.reduce(((e,t,a)=>{const n=1n<<BigInt(8*a);return e.add(t.value.mul(n))}),ui.from(0))}Rp.from=Pp.from,Rp.fromHex=Pp.fromHex,Rp.fromString=Pp.fromString;const jp={K:[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],H:[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]},$p={hash(e){let t=function(e){let t=Rp.from(e),a=8*t.length,n=Number(W(448n-(BigInt(a)+1n),512n)),r=a.toString(2),i=("1"+"0".repeat(n)+"0".repeat(64-r.length)+r).match(/.{1,8}/g).map((e=>Vp.from(BigInt("0b"+e)))),o=t.bytes.concat(i),p=[];for(let e=0;e<o.length;e+=4)p.push(Bp.Unsafe.fromField(Mp(o.slice(e,e+4).reverse())));return Op(p,16)}(e),a=$p.initialState;const n=t.length;for(let e=0;e<n;e++)a=Xp(a,Zp(t[e]));return Rp.from(a.map((e=>function(e,t=8){let a=_r.witness(_r.Array(Vp,t),(()=>{let a=e.toBigInt();return Array.from({length:t},((e,t)=>Vp.from(a>>BigInt(8*t)&0xffn)))}));return Mp(a).assertEquals(e),a}(e.value,4).reverse())).flat())},compression:Xp,createMessageSchedule:Zp,get initialState(){return jp.H.map((e=>Bp.from(e)))}};function Lp(e,t,a){let n=e.and(t).value,r=e.not().and(a).value,i=n.add(r).seal();return Bp.Unsafe.fromField(i)}function Hp(e,t,a){let n=e.value.add(t.value).add(a.value).seal(),r=e.xor(t).xor(a).value,i=n.sub(r).div(2).seal();return Bp.Unsafe.fromField(i)}function Kp(e){return Gp(e,[2,13,22])}function Jp(e){return Gp(e,[3,7,18],!0)}function Wp(e,t){return t.rotate(e,"right")}function Gp(e,t,a=!1){if(e.isConstant())return function(e,t,a=!1){let[n,r,i]=t,o=a?(p=n,e.rightShift(p)):Wp(n,e);var p;let s=Wp(r,e),d=Wp(i,e);return o.xor(s).xor(d)}(e,t,a);let[n,r,i]=t,o=e.value,p=n,s=r-n,d=i-r,l=32-i,[_,m,u,c]=Tn(4,(()=>{let e=o.toBigInt();return[Dn(e,0,p),Dn(e,n,s),Dn(e,r,d),Dn(e,i,l)]}));Rr(_),Rr(m),Rr(u),Rr(c);let f,h=u.add(c.mul(1<<d)).seal(),g=m.add(h.mul(1<<s)).seal();_.add(g.mul(1<<p)).assertEquals(o),a?(f=g,Rr(_.mul(1<<16-p).seal())):f=g.add(_.mul(1<<s+d+l)).seal();let w=_.add(m.mul(1<<p)).seal(),v=h.add(w.mul(1<<d+l)).seal(),y=w.add(u.mul(1<<p+s)).seal(),b=c.add(y.mul(1<<l)).seal();return Bp.Unsafe.fromField(f).xor(Bp.Unsafe.fromField(v)).xor(Bp.Unsafe.fromField(b))}function Xp(e,t){let a=e[0],n=e[1],r=e[2],i=e[3],o=e[4],p=e[5],s=e[6],d=e[7];for(let e=0;e<=63;e++){const _=d.value.add((l=o,Gp(l,[6,11,25])).value).add(Lp(o,p,s).value).add(jp.K[e]).add(t[e].value).seal(),m=Kp(a).value.add(Hp(a,n,r).value);d=s,s=p,p=o,o=Bp.Unsafe.fromField(fp(i.value.add(_),16).remainder),i=r,r=n,n=a,a=Bp.Unsafe.fromField(fp(m.add(_),16).remainder)}var l;return e[0]=e[0].addMod32(a),e[1]=e[1].addMod32(n),e[2]=e[2].addMod32(r),e[3]=e[3].addMod32(i),e[4]=e[4].addMod32(o),e[5]=e[5].addMod32(p),e[6]=e[6].addMod32(s),e[7]=e[7].addMod32(d),e}function Zp(e){const t=[];for(let a=0;a<=15;a++)t[a]=e[a];for(let e=16;e<=63;e++){let n=(a=t[e-2],Gp(a,[10,17,19],!0)).value.add(t[e-7].value).add(Jp(t[e-15]).value.add(t[e-16].value));t[e]=Bp.Unsafe.fromField(fp(n,16).remainder)}var a;return t}const Yp={rangeCheck64:e=>Ir(e),rangeCheck32:e=>Er(e),rangeCheckN:(e,t,a)=>zr(e,t,a),isDefinitelyInRangeN:(e,t)=>function(e,t){return Pn(e<=Y.sizeInBits,`bit length must be ${Y.sizeInBits} or less, got ${e}`),Pn(e>0,`bit length must be positive, got ${e}`),Pn(e%16==0,"`length` has to be a multiple of 16."),t.isConstant()?bn(t.toBigInt()<1n<<BigInt(e)):Ur(e,t).equals(t)}(e,t),rangeCheck16:e=>Rr(e),rangeCheck8:e=>Mr(e),rotate64:(e,t,a="left")=>yp(e,t,a),rotate32:(e,t,a="left")=>bp(e,t,a),xor:(e,t,a)=>wp(e,t,a),not:(e,t,a=!1)=>gp(e,t,a),leftShift64:(e,t)=>xp(e,t),leftShift32:(e,t)=>Tp(e,t),rightShift64:(e,t)=>Sp(e,t),and:(e,t,a)=>vp(e,t,a),multiRangeCheck(e){qr(e)},compactMultiRangeCheck:(e,t)=>Vr(e,t),rangeCheck3x12:(e,t,a)=>function(e,t,a){Nn.lookup(ui.from(1),e,ui.from(0),t,ui.from(0),a,ui.from(0))}(e,t,a),ForeignField:{add:(e,t,a)=>Jr.add(e,t,a),sub:(e,t,a)=>Jr.sub(e,t,a),neg:(e,t)=>Jr.negate(e,t),sum:(e,t,a)=>Jr.sum(e,t,a),mul:(e,t,a)=>Jr.mul(e,t,a),inv:(e,t)=>Jr.inv(e,t),div:(e,t,a)=>Jr.div(e,t,a),assertMul:(e,t,a,n)=>Jr.assertMul(e,t,a,n),Sum:e=>Jr.Sum(e),assertAlmostReduced(e,t,{skipMrc:a=!1}={}){Jr.assertAlmostReduced(e,t,a)},assertLessThan(e,t){Jr.assertLessThan(e,t)},assertLessThanOrEqual(e,t){Jr.assertLessThanOrEqual(e,t)}},Field3:ei,divMod32:fp,addMod32:hp,SHA256:$p};class Qp{static get Bigint(){return Pn(void 0!==this._Bigint,"ForeignField class not initialized."),this._Bigint}static get modulus(){return Pn(void 0!==this._modulus,"ForeignField class not initialized."),this._modulus}get modulus(){return this.constructor.modulus}static get sizeInBits(){return this.modulus.toString(2).length}get Constructor(){return this.constructor}static get Unreduced(){return Pn(void 0!==this._variants,"ForeignField class not initialized."),this._variants.unreduced}static get AlmostReduced(){return Pn(void 0!==this._variants,"ForeignField class not initialized."),this._variants.almostReduced}static get Canonical(){return Pn(void 0!==this._variants,"ForeignField class not initialized."),this._variants.canonical}constructor(e){const t=this.modulus;if(e instanceof Qp){if(e.modulus!==t)throw new Error(`ForeignField constructor: modulus mismatch. Expected ${t}, got ${e.modulus}. Please provide a value with the correct modulus. You can use 'Gadgets.ForeignField.assertLessThan()' to check it.`);this.value=e.value}else Array.isArray(e)?this.value=e:this.value=ei.from(W(BigInt(e),t))}static from(e){return e instanceof this?e:new this.Canonical(e)}isConstant(){return ei.isConstant(this.value)}toConstant(){let e=Sn.map(this.value,(e=>e.toConstant()));return new this.Constructor(e)}toBigInt(){return ei.toBigint(this.value)}assertAlmostReduced(){let[e]=this.Constructor.assertAlmostReduced(this);return e}static assertAlmostReduced(...e){return Yp.ForeignField.assertAlmostReduced(e.map((e=>e.value)),this.modulus,{skipMrc:!0}),Sn.map(e,this.AlmostReduced.unsafeFrom)}assertCanonical(){return this.assertLessThan(this.modulus),this.Constructor.Canonical.unsafeFrom(this)}add(e){return this.Constructor.sum([this,e],[1])}neg(){let e=Yp.ForeignField.neg(this.value,this.modulus);return new this.Constructor.AlmostReduced(e)}sub(e){return this.Constructor.sum([this,e],[-1])}static sum(e,t){const a=this.modulus;let n=e.map((e=>rs(e,a))),r=t.map((e=>1===e?1n:-1n)),i=Yp.ForeignField.sum(n,r,a);return new this.Unreduced(i)}assertEquals(e,t){const a=this.modulus;try{if(this.isConstant()&&os(e)){let t=this.toBigInt(),n=W(is(e),a);if(t!==n)throw Error(`ForeignField.assertEquals(): ${t} != ${n}`);return new this.Constructor.Canonical(this.value)}return _r.assertEqual(this.Constructor,this,new this.Constructor(e)),os(e)||e instanceof this.Constructor.Canonical?new this.Constructor.Canonical(this.value):e instanceof this.Constructor.AlmostReduced?new this.Constructor.AlmostReduced(this.value):this}catch(e){throw wi(e,t)}}assertLessThan(e,t){Pn(e>=0&&e<1n<<Ar,`ForeignField.assertLessThan(): expected c <= c < 2^264, got ${e}`);try{Yp.ForeignField.assertLessThan(this.value,is(e))}catch(e){throw wi(e,t)}}toBits(e){const t=this.Constructor.sizeInBits;void 0===e&&(e=t),vi("ForeignField.toBits()",e,t);let[a,n,r]=this.value,i=Number(Nr),o=a.toBits(Math.min(e,i));if((e-=i)<=0)return n.assertEquals(0),r.assertEquals(0),o;let p=n.toBits(Math.min(e,i));if((e-=i)<=0)return r.assertEquals(0),[...o,...p];let s=r.toBits(Math.min(e,i));return[...o,...p,...s]}static fromBits(e){vi("ForeignField.fromBits()",e.length,this.sizeInBits);let t=Number(Nr),a=ui.fromBits(e.slice(0*t,1*t)),n=ui.fromBits(e.slice(1*t,2*t)),r=ui.fromBits(e.slice(2*t,3*t));return new this.AlmostReduced([a,n,r])}static random(){return new this.Canonical(this.Bigint.random())}toFields(){return this.value}static check(e){throw Error("ForeignField.check() not implemented: must use a subclass")}static get provable(){return Pn(void 0!==this._provable,"ForeignField class not initialized."),this._provable}}Qp._Bigint=void 0,Qp._modulus=void 0,Qp._variants=void 0,Qp._provable=void 0;class es extends Qp{mul(e){const t=this.modulus;let a=Yp.ForeignField.mul(this.value,rs(e,t),t);return new this.Constructor.Unreduced(a)}inv(){const e=this.modulus;let t=Yp.ForeignField.inv(this.value,e);return new this.Constructor.AlmostReduced(t)}div(e){const t=this.modulus;let a=Yp.ForeignField.div(this.value,rs(e,t),t);return new this.Constructor.AlmostReduced(a)}}class ts extends Qp{constructor(){super(...arguments),this.type="Unreduced"}static get provable(){return Pn(void 0!==this._provable,"ForeignField class not initialized."),this._provable}static check(e){Yp.multiRangeCheck(e.value)}}ts._provable=void 0;class as extends es{constructor(e){super(e),this.type="AlmostReduced"}static get provable(){return Pn(void 0!==this._provable,"ForeignField class not initialized."),this._provable}static check(e){Yp.multiRangeCheck(e.value),e.assertAlmostReduced()}static unsafeFrom(e){return new this(e.value)}equals(e){return Jr.equals(this.value,BigInt(e),this.modulus)}}as._provable=void 0;class ns extends es{constructor(e){super(e),this.type="FullyReduced"}static get provable(){return Pn(void 0!==this._provable,"ForeignField class not initialized."),this._provable}static check(e){Yp.multiRangeCheck(e.value),e.assertCanonical()}static unsafeFrom(e){return new this(e.value)}equals(e){let[t,a,n]=this.value,[r,i,o]=rs(e,this.modulus),p=t.add(a.mul(1n<<Nr)).seal(),s=r.add(i.mul(1n<<Nr)).seal();return p.equals(s).and(n.equals(o))}}function rs(e,t){return e instanceof Qp?e.value:ei.from(W(BigInt(e),t))}function is(e){return e instanceof Qp?e.toBigInt():BigInt(e)}function os(e){return!(e instanceof Qp)||e.isConstant()}ns._provable=void 0;const ps=(BigInt(Y.sizeInBits-1)+3n*Nr)/2n,ss=1n<<ps;function ds(e){return{toFields:e=>e.value,toAuxiliary:()=>[],sizeInFields:()=>3,fromFields(t){let a=xn.fromArray(3,t);return new e(a)},check(t){e.check(t)},toValue:e=>e.toBigInt(),fromValue:t=>new e(t),toJSON:e=>e.toBigInt().toString(),fromJSON:t=>new e(t),empty:()=>new e(0n),toInput(e){let t=Number(Nr);return{packed:[[e.value[0],t],[e.value[1],t],[e.value[2],t]]}}}}class ls{static create(e,t){var a;let n=ar.get(e),r=t??(e=>ho.hashPacked(n,e));return(a=class extends ls{static empty(){let e=n.empty();return new this(r(e),Sr.from(e))}static get provable(){return Pn(void 0!==this._provable,"Hashed not initialized"),this._provable}})._innerProvable=n,a._provable=pr(a,{hash:Tr({empty:()=>r(n.empty())}),value:Sr}),a._hash=r,a}constructor(e,t){this.hash=e,this.value=t}static _hash(e){Pn(!1,"Hashed not initialized")}static hash(e,t){return t??=this._hash(e),new this(t,Sr.witness((()=>_r.toConstant(this.innerProvable,e))))}unhash(){let e=_r.witness(this.Constructor.innerProvable,(()=>this.value.get())),t=this.Constructor._hash(e);return this.hash.assertEquals(t),e}toFields(){return[this.hash]}get Constructor(){return this.constructor}static get innerProvable(){return Pn(void 0!==this._innerProvable,"Hashed not initialized"),this._innerProvable}}const _s={from:({x:e,y:t})=>({x:ei.from(e),y:ei.from(t)}),toBigint:({x:e,y:t})=>({x:ei.toBigint(e),y:ei.toBigint(t),infinity:!1}),isConstant:e=>_r.isConstant(_s,e),random:e=>_s.from(function(e){return function(e,t){const a=t.Field;let n;for(;void 0===n;){e=a.add(e,1n);let r=a.mul(a.square(e),e),i=a.add(r,a.mul(t.a,e)+t.b);n=a.sqrt(i)}let r={x:e,y:n,infinity:!1};return t.hasCofactor&&(r=t.scale(r,t.cofactor)),r}(e.Field.random(),e)}(e)),provable:rr({x:ei,y:ei})},ms={from:({r:e,s:t})=>({r:ei.from(e),s:ei.from(t)}),toBigint:({r:e,s:t})=>({r:ei.toBigint(e),s:ei.toBigint(t)}),isConstant:e=>_r.isConstant(ms,e),fromHex(e){let t=e.slice(0,2),a=e.slice(2,130);if("0x"!==t||a.length<128)throw Error("Signature.fromHex(): Invalid signature, expected hex string 0x... of length at least 130.");let n=BigInt(`0x${a.slice(0,64)}`),r=BigInt(`0x${a.slice(64)}`);return ms.from({r:n,s:r})},provable:rr({r:ei,s:ei})};Rp(32),Rp(48),Rp(64),function(e){Pn(e>0n,`ForeignField: modulus must be positive, got ${e}`),Pn(e<ss,`ForeignField: modulus exceeds the max supported size of 2^${ps}`);let t=ee(e);class a extends ts{}a._Bigint=t,a._modulus=e,a._provable=ds(a),a.from=Qp.from.bind(a),a.sum=Qp.sum.bind(a),a.fromBits=Qp.fromBits.bind(a);class n extends as{}n._Bigint=t,n._modulus=e,n._provable=ds(n),n.from=Qp.from.bind(n),n.sum=Qp.sum.bind(n),n.fromBits=Qp.fromBits.bind(n),n.unsafeFrom=as.unsafeFrom.bind(n);class r extends ns{}r._Bigint=t,r._modulus=e,r._provable=ds(r),r.from=Qp.from.bind(r),r.sum=Qp.sum.bind(r),r.fromBits=Qp.fromBits.bind(r),r.unsafeFrom=ns.unsafeFrom.bind(r);let i={unreduced:a,almostReduced:n,canonical:r};a._variants=i,n._variants=i,r._variants=i}(Q.modulus),ho.hash,Yp.SHA256.hash;var us=a(493);const cs=ua(),fs=oo(La,_o);let{hashWithPrefix:hs}=fs;function gs({fields:e=[],packed:t=[]}){if(0===t.length)return e;let a=[],n=0n,r=0;for(let[e,i]of t)r+=i,r<255?n=n*(1n<<BigInt(i))+e:(a.push(n),r=i,n=e);return a.push(n),e.concat(a)}oo(La,mo);const ws=e=>({fields:[],bits:e}),vs={toString:e=>"string"==typeof e?e:e.custom},ys=0x01n,bs=0x00n,ks=ha(ga({r:La,s:Di},["r","s"]),1),Ss={...ks,...Ii(ks,u),toJSON:({r:e,s:t})=>({field:La.toJSON(e),scalar:Di.toJSON(t)}),fromJSON:({field:e,scalar:t})=>({r:La.fromJSON(e),s:Di.fromJSON(t)}),dummy:()=>({r:La(1),s:Di(1)})};function xs(e,t,a){return function(e,t,a){let n=Ai.scale(Ai.generatorMina,t),r=Ts(e,n,t,a);if(Di.equal(r,0n))throw Error("sign: derived nonce is 0");let{x:i,y:o}=Ai.scale(Ai.generatorMina,r),p=La.isEven(o)?r:Di.negate(r),s=Es(e,n,i,a);return{r:i,s:Di.add(p,Di.mul(s,t))}}({fields:[e]},t,a)}function Ts(e,t,a,n){let{x:r,y:i}=t,o=La(a),p=function(e){let t=vs.toString(e);switch(t){case"mainnet":return[ys,8];case"testnet":return[bs,8];default:return function(e){let t="";for(let a=e.length-1;a>=0;a--){let n=e.charCodeAt(a),r=Is(n);t=t.concat(r)}return[BigInt("0b"+t),t.length]}(t)}}(n),s=Ta(gs(cs.append(e,{fields:[r,i,o],packed:[p]})).map(La.toBits).flat()),d=(0,us.blake2b)(Uint8Array.from(s),void 0,32);return d[d.length-1]&=63,Di.fromBytes([...d])}function Es(e,t,a,n){let{x:r,y:i}=t,o=cs.append(e,{fields:[r,i,a]});return hs(Cs(n),gs(o))}const Is=e=>e.toString(2).padStart(8,"0");const Ns=e=>{let t=e.length;return t<=20?e+"*".repeat(20-t):e.substring(0,20)},Cs=e=>{let t=vs.toString(e);switch(t){case"mainnet":return r.signatureMainnet;case"testnet":return r.signatureTestnet;default:return Ns(t+"Signature")}},As=e=>{let t=vs.toString(e);switch(t){case"mainnet":return r.zkappBodyMainnet;case"testnet":return r.zkappBodyTestnet;default:return Ns(t+"ZkappBody")}};class Bs extends Ip{constructor(e){super(e)}static random(){return new Bs(Li.random())}static randomKeypair(){let e=Bs.random();return{privateKey:e,publicKey:e.toPublicKey()}}static fromBits(e){return new Bs(Li.fromBits(e))}toBigInt(){return this.s.toBigInt()}static fromBigInt(e){return new Bs(Li.from(e))}toPublicKey(){return Fs.fromPrivateKey(this)}static fromBase58(e){let t=Ri.fromBase58(e);return new Bs(Li.from(t))}toBase58(){return Bs.toBase58(this)}static toBase58(e){return Ri.toBase58(e.s.toBigInt())}static toValue(e){return e.toBigInt()}static fromValue(e){return e instanceof Bs?e:Bs.fromBigInt(e)}}vr([Np,yr("design:type",Li)],Bs.prototype,"s",void 0);class Fs extends Ip{toGroup(){let{x:e,isOdd:t}=this,a=e.square().mul(e).add(5).sqrt(),n=a.isOdd().equals(t).toField().mul(2).sub(1);return a=a.mul(n),new eo({x:e,y:a})}static fromGroup({x:e,y:t}){return Fs.fromObject({x:e,isOdd:t.isOdd()})}static fromPrivateKey({s:e}){return Fs.fromGroup(eo.generator.scale(e))}static from(e){return Fs.fromObject({x:Yi.from(e.x),isOdd:Qi(e.isOdd)})}static empty(){return Fs.from({x:0n,isOdd:!1})}isEmpty(){return this.x.equals(0)}static fromBase58(e){let{x:t,isOdd:a}=qi.fromBase58(e);return Fs.from({x:Yi(t),isOdd:Qi(!!a)})}toBase58(){return Fs.toBase58(this)}static toBase58({x:e,isOdd:t}){return e=bi(e,"toBase58","pk","public key"),qi.toBase58({x:e.toBigInt(),isOdd:t.toBoolean()})}static toJSON(e){return e.toBase58()}static fromJSON(e){return Fs.fromBase58(e)}static toValue({x:e,isOdd:t}){return{x:e.toBigInt(),isOdd:t.toBoolean()}}static fromValue({x:e,isOdd:t}){return Fs.from({x:Yi.from(e),isOdd:Qi(t)})}}vr([Np,yr("design:type",Yi)],Fs.prototype,"x",void 0),vr([Np,yr("design:type",Qi)],Fs.prototype,"isOdd",void 0);class qs extends Ip{static create(e,t){let a=Fs.fromPrivateKey(e).toGroup(),n=e.s,r=Li.from(Ts({fields:t.map((e=>e.toBigInt()))},{x:a.x.toBigInt(),y:a.y.toBigInt()},n.toBigInt(),"testnet")),{x:i,y:o}=eo.generator.scale(r),p=o.isOdd().toBoolean()?r.neg():r,s=bo(Cs("testnet"),t.concat([a.x,a.y,i])),d=Li.fromField(s).mul(n).add(p);return new qs(i,d)}verify(e,t){let a=e.toGroup(),n=bo(Cs("testnet"),t.concat([a.x,a.y,this.r])),r=a.scale(n).neg().add(eo.generator.scale(this.s));return r.x.equals(this.r).and(r.y.isEven())}static fromBase58(e){let{r:t,s:a}=Ss.fromBase58(e);return qs.fromObject({r:Yi(t),s:Li.from(a)})}toBase58(){let e=this.r.toBigInt(),t=this.s.toBigInt();return Ss.toBase58({r:e,s:t})}}function Vs({Field:e,Poseidon:t}){function a(a){return t.update([e(0),e(0),e(0)],[xa(e,a)])}function n(e,n){let r=a(e);return t.update(r,n)[0]}function i(e){return a(e)[0]}const o={empty:()=>({hash:i("MinaZkappEventsEmpty"),data:[]}),pushEvent(e,t){let a=n(r.event,t);return{hash:n(r.events,[e.hash,a]),data:[t,...e.data]}},fromList:e=>[...e].reverse().reduce(o.pushEvent,o.empty()),hash:e=>o.fromList(e).hash},p={...o,...Os({empty:o.empty,toValue:t=>t.map((t=>t.map((t=>e.toBigint(t))))),fromValue:t=>t.map((t=>t.map((t=>e(t))))),toJSON:t=>t.map((t=>t.map((t=>e.toJSON(t))))),fromJSON(t){let a=t.map((t=>t.map((t=>e.fromJSON(t)))));return{data:a,hash:o.hash(a)}},Field:e})},s={empty:()=>({hash:i("MinaZkappActionsEmpty"),data:[]}),pushEvent(e,t){let a=n(r.event,t);return{hash:n(r.sequenceEvents,[e.hash,a]),data:[t,...e.data]}},fromList:e=>[...e].reverse().reduce(s.pushEvent,s.empty()),hash(e){return this.fromList(e).hash},emptyActionState:()=>i("MinaZkappActionStateEmptyElt"),updateSequenceState:(e,t)=>n(r.sequenceEvents,[e,t])};return{Events:p,Actions:{...s,...Os({empty:s.empty,toValue:t=>t.map((t=>t.map((t=>e.toBigint(t))))),fromValue:t=>t.map((t=>t.map((t=>e(t))))),toJSON:t=>t.map((t=>t.map((t=>e.toJSON(t))))),fromJSON(t){let a=t.map((t=>t.map((t=>e.fromJSON(t)))));return{data:a,hash:s.hash(a)}},Field:e})}}}function Os({empty:e,toValue:t,fromValue:a,toJSON:n,fromJSON:r,Field:i}){return{empty:e,sizeInFields:()=>1,toFields:({hash:e})=>[e],toAuxiliary:t=>[t?.data??e().data],fromFields:([e],[t])=>({data:t,hash:e}),toValue:({data:e,hash:a})=>({data:t(e),hash:i.toBigint(a)}),fromValue:({data:e,hash:t})=>({data:a(e),hash:i(t)}),toJSON:({data:e})=>n(e),fromJSON:e=>r(e),check(){},toInput:({hash:e})=>({fields:[e]})}}vr([Np,yr("design:type",Yi)],qs.prototype,"r",void 0),vr([Np,yr("design:type",Li)],qs.prototype,"s",void 0);function Ps(e,t,a){return{...e,empty:void 0!==a?()=>a:e.empty,toJSON:e=>t.toBase58(e),fromJSON:e=>t.fromBase58(e)}}function Ds(e,t){return{...e,toInput:({field:e})=>({packed:[[e,48]]}),toJSON:({symbol:e})=>e,fromJSON(e){let a=Fa(e);if(a>6)throw Error(`Token symbol ${e} should be a maximum of 6 bytes, but is ${a}`);return{symbol:e,field:xa(t,e)}}}}function Us(e,t){return{...e,empty:()=>({constant:t(!0),signatureNecessary:t(!1),signatureSufficient:t(!0)}),toJSON(e){switch(`${Number(t.toJSON(e.constant))}${Number(t.toJSON(e.signatureNecessary))}${Number(t.toJSON(e.signatureSufficient))}`){case"110":return"Impossible";case"101":return"None";case"000":return"Proof";case"011":return"Signature";case"001":return"Either";default:throw Error("Unexpected permission")}},fromJSON(e){let a={Impossible:"110",None:"101",Proof:"000",Signature:"011",Either:"001"}[e];if(void 0===a)throw Error("Unexpected permission");let[n,r,i]=a.split("").map((e=>t(!!Number(e))));return{constant:n,signatureNecessary:r,signatureSufficient:i}}}}function zs(e,t,a){function n(n){let i=Ea(Aa(n));i.push(!0);let o={packed:i.map((t=>[e(Number(t)),1]))},p=a(o);return t.hashWithPrefix(r.zkappUri,p)}return Os({empty:()=>({data:"",hash:t.hashWithPrefix(r.zkappUri,[e(0),e(0)])}),toValue:e=>e,fromValue:e=>e,toJSON:e=>e,fromJSON:e=>({data:e,hash:n(e)}),Field:e})}const{TokenId:Rs,StateHash:Ms,TokenSymbol:js,AuthRequired:$s,ZkappUri:Ls}=function({Field:e,Bool:t,HashHelpers:a,packToFields:n}){let{provable:r}=_a();const i=Ci(e),o=r(e);return{TokenId:Ps(o,i.TokenId,e(1)),StateHash:Ps(o,i.StateHash),TokenSymbol:Ds(r({field:e,symbol:String}),e),AuthRequired:Us(r({constant:t,signatureNecessary:t,signatureSufficient:t}),t),ZkappUri:zs(e,a,n)}}({Field:Yi,Bool:Qi,HashHelpers:wo,packToFields:So}),{Events:Hs,Actions:Ks}=Vs({Field:Yi,Poseidon:ho}),Js={...rr(Yi),empty:Ks.emptyActionState},Ws={...rr(Yi),empty:()=>Yi(c.dummyVerificationKeyHash)},Gs={...rr(Yi),empty:()=>yo("CodaReceiptEmpty")},Xs={...rr(Bp),empty:()=>Bp.from(3)},Zs=qp,Ys={...rr({parentsOwnToken:Qi,inheritFromParent:Qi})};function Qs(e,t){function a(a,n,r){return ed(e,t,a,n,r)}function n(e,t){return a({map:(e,t)=>e.toJSON(t),reduceArray:e=>e,reduceObject:(e,t)=>t,reduceFlaggedOption:({isSome:e,value:t})=>e?t:null,reduceOrUndefined:e=>e??null},e,t)}function r(a,n){let{checkedTypeName:o}=a;if(o)return t[o].fromJSON(n);if("array"===a.type){let e=a;return n.map((t=>r(e.inner,t)))}if("option"===a.type){let t=a;switch(t.optionType){case"closedInterval":case"flaggedOption":{let a,o=e.Bool.fromJSON(null!==n);if(null!==n)a=r(t.inner,n);else if(a=i(t.inner),"closedInterval"===t.optionType){let n=t.inner.entries.lower,r=e[n.type];a.lower=r.fromJSON(t.rangeMin),a.upper=r.fromJSON(t.rangeMax)}return{isSome:o,value:a}}case"orUndefined":return null===n?void 0:r(t.inner,n);default:throw Error("bug")}}if("object"===a.type){let{keys:e,entries:t}=a,i={};for(let a=0;a<e.length;a++){let o=t[e[a]];i[e[a]]=r(o,n[e[a]])}return i}return ro.has(a.type)?io[a.type].fromJSON(n):e[a.type].fromJSON(n)}function i(t){return a({map:e=>e.empty(),reduceArray:e=>e,reduceObject:(e,t)=>t,reduceFlaggedOption({isSome:t,value:a},n){if("closedInterval"===n.optionType){let t=n.inner.entries.lower,r=e[t.type];a.lower=r.fromJSON(n.rangeMin),a.upper=r.fromJSON(n.rangeMax)}return{isSome:t,value:a}},reduceOrUndefined(){}},t,void 0)}function o(e,t){return a({map:(e,t)=>e.toInput(t),reduceArray(e){let t={fields:[],packed:[]};for(let{fields:a,packed:n}of e)a&&t.fields.push(...a),n&&t.packed.push(...n);return t},reduceObject(e,t){let a={fields:[],packed:[]};for(let n of e){let{fields:e,packed:r}=t[n];e&&a.fields.push(...e),r&&a.packed.push(...r)}return a},reduceFlaggedOption:({isSome:e,value:t})=>({fields:t.fields,packed:e.packed.concat(t.packed??[])}),reduceOrUndefined:e=>({})},e,t)}return e.Field,{signableFromLayout:function(e){return{toJSON:t=>n(e,t),fromJSON:t=>r(e,t),toInput:t=>o(e,t),empty:()=>i(e)}},toInput:o,toJSON:n,fromJSON:r,empty:i,toJSONEssential:function(e,t){return a({map:(e,t)=>e.toJSON(t),reduceArray:e=>0===e.length||e.every((e=>null===e))?null:e,reduceObject(e,t){for(let e in t)null===t[e]&&delete t[e];return 0===Object.keys(t).length?null:t},reduceFlaggedOption:({isSome:e,value:t})=>e?t:null,reduceOrUndefined:e=>e??null},e,t)}}}function ed(e,t,a,n,r){let{checkedTypeName:i}=n;if(i)return a.map(t[i],r,i);if("array"===n.type){let i=n,o=r;null!==i.staticLength&&void 0===o&&(o=Array(i.staticLength).fill(void 0));let p=o?.map((n=>ed(e,t,a,i.inner,n)))??[];return a.reduceArray(p,i)}if("option"===n.type){let{optionType:i,inner:o}=n;switch(i){case"closedInterval":case"flaggedOption":let i=r;return a.reduceFlaggedOption({isSome:a.map(e.Bool,i?.isSome,"Bool"),value:ed(e,t,a,o,i?.value)},n);case"orUndefined":let p=void 0===r?void 0:ed(e,t,a,o,r);return a.reduceOrUndefined(p,o);default:throw Error("bug")}}if("object"===n.type){let{keys:i,entries:o}=n,p=r,s={};return i.forEach((n=>{s[n]=ed(e,t,a,o[n],p?.[n])})),a.reduceObject(i,s)}return ro.has(n.type)?a.map(io[n.type],r,n.type):a.map(e[n.type],r,n.type)}let td={ZkappCommand:{type:"object",name:"ZkappCommand",docs:null,keys:["feePayer","accountUpdates","memo"],entries:{feePayer:{type:"object",name:"ZkappFeePayer",docs:null,keys:["body","authorization"],entries:{body:{type:"object",name:"FeePayerBody",docs:null,keys:["publicKey","fee","validUntil","nonce"],entries:{publicKey:{type:"PublicKey"},fee:{type:"UInt64"},validUntil:{type:"option",optionType:"orUndefined",inner:{type:"UInt32"}},nonce:{type:"UInt32"}},docEntries:{publicKey:null,fee:null,validUntil:null,nonce:null}},authorization:{type:"string"}},docEntries:{body:null,authorization:null}},accountUpdates:{type:"array",inner:{type:"object",name:"ZkappAccountUpdate",docs:"An account update in a zkApp transaction",keys:["body","authorization"],entries:{body:{type:"object",name:"AccountUpdateBody",docs:null,keys:["publicKey","tokenId","update","balanceChange","incrementNonce","events","actions","callData","callDepth","preconditions","useFullCommitment","implicitAccountCreationFee","mayUseToken","authorizationKind"],entries:{publicKey:{type:"PublicKey"},tokenId:{type:"TokenId"},update:{type:"object",name:"AccountUpdateModification",docs:null,keys:["appState","delegate","verificationKey","permissions","zkappUri","tokenSymbol","timing","votingFor"],entries:{appState:{type:"array",inner:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},staticLength:8},delegate:{type:"option",optionType:"flaggedOption",inner:{type:"PublicKey"}},verificationKey:{type:"option",optionType:"flaggedOption",inner:{type:"object",name:"VerificationKeyWithHash",docs:null,keys:["data","hash"],entries:{data:{type:"string"},hash:{type:"Field"}},docEntries:{data:null,hash:null}}},permissions:{type:"option",optionType:"flaggedOption",inner:{type:"object",name:"Permissions",docs:null,keys:["editState","access","send","receive","setDelegate","setPermissions","setVerificationKey","setZkappUri","editActionState","setTokenSymbol","incrementNonce","setVotingFor","setTiming"],entries:{editState:{type:"AuthRequired"},access:{type:"AuthRequired"},send:{type:"AuthRequired"},receive:{type:"AuthRequired"},setDelegate:{type:"AuthRequired"},setPermissions:{type:"AuthRequired"},setVerificationKey:{type:"object",name:"VerificationKeyPermission",docs:null,keys:["auth","txnVersion"],entries:{auth:{type:"AuthRequired"},txnVersion:{type:"UInt32",checkedType:{type:"UInt32"},checkedTypeName:"TransactionVersion"}},docEntries:{auth:null,txnVersion:null}},setZkappUri:{type:"AuthRequired"},editActionState:{type:"AuthRequired"},setTokenSymbol:{type:"AuthRequired"},incrementNonce:{type:"AuthRequired"},setVotingFor:{type:"AuthRequired"},setTiming:{type:"AuthRequired"}},docEntries:{editState:null,access:null,send:null,receive:null,setDelegate:null,setPermissions:null,setVerificationKey:null,setZkappUri:null,editActionState:null,setTokenSymbol:null,incrementNonce:null,setVotingFor:null,setTiming:null}}},zkappUri:{type:"option",optionType:"flaggedOption",inner:{type:"string",checkedType:{type:"object",name:"Events",docs:null,keys:["data","hash"],entries:{data:{type:"string"},hash:{type:"Field"}},docEntries:{data:null,hash:null}},checkedTypeName:"ZkappUri"}},tokenSymbol:{type:"option",optionType:"flaggedOption",inner:{type:"string",checkedType:{type:"object",name:"Anonymous",docs:null,keys:["symbol","field"],entries:{symbol:{type:"string"},field:{type:"Field"}},docEntries:{symbol:"",field:""}},checkedTypeName:"TokenSymbol"}},timing:{type:"option",optionType:"flaggedOption",inner:{type:"object",name:"Timing",docs:null,keys:["initialMinimumBalance","cliffTime","cliffAmount","vestingPeriod","vestingIncrement"],entries:{initialMinimumBalance:{type:"UInt64"},cliffTime:{type:"UInt32"},cliffAmount:{type:"UInt64"},vestingPeriod:{type:"UInt32"},vestingIncrement:{type:"UInt64"}},docEntries:{initialMinimumBalance:null,cliffTime:null,cliffAmount:null,vestingPeriod:null,vestingIncrement:null}}},votingFor:{type:"option",optionType:"flaggedOption",inner:{type:"Field",checkedType:{type:"Field"},checkedTypeName:"StateHash"}}},docEntries:{appState:null,delegate:null,verificationKey:null,permissions:null,zkappUri:null,tokenSymbol:null,timing:null,votingFor:null}},balanceChange:{type:"object",name:"BalanceChange",docs:null,keys:["magnitude","sgn"],entries:{magnitude:{type:"UInt64"},sgn:{type:"Sign"}},docEntries:{magnitude:null,sgn:null},checkedType:{type:"BalanceChange"},checkedTypeName:"BalanceChange"},incrementNonce:{type:"Bool"},events:{type:"array",inner:{type:"array",inner:{type:"Field"},staticLength:null},staticLength:null,checkedType:{type:"object",name:"Events",docs:null,keys:["data","hash"],entries:{data:{type:"array",inner:{type:"array",inner:{type:"Field"},staticLength:null},staticLength:null},hash:{type:"Field"}},docEntries:{data:null,hash:null}},checkedTypeName:"Events"},actions:{type:"array",inner:{type:"array",inner:{type:"Field"},staticLength:null},staticLength:null,checkedType:{type:"object",name:"Events",docs:null,keys:["data","hash"],entries:{data:{type:"array",inner:{type:"array",inner:{type:"Field"},staticLength:null},staticLength:null},hash:{type:"Field"}},docEntries:{data:null,hash:null}},checkedTypeName:"Actions"},callData:{type:"Field"},callDepth:{type:"number"},preconditions:{type:"object",name:"Preconditions",docs:null,keys:["network","account","validWhile"],entries:{network:{type:"object",name:"NetworkPrecondition",docs:null,keys:["snarkedLedgerHash","blockchainLength","minWindowDensity","totalCurrency","globalSlotSinceGenesis","stakingEpochData","nextEpochData"],entries:{snarkedLedgerHash:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},blockchainLength:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"LengthInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}},minWindowDensity:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"LengthInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}},totalCurrency:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"18446744073709551615",inner:{type:"object",name:"CurrencyAmountInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt64"},upper:{type:"UInt64"}},docEntries:{lower:null,upper:null}}},globalSlotSinceGenesis:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"GlobalSlotSinceGenesisInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}},stakingEpochData:{type:"object",name:"EpochDataPrecondition",docs:null,keys:["ledger","seed","startCheckpoint","lockCheckpoint","epochLength"],entries:{ledger:{type:"object",name:"EpochLedgerPrecondition",docs:null,keys:["hash","totalCurrency"],entries:{hash:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},totalCurrency:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"18446744073709551615",inner:{type:"object",name:"CurrencyAmountInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt64"},upper:{type:"UInt64"}},docEntries:{lower:null,upper:null}}}},docEntries:{hash:null,totalCurrency:null}},seed:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},startCheckpoint:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},lockCheckpoint:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},epochLength:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"LengthInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}}},docEntries:{ledger:null,seed:null,startCheckpoint:null,lockCheckpoint:null,epochLength:null}},nextEpochData:{type:"object",name:"EpochDataPrecondition",docs:null,keys:["ledger","seed","startCheckpoint","lockCheckpoint","epochLength"],entries:{ledger:{type:"object",name:"EpochLedgerPrecondition",docs:null,keys:["hash","totalCurrency"],entries:{hash:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},totalCurrency:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"18446744073709551615",inner:{type:"object",name:"CurrencyAmountInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt64"},upper:{type:"UInt64"}},docEntries:{lower:null,upper:null}}}},docEntries:{hash:null,totalCurrency:null}},seed:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},startCheckpoint:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},lockCheckpoint:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},epochLength:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"LengthInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}}},docEntries:{ledger:null,seed:null,startCheckpoint:null,lockCheckpoint:null,epochLength:null}}},docEntries:{snarkedLedgerHash:null,blockchainLength:null,minWindowDensity:null,totalCurrency:null,globalSlotSinceGenesis:null,stakingEpochData:null,nextEpochData:null}},account:{type:"object",name:"AccountPrecondition",docs:null,keys:["balance","nonce","receiptChainHash","delegate","state","actionState","provedState","isNew"],entries:{balance:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"18446744073709551615",inner:{type:"object",name:"BalanceInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt64"},upper:{type:"UInt64"}},docEntries:{lower:null,upper:null}}},nonce:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"NonceInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}},receiptChainHash:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},delegate:{type:"option",optionType:"flaggedOption",inner:{type:"PublicKey"}},state:{type:"array",inner:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},staticLength:8},actionState:{type:"option",optionType:"flaggedOption",inner:{type:"Field",checkedType:{type:"Field"},checkedTypeName:"ActionState"}},provedState:{type:"option",optionType:"flaggedOption",inner:{type:"Bool"}},isNew:{type:"option",optionType:"flaggedOption",inner:{type:"Bool"}}},docEntries:{balance:null,nonce:null,receiptChainHash:null,delegate:null,state:null,actionState:null,provedState:null,isNew:null}},validWhile:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"GlobalSlotSinceGenesisInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}}},docEntries:{network:null,account:null,validWhile:null}},useFullCommitment:{type:"Bool"},implicitAccountCreationFee:{type:"Bool"},mayUseToken:{type:"object",name:"MayUseToken",docs:null,keys:["parentsOwnToken","inheritFromParent"],entries:{parentsOwnToken:{type:"Bool"},inheritFromParent:{type:"Bool"}},docEntries:{parentsOwnToken:null,inheritFromParent:null},checkedType:{type:"object",name:"Anonymous",docs:null,keys:["parentsOwnToken","inheritFromParent"],entries:{parentsOwnToken:{type:"Bool"},inheritFromParent:{type:"Bool"}},docEntries:{parentsOwnToken:"",inheritFromParent:""}},checkedTypeName:"MayUseToken"},authorizationKind:{type:"object",name:"AuthorizationKindStructured",docs:null,keys:["isSigned","isProved","verificationKeyHash"],entries:{isSigned:{type:"Bool"},isProved:{type:"Bool"},verificationKeyHash:{type:"Field",checkedType:{type:"Field"},checkedTypeName:"VerificationKeyHash"}},docEntries:{isSigned:null,isProved:null,verificationKeyHash:null}}},docEntries:{publicKey:null,tokenId:null,update:null,balanceChange:null,incrementNonce:null,events:null,actions:null,callData:null,callDepth:null,preconditions:null,useFullCommitment:null,implicitAccountCreationFee:null,mayUseToken:null,authorizationKind:null}},authorization:{type:"object",name:"Control",docs:null,keys:["proof","signature"],entries:{proof:{type:"option",optionType:"orUndefined",inner:{type:"string"}},signature:{type:"option",optionType:"orUndefined",inner:{type:"string"}}},docEntries:{proof:null,signature:null}}},docEntries:{body:null,authorization:null}},staticLength:null},memo:{type:"string"}},docEntries:{feePayer:null,accountUpdates:null,memo:null}},AccountUpdate:{type:"object",name:"ZkappAccountUpdate",docs:"An account update in a zkApp transaction",keys:["body","authorization"],entries:{body:{type:"object",name:"AccountUpdateBody",docs:null,keys:["publicKey","tokenId","update","balanceChange","incrementNonce","events","actions","callData","callDepth","preconditions","useFullCommitment","implicitAccountCreationFee","mayUseToken","authorizationKind"],entries:{publicKey:{type:"PublicKey"},tokenId:{type:"TokenId"},update:{type:"object",name:"AccountUpdateModification",docs:null,keys:["appState","delegate","verificationKey","permissions","zkappUri","tokenSymbol","timing","votingFor"],entries:{appState:{type:"array",inner:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},staticLength:8},delegate:{type:"option",optionType:"flaggedOption",inner:{type:"PublicKey"}},verificationKey:{type:"option",optionType:"flaggedOption",inner:{type:"object",name:"VerificationKeyWithHash",docs:null,keys:["data","hash"],entries:{data:{type:"string"},hash:{type:"Field"}},docEntries:{data:null,hash:null}}},permissions:{type:"option",optionType:"flaggedOption",inner:{type:"object",name:"Permissions",docs:null,keys:["editState","access","send","receive","setDelegate","setPermissions","setVerificationKey","setZkappUri","editActionState","setTokenSymbol","incrementNonce","setVotingFor","setTiming"],entries:{editState:{type:"AuthRequired"},access:{type:"AuthRequired"},send:{type:"AuthRequired"},receive:{type:"AuthRequired"},setDelegate:{type:"AuthRequired"},setPermissions:{type:"AuthRequired"},setVerificationKey:{type:"object",name:"VerificationKeyPermission",docs:null,keys:["auth","txnVersion"],entries:{auth:{type:"AuthRequired"},txnVersion:{type:"UInt32",checkedType:{type:"UInt32"},checkedTypeName:"TransactionVersion"}},docEntries:{auth:null,txnVersion:null}},setZkappUri:{type:"AuthRequired"},editActionState:{type:"AuthRequired"},setTokenSymbol:{type:"AuthRequired"},incrementNonce:{type:"AuthRequired"},setVotingFor:{type:"AuthRequired"},setTiming:{type:"AuthRequired"}},docEntries:{editState:null,access:null,send:null,receive:null,setDelegate:null,setPermissions:null,setVerificationKey:null,setZkappUri:null,editActionState:null,setTokenSymbol:null,incrementNonce:null,setVotingFor:null,setTiming:null}}},zkappUri:{type:"option",optionType:"flaggedOption",inner:{type:"string",checkedType:{type:"object",name:"Events",docs:null,keys:["data","hash"],entries:{data:{type:"string"},hash:{type:"Field"}},docEntries:{data:null,hash:null}},checkedTypeName:"ZkappUri"}},tokenSymbol:{type:"option",optionType:"flaggedOption",inner:{type:"string",checkedType:{type:"object",name:"Anonymous",docs:null,keys:["symbol","field"],entries:{symbol:{type:"string"},field:{type:"Field"}},docEntries:{symbol:"",field:""}},checkedTypeName:"TokenSymbol"}},timing:{type:"option",optionType:"flaggedOption",inner:{type:"object",name:"Timing",docs:null,keys:["initialMinimumBalance","cliffTime","cliffAmount","vestingPeriod","vestingIncrement"],entries:{initialMinimumBalance:{type:"UInt64"},cliffTime:{type:"UInt32"},cliffAmount:{type:"UInt64"},vestingPeriod:{type:"UInt32"},vestingIncrement:{type:"UInt64"}},docEntries:{initialMinimumBalance:null,cliffTime:null,cliffAmount:null,vestingPeriod:null,vestingIncrement:null}}},votingFor:{type:"option",optionType:"flaggedOption",inner:{type:"Field",checkedType:{type:"Field"},checkedTypeName:"StateHash"}}},docEntries:{appState:null,delegate:null,verificationKey:null,permissions:null,zkappUri:null,tokenSymbol:null,timing:null,votingFor:null}},balanceChange:{type:"object",name:"BalanceChange",docs:null,keys:["magnitude","sgn"],entries:{magnitude:{type:"UInt64"},sgn:{type:"Sign"}},docEntries:{magnitude:null,sgn:null},checkedType:{type:"BalanceChange"},checkedTypeName:"BalanceChange"},incrementNonce:{type:"Bool"},events:{type:"array",inner:{type:"array",inner:{type:"Field"},staticLength:null},staticLength:null,checkedType:{type:"object",name:"Events",docs:null,keys:["data","hash"],entries:{data:{type:"array",inner:{type:"array",inner:{type:"Field"},staticLength:null},staticLength:null},hash:{type:"Field"}},docEntries:{data:null,hash:null}},checkedTypeName:"Events"},actions:{type:"array",inner:{type:"array",inner:{type:"Field"},staticLength:null},staticLength:null,checkedType:{type:"object",name:"Events",docs:null,keys:["data","hash"],entries:{data:{type:"array",inner:{type:"array",inner:{type:"Field"},staticLength:null},staticLength:null},hash:{type:"Field"}},docEntries:{data:null,hash:null}},checkedTypeName:"Actions"},callData:{type:"Field"},callDepth:{type:"number"},preconditions:{type:"object",name:"Preconditions",docs:null,keys:["network","account","validWhile"],entries:{network:{type:"object",name:"NetworkPrecondition",docs:null,keys:["snarkedLedgerHash","blockchainLength","minWindowDensity","totalCurrency","globalSlotSinceGenesis","stakingEpochData","nextEpochData"],entries:{snarkedLedgerHash:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},blockchainLength:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"LengthInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}},minWindowDensity:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"LengthInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}},totalCurrency:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"18446744073709551615",inner:{type:"object",name:"CurrencyAmountInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt64"},upper:{type:"UInt64"}},docEntries:{lower:null,upper:null}}},globalSlotSinceGenesis:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"GlobalSlotSinceGenesisInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}},stakingEpochData:{type:"object",name:"EpochDataPrecondition",docs:null,keys:["ledger","seed","startCheckpoint","lockCheckpoint","epochLength"],entries:{ledger:{type:"object",name:"EpochLedgerPrecondition",docs:null,keys:["hash","totalCurrency"],entries:{hash:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},totalCurrency:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"18446744073709551615",inner:{type:"object",name:"CurrencyAmountInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt64"},upper:{type:"UInt64"}},docEntries:{lower:null,upper:null}}}},docEntries:{hash:null,totalCurrency:null}},seed:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},startCheckpoint:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},lockCheckpoint:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},epochLength:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"LengthInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}}},docEntries:{ledger:null,seed:null,startCheckpoint:null,lockCheckpoint:null,epochLength:null}},nextEpochData:{type:"object",name:"EpochDataPrecondition",docs:null,keys:["ledger","seed","startCheckpoint","lockCheckpoint","epochLength"],entries:{ledger:{type:"object",name:"EpochLedgerPrecondition",docs:null,keys:["hash","totalCurrency"],entries:{hash:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},totalCurrency:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"18446744073709551615",inner:{type:"object",name:"CurrencyAmountInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt64"},upper:{type:"UInt64"}},docEntries:{lower:null,upper:null}}}},docEntries:{hash:null,totalCurrency:null}},seed:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},startCheckpoint:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},lockCheckpoint:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},epochLength:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"LengthInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}}},docEntries:{ledger:null,seed:null,startCheckpoint:null,lockCheckpoint:null,epochLength:null}}},docEntries:{snarkedLedgerHash:null,blockchainLength:null,minWindowDensity:null,totalCurrency:null,globalSlotSinceGenesis:null,stakingEpochData:null,nextEpochData:null}},account:{type:"object",name:"AccountPrecondition",docs:null,keys:["balance","nonce","receiptChainHash","delegate","state","actionState","provedState","isNew"],entries:{balance:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"18446744073709551615",inner:{type:"object",name:"BalanceInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt64"},upper:{type:"UInt64"}},docEntries:{lower:null,upper:null}}},nonce:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"NonceInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}},receiptChainHash:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},delegate:{type:"option",optionType:"flaggedOption",inner:{type:"PublicKey"}},state:{type:"array",inner:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},staticLength:8},actionState:{type:"option",optionType:"flaggedOption",inner:{type:"Field",checkedType:{type:"Field"},checkedTypeName:"ActionState"}},provedState:{type:"option",optionType:"flaggedOption",inner:{type:"Bool"}},isNew:{type:"option",optionType:"flaggedOption",inner:{type:"Bool"}}},docEntries:{balance:null,nonce:null,receiptChainHash:null,delegate:null,state:null,actionState:null,provedState:null,isNew:null}},validWhile:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"GlobalSlotSinceGenesisInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}}},docEntries:{network:null,account:null,validWhile:null}},useFullCommitment:{type:"Bool"},implicitAccountCreationFee:{type:"Bool"},mayUseToken:{type:"object",name:"MayUseToken",docs:null,keys:["parentsOwnToken","inheritFromParent"],entries:{parentsOwnToken:{type:"Bool"},inheritFromParent:{type:"Bool"}},docEntries:{parentsOwnToken:null,inheritFromParent:null},checkedType:{type:"object",name:"Anonymous",docs:null,keys:["parentsOwnToken","inheritFromParent"],entries:{parentsOwnToken:{type:"Bool"},inheritFromParent:{type:"Bool"}},docEntries:{parentsOwnToken:"",inheritFromParent:""}},checkedTypeName:"MayUseToken"},authorizationKind:{type:"object",name:"AuthorizationKindStructured",docs:null,keys:["isSigned","isProved","verificationKeyHash"],entries:{isSigned:{type:"Bool"},isProved:{type:"Bool"},verificationKeyHash:{type:"Field",checkedType:{type:"Field"},checkedTypeName:"VerificationKeyHash"}},docEntries:{isSigned:null,isProved:null,verificationKeyHash:null}}},docEntries:{publicKey:null,tokenId:null,update:null,balanceChange:null,incrementNonce:null,events:null,actions:null,callData:null,callDepth:null,preconditions:null,useFullCommitment:null,implicitAccountCreationFee:null,mayUseToken:null,authorizationKind:null}},authorization:{type:"object",name:"Control",docs:null,keys:["proof","signature"],entries:{proof:{type:"option",optionType:"orUndefined",inner:{type:"string"}},signature:{type:"option",optionType:"orUndefined",inner:{type:"string"}}},docEntries:{proof:null,signature:null}}},docEntries:{body:null,authorization:null}},Account:{type:"object",name:"Account",docs:null,keys:["publicKey","tokenId","tokenSymbol","balance","nonce","receiptChainHash","delegate","votingFor","timing","permissions","zkapp"],entries:{publicKey:{type:"PublicKey"},tokenId:{type:"TokenId"},tokenSymbol:{type:"string"},balance:{type:"UInt64"},nonce:{type:"UInt32"},receiptChainHash:{type:"Field",checkedType:{type:"Field"},checkedTypeName:"ReceiptChainHash"},delegate:{type:"option",optionType:"orUndefined",inner:{type:"PublicKey"}},votingFor:{type:"Field"},timing:{type:"object",name:"AccountTiming",docs:null,keys:["isTimed","initialMinimumBalance","cliffTime","cliffAmount","vestingPeriod","vestingIncrement"],entries:{isTimed:{type:"Bool"},initialMinimumBalance:{type:"UInt64"},cliffTime:{type:"UInt32"},cliffAmount:{type:"UInt64"},vestingPeriod:{type:"UInt32"},vestingIncrement:{type:"UInt64"}},docEntries:{isTimed:null,initialMinimumBalance:null,cliffTime:null,cliffAmount:null,vestingPeriod:null,vestingIncrement:null}},permissions:{type:"object",name:"Permissions",docs:null,keys:["editState","access","send","receive","setDelegate","setPermissions","setVerificationKey","setZkappUri","editActionState","setTokenSymbol","incrementNonce","setVotingFor","setTiming"],entries:{editState:{type:"AuthRequired"},access:{type:"AuthRequired"},send:{type:"AuthRequired"},receive:{type:"AuthRequired"},setDelegate:{type:"AuthRequired"},setPermissions:{type:"AuthRequired"},setVerificationKey:{type:"object",name:"VerificationKeyPermission",docs:null,keys:["auth","txnVersion"],entries:{auth:{type:"AuthRequired"},txnVersion:{type:"UInt32",checkedType:{type:"UInt32"},checkedTypeName:"TransactionVersion"}},docEntries:{auth:null,txnVersion:null}},setZkappUri:{type:"AuthRequired"},editActionState:{type:"AuthRequired"},setTokenSymbol:{type:"AuthRequired"},incrementNonce:{type:"AuthRequired"},setVotingFor:{type:"AuthRequired"},setTiming:{type:"AuthRequired"}},docEntries:{editState:null,access:null,send:null,receive:null,setDelegate:null,setPermissions:null,setVerificationKey:null,setZkappUri:null,editActionState:null,setTokenSymbol:null,incrementNonce:null,setVotingFor:null,setTiming:null}},zkapp:{type:"option",optionType:"orUndefined",inner:{type:"object",name:"ZkappAccount",docs:null,keys:["appState","verificationKey","zkappVersion","actionState","lastActionSlot","provedState","zkappUri"],entries:{appState:{type:"array",inner:{type:"Field"},staticLength:8},verificationKey:{type:"option",optionType:"orUndefined",inner:{type:"object",name:"VerificationKeyWithHash",docs:null,keys:["data","hash"],entries:{data:{type:"string"},hash:{type:"Field"}},docEntries:{data:null,hash:null}}},zkappVersion:{type:"UInt32"},actionState:{type:"array",inner:{type:"Field"},staticLength:5},lastActionSlot:{type:"UInt32"},provedState:{type:"Bool"},zkappUri:{type:"string"}},docEntries:{appState:null,verificationKey:null,zkappVersion:null,actionState:null,lastActionSlot:null,provedState:null,zkappUri:null}}}},docEntries:{publicKey:null,tokenId:null,tokenSymbol:null,balance:null,nonce:null,receiptChainHash:null,delegate:null,votingFor:null,timing:null,permissions:null,zkapp:null}}};const ad={PublicKey:Fs,UInt64:Ap,UInt32:Bp,TokenId:Rs,Field:Yi,AuthRequired:$s,BalanceChange:Zs,Sign:Fp,Bool:Qi};let nd={TransactionVersion:Xs,ZkappUri:Ls,TokenSymbol:js,StateHash:Ms,BalanceChange:Zs,Events:Hs,Actions:Ks,ActionState:Js,MayUseToken:Ys,VerificationKeyHash:Ws,ReceiptChainHash:Gs},{provableFromLayout:rd,toJSONEssential:id,empty:od}=function(e,t){e.Field;const{toInput:a,toJSON:n,fromJSON:r,empty:i,toJSONEssential:o}=Qs(e,t);function p(a,n,r){return ed(e,t,a,n,r)}function s(a,n,r){return function(e,t,a,n,r){return ed(e,t,{map:(e,t)=>a(e,t),reduceArray:e=>e,reduceObject:(e,t)=>t,reduceFlaggedOption:e=>e,reduceOrUndefined:e=>e},n,r)}(e,t,a,n,r)}function d(e){let t={map:e=>e.sizeInFields(),reduceArray:(e,{inner:a,staticLength:n})=>(n??NaN)*p(t,a),reduceObject:(e,t)=>e.map((e=>t[e])).reduce(((e,t)=>e+t)),reduceFlaggedOption:({isSome:e,value:t})=>e+t,reduceOrUndefined:e=>0};return p(t,e)}function l(a,n,r){let{checkedTypeName:i}=a;if(i)return t[i].fromFields(n,r);if("array"===a.type){let e=a,t=d(e.inner),i=r.length,o=[];for(let a=0,p=0;a<i;a++,p+=t)o[a]=l(e.inner,n.slice(p,p+t),r[a]);return o}if("option"===a.type){let{optionType:t,inner:i}=a;switch(t){case"closedInterval":case"flaggedOption":{let[t,...a]=n;return{isSome:e.Bool.fromFields([t],[]),value:l(i,a,r)}}case"orUndefined":{let[e,t]=r;return e?l(i,n,t):void 0}default:throw Error("bug")}}if("object"===a.type){let{keys:e,entries:t}=a,i={},o=0;for(let a=0;a<e.length;a++){let p=t[e[a]],s=d(p);i[e[a]]=l(p,n.slice(o,o+s),r[a]),o+=s}return i}return ro.has(a.type)?io[a.type].fromFields(n,r):e[a.type].fromFields(n,r)}return{provableFromLayout:function(e){return{sizeInFields:()=>d(e),toFields:t=>function(e,t){return p({map:(e,t)=>e.toFields(t),reduceArray:e=>e.flat(),reduceObject:(e,t)=>e.map((e=>t[e])).flat(),reduceFlaggedOption:({isSome:e,value:t})=>[e,t].flat(),reduceOrUndefined:e=>[]},e,t)}(e,t),toAuxiliary:t=>function(e,t){return p({map:(e,t)=>e.toAuxiliary(t),reduceArray:e=>e,reduceObject:(e,t)=>e.map((e=>t[e])),reduceFlaggedOption:({value:e})=>e,reduceOrUndefined:e=>void 0===e?[!1]:[!0,e]},e,t)}(e,t),fromFields:(t,a)=>l(e,t,a),toJSON:t=>n(e,t),fromJSON:t=>r(e,t),check(t){!function(e,t){p({map:(e,t)=>e.check(t),reduceArray(){},reduceObject(){},reduceFlaggedOption(){},reduceOrUndefined(){}},e,t)}(e,t)},toInput:t=>a(e,t),empty:()=>i(e),toValue:t=>function(e,t){return s(((e,t)=>e.toValue(t)),e,t)}(e,t),fromValue:t=>function(e,t){return s(((e,t)=>e.fromValue(t)),e,t)}(e,t)}},toJSONEssential:o,empty:i}}(ad,nd),pd=rd(td.ZkappCommand),sd=rd(td.AccountUpdate),dd=rd(td.Account);const{TokenId:ld,StateHash:_d,TokenSymbol:md,AuthRequired:ud,ZkappUri:cd,MayUseToken:fd}=function({Field:e,Bool:t,HashHelpers:a,packToFields:n}){let{signable:r}=_a();const i=Ci(e),o=r(e);return{TokenId:Ps(o,i.TokenId,e(1)),StateHash:Ps(o,i.StateHash),TokenSymbol:Ds(r({field:e,symbol:String}),e),AuthRequired:Us(r({constant:t,signatureNecessary:t,signatureSufficient:t}),t),MayUseToken:r({parentsOwnToken:t,inheritFromParent:t}),Bool:t,ZkappUri:zs(e,a,n)}}({Field:La,Bool:Ha,HashHelpers:fs,packToFields:gs}),{Events:hd,Actions:gd}=Vs({Field:La,Poseidon:_o}),wd={...La,empty:gd.emptyActionState},vd={...La,empty:()=>La(c.dummyVerificationKeyHash)},yd={...La,empty:()=>fs.emptyHashWithPrefix("CodaReceiptEmpty")},bd={...Wa,empty:()=>Wa(3)},kd=qa({magnitude:Ga,sgn:Xa}),Sd={PublicKey:qi,UInt64:Ga,UInt32:Wa,TokenId:ld,Field:La,AuthRequired:ud,BalanceChange:kd,Sign:Xa,Bool:Ha};let xd={TransactionVersion:bd,ZkappUri:cd,TokenSymbol:md,StateHash:_d,BalanceChange:kd,Events:hd,Actions:gd,ActionState:wd,MayUseToken:fd,VerificationKeyHash:vd,ReceiptChainHash:yd},{signableFromLayout:Td,toJSONEssential:Ed,empty:Id}=Qs(Sd,xd),Nd=Td(td.ZkappCommand),Cd=Td(td.AccountUpdate);Td(td.Account);const Ad=Yi(0);function Bd(e){return lp({previousHash:Yi,element:e})}function Fd(e,t){return{previousHash:t.previousHash.toConstant(),element:_r.toConstant(e,t.element)}}class qd{constructor({hash:e,data:t}){this.hash=e,this.data=t}isEmpty(){return this.hash.equals(this.Constructor.emptyHash)}push(e){let t=this.hash;this.hash=this.nextHash(t,e),this.data.updateAsProver((a=>[Fd(this.innerProvable,{previousHash:t,element:e}),...a]))}pushIf(e,t){let a=this.hash;this.hash=_r.if(e,this.nextHash(a,t),a),this.data.updateAsProver((n=>e.toBoolean()?[Fd(this.innerProvable,{previousHash:a,element:t}),...n]:n))}popWitness(){return _r.witness(Bd(this.innerProvable),(()=>{let[e,...t]=this.data.get(),a=e??{previousHash:this.Constructor.emptyHash,element:this.innerProvable.empty()};return this.data.set(t),a}))}popExn(){let{previousHash:e,element:t}=this.popWitness(),a=this.nextHash(e,t);return this.hash.assertEquals(a),this.hash=e,t}pop(){let{previousHash:e,element:t}=this.popWitness(),a=this.isEmpty(),n=this.Constructor.emptyHash,r=this.nextHash(e,t);r=_r.if(a,n,r),this.hash.assertEquals(r),this.hash=_r.if(a,n,e);let i=this.innerProvable;return _r.if(a,i,i.empty(),t)}popIf(e){let t=this.hash,a=this.pop();return this.data.updateAsProver((t=>{let n={previousHash:this.hash,element:a};return e.toBoolean()?t:[Fd(this.innerProvable,n),...t]})),this.hash=_r.if(e,this.hash,t),a}popIfUnsafe(e){let{previousHash:t,element:a}=_r.witness(Bd(this.innerProvable),(()=>{let t={previousHash:this.hash,element:this.innerProvable.empty()};if(!e.toBoolean())return t;let[a,...n]=this.data.get();return this.data.set(n),a??t})),n=this.nextHash(t,a),r=_r.if(e,n,this.hash);return this.hash.assertEquals(r),this.hash=_r.if(e,t,this.hash),a}clone(){let e=Sr.witness((()=>[...this.data.get()]));return new this.Constructor({hash:this.hash,data:e})}forEach(e,t){let a=this.startIterating();for(let n=0;n<e;n++){let{element:e,isDummy:r}=a.Unsafe.next();t(e,r,n)}a.assertAtEnd(`Expected MerkleList to have at most ${e} elements, but it has more.`)}startIterating(){return Vd.createFromList(this.Constructor).startIterating(this)}startIteratingFromLast(){return Vd.createFromList(this.Constructor).startIteratingFromLast(this)}toArrayUnconstrained(){return Sr.witness((()=>[...this.data.get()].reverse().map((e=>e.element))))}lengthUnconstrained(){return Sr.witness((()=>this.data.get().length))}static create(e,t=Od(ar.get(e)),a=Ad){let n=ar.get(e);class r extends qd{static empty(){return new this({hash:a,data:Sr.from([])})}static from(e){e=[...e].reverse();let{hash:r,data:i}=Pd(e,t,a);return new this({data:Sr.witness((()=>i.map((e=>Fd(n,e))))),hash:r})}static fromReverse(e){let{hash:r,data:i}=Pd(e,t,a);return new this({data:Sr.witness((()=>i.map((e=>Fd(n,e))))),hash:r})}static get provable(){return Pn(void 0!==this._provable,"MerkleList not initialized"),this._provable}static set provable(e){this._provable=e}}return r._innerProvable=n,r._provable=pr(r,{hash:Yi,data:Sr}),r._nextHash=t,r._emptyHash=a,class extends r{static[Symbol.hasInstance](e){return e instanceof r}}}get Constructor(){return this.constructor}nextHash(e,t){return Pn(void 0!==this.Constructor._nextHash,"MerkleList not initialized"),this.Constructor._nextHash(e,t)}static get emptyHash(){return Pn(void 0!==this._emptyHash,"MerkleList not initialized"),this._emptyHash}get innerProvable(){return Pn(void 0!==this.Constructor._innerProvable,"MerkleList not initialized"),this.Constructor._innerProvable}}class Vd{constructor(e){Object.assign(this,e)}assertAtStart(){return this.currentHash.assertEquals(this.Constructor.emptyHash)}isAtEnd(){return this.currentHash.equals(this.hash)}jumpToEnd(){this.currentIndex.setTo(Sr.witness((()=>0))),this.currentHash=this.hash}jumpToEndIf(e){_r.asProver((()=>{e.toBoolean()&&this.currentIndex.set(0)})),this.currentHash=_r.if(e,this.hash,this.currentHash)}assertAtEnd(e){return this.currentHash.assertEquals(this.hash,e??"Merkle list iterator is not at the end")}isAtStart(){return this.currentHash.equals(this.Constructor.emptyHash)}jumpToStart(){this.currentIndex.setTo(Sr.witness((()=>this.data.get().length))),this.currentHash=this.Constructor.emptyHash}jumpToStartIf(e){_r.asProver((()=>{e.toBoolean()&&this.currentIndex.set(this.data.get().length)})),this.currentHash=_r.if(e,this.Constructor.emptyHash,this.currentHash)}_index(e,t){return t??=this.currentIndex.get(),"next"===e?Math.min(Math.max(t,-1),this.data.get().length-1):Math.max(Math.min(t,this.data.get().length),0)}_updateIndex(e){this.currentIndex.updateAsProver((()=>{let t=this._index(e);return this._index(e,"next"===e?t-1:t+1)}))}previous(){let{previousHash:e,element:t}=_r.witness(Bd(this.innerProvable),(()=>this.data.get()[this._index("previous")]??{previousHash:this.Constructor.emptyHash,element:this.innerProvable.empty()})),a=this.isAtStart(),n=this.Constructor.emptyHash,r=this.nextHash(e,t),i=_r.if(a,n,r);return this.currentHash.assertEquals(i),this._updateIndex("previous"),this.currentHash=_r.if(a,n,e),_r.if(a,this.innerProvable,this.innerProvable.empty(),t)}next(){let e=_r.witness(this.innerProvable,(()=>this.data.get()[this._index("next")]?.element??this.innerProvable.empty())),t=this.isAtEnd(),a=this.nextHash(this.currentHash,e);return this.currentHash=_r.if(t,this.hash,a),this._updateIndex("next"),_r.if(t,this.innerProvable,this.innerProvable.empty(),e)}get Unsafe(){let e=this;return{previous(){let{previousHash:t,element:a}=_r.witness(Bd(e.innerProvable),(()=>e.data.get()[e._index("previous")]??{previousHash:e.Constructor.emptyHash,element:e.innerProvable.empty()})),n=e.isAtStart(),r=e.Constructor.emptyHash,i=e.nextHash(t,a),o=_r.if(n,r,i);return e.currentHash.assertEquals(o),e._updateIndex("previous"),e.currentHash=_r.if(n,r,t),{element:a,isDummy:n}},next(){let t=_r.witness(e.innerProvable,(()=>e.data.get()[e._index("next")]?.element??e.innerProvable.empty())),a=e.isAtEnd(),n=e.nextHash(e.currentHash,t);return e.currentHash=_r.if(a,e.hash,n),e._updateIndex("next"),{element:t,isDummy:a}}}}clone(){let e=Sr.witness((()=>[...this.data.get()])),t=Sr.witness((()=>this.currentIndex.get()));return new this.Constructor({data:e,hash:this.hash,currentHash:this.currentHash,currentIndex:t})}static create(e,t=Od(ar.get(e)),a=Ad){var n;let r=ar.get(e);return n=class extends Vd{static from(e){let{hash:n,data:i}=Pd(e,t,a),o=Sr.witness((()=>i.map((e=>Fd(r,e)))));return this.startIterating({data:o,hash:n})}static fromLast(e){e=[...e].reverse();let{hash:n,data:i}=Pd(e,t,a),o=Sr.witness((()=>i.map((e=>Fd(r,e)))));return this.startIteratingFromLast({data:o,hash:n})}static startIterating({data:e,hash:t}){return new this({data:e,hash:t,currentHash:a,currentIndex:Sr.witness((()=>e.get().length-1))})}static startIteratingFromLast({data:e,hash:t}){return new this({data:e,hash:t,currentHash:t,currentIndex:Sr.from(0)})}static empty(){return this.from([])}static get provable(){return Pn(void 0!==this._provable,"MerkleListIterator not initialized"),this._provable}},n._innerProvable=ar.get(r),n._provable=pr(n,{hash:Yi,data:Sr,currentHash:Yi,currentIndex:Sr}),n._nextHash=t,n._emptyHash=a,n}static createFromList(e){return this.create(e.prototype.innerProvable,e._nextHash,e.emptyHash)}get Constructor(){return this.constructor}nextHash(e,t){return Pn(void 0!==this.Constructor._nextHash,"MerkleListIterator not initialized"),this.Constructor._nextHash(e,t)}static get emptyHash(){return Pn(void 0!==this._emptyHash,"MerkleList not initialized"),this._emptyHash}get innerProvable(){return Pn(void 0!==this.Constructor._innerProvable,"MerkleListIterator not initialized"),this.Constructor._innerProvable}}function Od(e,t=""){return function(a,n){let r=So(e.toInput(n));return ho.hashWithPrefix(t,[a,...r])}}function Pd(e,t,a){let n=e.length,r=Array(n),i=a;for(let a=n-1;a>=0;a--)r[a]={previousHash:i,element:e[a]},i=t(i,e[a]);return{data:r,hash:i}}function Dd(e){let t=ar.get(e);const a=rr({isSome:Qi,value:t}),n=lp({...a,toValue:({isSome:e,value:a})=>e.toBoolean()?t.toValue(a):void 0,fromValue:e=>void 0===e?{isSome:Qi(!1),value:ep(t)}:"object"==typeof e&&"isSome"in e?a.fromValue(e):{isSome:Qi(!0),value:t.fromValue(e)}});return class e extends n{orElse(e){return _r.if(this.isSome,t,this.value,t.fromValue(e))}assertSome(e){return this.isSome.assertTrue(e),this.value}static from(a){return new e(void 0===a?{isSome:Qi(!1),value:ep(t)}:{isSome:Qi(!0),value:t.fromValue(a)})}static none(){return e.from(void 0)}static fromFields(t,a){return new e(n.fromFields(t,a))}static fromValue(t){return new e(n.fromValue(t))}}}function Ud(e,t,a){let n=e.toField().mul(t.sub(a));return[a.add(n),t.sub(n)]}function zd(e){var t;return Pn(e>0,"height must be positive"),Pn(e<53,"height must be less than 53, so that we can use 64-bit floats to represent indices."),(t=class extends Md{get height(){return e}}).provable=pr(t,Rd),t}const Rd={root:Yi,length:Yi,data:Sr.withEmpty({nodes:[],sortedLeaves:[]})};class Md{get height(){throw Error("Height must be defined in a subclass")}constructor(){let e=this.height,t=Array(e);for(let a=0;a<e;a++)t[a]=[];let a=Md._firstLeaf,n=Ld.hashNode(a).toBigInt(),r=jd.setLeaf(t,0,n);this.root=Yi(r),this.length=Yi(1),this.data=Sr.from({nodes:t,sortedLeaves:[a]})}clone(){let e=new this.constructor;return e.root=this.root,e.length=this.length,e.data.updateAsProver((()=>{let{nodes:e,sortedLeaves:t}=this.data.get();return{nodes:e.map((e=>[...e])),sortedLeaves:[...t]}})),e}overwrite(e){this.overwriteIf(!0,e)}overwriteIf(e,t){e=Qi(e),this.root=_r.if(e,t.root,this.root),this.length=_r.if(e,t.length,this.length),this.data.updateAsProver((()=>Qi(e).toBoolean()?t.clone().data.get():this.data.get()))}insert(e,t){e=Yi(e),t=Yi(t);let a=this.length,n=a.toBits(this.height-1),r=_r.witness(Ld,(()=>this._findLeaf(e).low)),i=this._proveInclusion(r,"Invalid low node (root)");Jd(r.key,e,r.nextKey,"Key already exists in the tree");let o={...r,nextKey:e};this.root=this._proveUpdate(o,i),this._setLeafUnconstrained(!0,o);let p=Ld.nextAfter(o,a,{key:e,value:t,nextKey:r.nextKey}),s=this._proveEmpty(n);this.root=this._proveUpdate(p,s),this.length=this.length.add(1),this._setLeafUnconstrained(!1,p)}update(e,t){e=Yi(e),t=Yi(t);let a=_r.witness(Ld,(()=>this._findLeaf(e).self)),n=this._proveInclusion(a,"Key does not exist in the tree");a.key.assertEquals(e,"Invalid leaf (key)");let r={...a,value:t};return this.root=this._proveUpdate(r,n),this._setLeafUnconstrained(!0,r),a.value}set(e,t){e=Yi(e),t=Yi(t);let{low:a,self:n}=_r.witness(Hd,(()=>this._findLeaf(e))),r=this._proveInclusion(a,"Invalid low node (root)");Wd(a.key,e,a.nextKey,"Invalid low node (key)");let i=a.nextKey.equals(e),o=_r.witness(Yi,(()=>n.index.get()));o=_r.if(i,o,this.length);let p=o.toBits(this.height-1),s={...a,nextKey:e};this.root=this._proveUpdate(s,r),this._setLeafUnconstrained(!0,s);let d=this._proveInclusionOrEmpty(i,p,n,"Invalid leaf (root)");Pn(i.implies(n.key.equals(e)),"Invalid leaf (key)");let l=Ld.nextAfter(s,o,{key:e,value:t,nextKey:_r.if(i,n.nextKey,a.nextKey)});return this.root=this._proveUpdate(l,d),this.length=_r.if(i,this.length,this.length.add(1)),this._setLeafUnconstrained(i,l),new Kd({isSome:i,value:n.value})}setIf(e,t,a){return this.set(_r.if(Qi(e),Yi(t),Yi(0n)),_r.if(Qi(e),Yi(a),Yi(0n)))}get(e){e=Yi(e);let t=_r.witness(Ld,(()=>this._findLeaf(e).self));return this._proveInclusion(t,"Key does not exist in the tree"),t.key.assertEquals(e,"Invalid leaf (key)"),t.value}getOption(e){e=Yi(e);let{low:t,self:a}=_r.witness(Hd,(()=>this._findLeaf(e)));this._proveInclusion(t,"Invalid low node (root)"),Wd(t.key,e,t.nextKey,"Invalid low node (key)");let n=t.nextKey.equals(e);return this._proveInclusionIf(n,a,"Invalid leaf (root)"),Pn(n.implies(a.key.equals(e)),"Invalid leaf (key)"),new Kd({isSome:n,value:a.value})}assertIncluded(e,t){e=Yi(e);let a=_r.witness(Ld,(()=>this._findLeaf(e).self));this._proveInclusion(a,t??"Key does not exist in the tree"),a.key.assertEquals(e,"Invalid leaf (key)")}assertNotIncluded(e,t){e=Yi(e);let a=_r.witness(Ld,(()=>this._findLeaf(e).low));this._proveInclusion(a,"Invalid low node (root)"),Jd(a.key,e,a.nextKey,t??"Key already exists in the tree")}isIncluded(e){e=Yi(e);let t=_r.witness(Ld,(()=>this._findLeaf(e).low));return this._proveInclusion(t,"Invalid low node (root)"),Wd(t.key,e,t.nextKey,"Invalid low node (key)"),t.nextKey.equals(e)}_proveInclusion(e,t){let a=Ld.hashNode(e),{root:n,path:r}=this._computeRoot(a,e.index);return n.assertEquals(this.root,t??"Leaf is not included in the tree"),r}_proveInclusionIf(e,t,a){let n=Ld.hashNode(t),{root:r}=this._computeRoot(n,t.index);Pn(e.implies(r.equals(this.root)),a??"Leaf is not included in the tree")}_proveEmpty(e){let t=Yi(0n),{root:a,path:n}=this._computeRoot(t,e);return a.assertEquals(this.root,"Leaf is not empty"),n}_proveInclusionOrEmpty(e,t,a,n){let r=_r.if(e,Ld.hashNode(a),Yi(0n)),{root:i,path:o}=this._computeRoot(r,t);return i.assertEquals(this.root,n??"Leaf is not included in the tree"),o}_proveUpdate(e,t){let a=Ld.hashNode(e),{root:n}=this._computeRoot(a,t.index,t.witness);return n}_computeRoot(e,t,a){let n=t instanceof Sr?_r.witness(_r.Array(Qi,this.height-1),(()=>Yi(t.get()).toBits(this.height-1))):t,r=a??_r.witnessFields(this.height-1,(()=>{let e=[],t=Number(Yi.fromBits(n)),{nodes:a}=this.data.get();for(let n=0;n<this.height-1;n++){let r=t%2==0?t+1:t-1,i=jd.getNode(a,n,r,!1);e.push(i),t>>=1}return e}));Pn(n.length===this.height-1,"Invalid index size"),Pn(r.length===this.height-1,"Invalid witness size");for(let t=0;t<this.height-1;t++){let a=n[t],i=r[t],[o,p]=Ud(a,e,i);e=ho.hash([p,o])}return{root:e,path:{witness:r,index:n}}}_findLeaf(e){let t="bigint"==typeof e?e:e.toBigInt();Pn(t>=0n,"key must be positive");let a=this.data.get().sortedLeaves;if(0n===t)return{low:Ld.fromStored(a[a.length-1],a.length-1),self:Ld.fromStored(a[0],0)};let{lowIndex:n,foundValue:r}=function(e,t,a){let[n,r]=[0,a-1];if(t(n)>e)return{lowIndex:-1,foundValue:!1};if(t(r)<e)return{lowIndex:r,foundValue:!1};for(;r!==n;){let a=Math.ceil((n+r)/2);t(a)<=e?n=a:r=a-1}return{lowIndex:n,foundValue:t(n)===e}}(t,(e=>a[e].key),a.length),i=r?n-1:n,o=Ld.fromStored(a[i],i),p=r?n:0,s=r?a[n]:Ld.toStored(Ld.empty());return{low:o,self:Ld.fromStored(s,p)}}_setLeafUnconstrained(e,t){_r.asProver((()=>{let{nodes:a,sortedLeaves:n}=this.data.get(),r=t.index.get();jd.setLeaf(a,r,Ld.hashNode(t).toBigInt());let i=Ld.toStored(t),o=t.sortedIndex.get();Qi(e).toBoolean()?n[o%n.length]=i:n.splice(o,0,i)}))}}var jd;Md.provable=void 0,Md._firstLeaf={key:0n,value:0n,nextKey:0n,index:0},function(e){function t(e,t,a,r){let i=e[t]?.[a];if(void 0===i){if(r)throw Error(`node at level=${t}, index=${a} was expected to be known, but isn't.`);i=n(t)}return i}e.setLeaf=function(e,a,n){e[0][a]=n;let r=e.length;for(let n=0;n<r-1;n++){let r=a%2==0,i=t(e,n,2*(a=Math.floor(a/2)),r),o=t(e,n,2*a+1,!r);e[n+1][a]=_o.hash([i,o])}return t(e,r-1,0,!0)},e.getNode=t;const a=[0n];function n(e){for(let t=a.length;t<=e;t++){let e=a[t-1];a[t]=_o.hash([e,e])}return a[e]}e.empty=n}(jd||(jd={}));class $d extends(lp({key:Yi,value:Yi,nextKey:Yi})){}class Ld extends(lp({value:Yi,key:Yi,nextKey:Yi,index:Sr.withEmpty(0),sortedIndex:Sr.withEmpty(0)})){static hashNode(e){return ho.hashPacked($d,$d.fromValue(e))}static nextAfter(e,t,a){return{key:a.key,value:a.value,nextKey:a.nextKey,index:Sr.witness((()=>Number(t))),sortedIndex:Sr.witness((()=>e.sortedIndex.get()+1))}}static toStored(e){return{key:e.key.toBigInt(),value:e.value.toBigInt(),nextKey:e.nextKey.toBigInt(),index:e.index.get()}}static fromStored(e,t){return{...e,sortedIndex:t}}}class Hd extends(lp({low:Ld,self:Ld})){}class Kd extends(Dd(Yi)){}function Jd(e,t,a,n){t.assertNotEquals(0n,n??"0 is not in any strict range"),e.assertLessThan(t,n);let r=a.equals(0n),i=_r.witness(Yi,(()=>r.toBoolean()?0n:t)),o=_r.witness(Yi,(()=>r.toBoolean()?1n:a));i.assertLessThan(o,n),Pn(i.equals(t).or(r),n),Pn(o.equals(a).or(r),n)}function Wd(e,t,a,n){let r=t.equals(0n),i=_r.witness(Yi,(()=>r.toBoolean()?0n:e)),o=_r.witness(Yi,(()=>r.toBoolean()?1n:t));i.assertLessThan(o,n),Pn(i.equals(e).or(r),n),Pn(o.equals(t).or(r),n);let p=a.equals(0n),s=_r.witness(Yi,(()=>p.toBoolean()?0n:t));s.assertLessThanOrEqual(a,n),Pn(s.equals(t).or(p),n)}const Gd={genesisTimestamp:Ap.from(0),slotTime:Ap.from(18e4),accountCreationFee:Ap.from(1e9)};let Xd={getNetworkConstants:()=>Gd,currentSlot:Yd,hasAccount:Yd,getAccount:Yd,getNetworkState:Yd,sendTransaction:Yd,transaction:Yd,fetchEvents:Yd,fetchActions:Yd,getActions:Yd,proofsEnabled:!0,getNetworkId:()=>"testnet"};function Zd(e){Xd=e}function Yd(){throw Error("Must call Mina.setActiveInstance first")}function Qd(){return Xd.currentSlot()}function el(e,t){return Xd.getAccount(e,t)}function tl(e,t){return Xd.hasAccount(e,t)}function al(){return Xd.getNetworkId()}function nl(){return Xd.getNetworkConstants()}function rl(){return Xd.getNetworkState()}function il(e,t){return Xd.getAccount(e,t).balance}async function ol(e,t,a={}){return await Xd.fetchEvents(e,t,a)}async function pl(e,t,a){return await Xd.fetchActions(e,t,a)}function sl(e,t,a){return Xd.getActions(e,t,a)}function dl(){return Xd.proofsEnabled}let ll={ignoreAll(){let e={ledger:{hash:_l(Yi(0)),totalCurrency:_l(ul())},seed:_l(Yi(0)),startCheckpoint:_l(Yi(0)),lockCheckpoint:_l(Yi(0)),epochLength:_l(ml())},t=up(e);return{snarkedLedgerHash:_l(Yi(0)),blockchainLength:_l(ml()),minWindowDensity:_l(ml()),totalCurrency:_l(ul()),globalSlotSinceGenesis:_l(ml()),stakingEpochData:e,nextEpochData:t}}};function _l(e){return{isSome:Qi(!1),value:e}}const ml=()=>({lower:Bp.from(0),upper:Bp.MAXINT()}),ul=()=>({lower:Ap.from(0),upper:Ap.MAXINT()}),cl={ignoreAll(){let e=[];for(let t=0;t<8;++t)e.push(_l(Yi(0)));return{balance:_l(ul()),nonce:_l(ml()),receiptChainHash:_l(Yi(0)),delegate:_l(Fs.empty()),state:e,actionState:_l(Ks.emptyActionState()),provedState:_l(Qi(!1)),isNew:_l(Qi(!1))}}},fl=()=>_l(ml()),hl={ignoreAll:()=>({account:cl.ignoreAll(),network:ll.ignoreAll(),validWhile:fl()})};function gl(e){let t=xl(td.AccountUpdate.entries.body.entries.preconditions.entries.network,"network",e,ql(e)),a={get:()=>Nl(t.globalSlotSinceGenesis.get()),getAndRequireEquals:()=>Nl(t.globalSlotSinceGenesis.getAndRequireEquals()),requireEquals(e){let{genesisTimestamp:a,slotTime:n}=Xd.getNetworkConstants(),r=Cl(e,`Timestamp precondition unsatisfied: the timestamp can only equal numbers of the form ${a} + k*${n},\ni.e., the genesis timestamp plus an integer number of slots.`);return t.globalSlotSinceGenesis.requireEquals(r)},requireEqualsIf(e,a){let{genesisTimestamp:n,slotTime:r}=Xd.getNetworkConstants(),i=Cl(a,`Timestamp precondition unsatisfied: the timestamp can only equal numbers of the form ${n} + k*${r},\ni.e., the genesis timestamp plus an integer number of slots.`);return t.globalSlotSinceGenesis.requireEqualsIf(e,i)},requireBetween(e,a){let[n,r]=function(e,t){let{genesisTimestamp:a,slotTime:n}=Xd.getNetworkConstants(),r=qp.from(e).sub(a).add(n).sub(1);return[_r.if(r.isPositive(),Ap,r.magnitude,Ap.from(0)).div(n).toUInt32Clamped(),t.sub(a).div(n).toUInt32Clamped()]}(e,a);return t.globalSlotSinceGenesis.requireBetween(n,r)},requireNothing:()=>t.globalSlotSinceGenesis.requireNothing()};return{...t,timestamp:a}}function wl(e){let t=td.AccountUpdate.entries.body.entries.preconditions.entries.account,a=ql(e),n=e=>e,r={delegate:{...Il(e,"account.delegate",Fs,a),...vl(e,"delegate",n)},verificationKey:vl(e,"verificationKey",n),permissions:vl(e,"permissions",n),zkappUri:vl(e,"zkappUri",Ls.fromJSON),tokenSymbol:vl(e,"tokenSymbol",Eo.from),timing:vl(e,"timing",n),votingFor:vl(e,"votingFor",n)};return{...xl(t,"account",e,a),...r}}function vl(e,t,a){return{set(n){e.body.update[t].isSome=Qi(!0),e.body.update[t].value=a(n)}}}function yl(e){let t=ql(e);return{requireBetween(a,n){t.constrained.add("validWhile");let r=e.body.preconditions.validWhile;Vl(r,Qi(!0),{lower:a,upper:n},"validWhile"),r.isSome=Qi(!0),r.value.lower=a,r.value.upper=n}}}let bl=["network.stakingEpochData.seed","network.nextEpochData.seed"],kl={UInt64:Ap,UInt32:Bp,Field:Yi,Bool:Qi,PublicKey:Fs,ActionState:Js};function Sl(e){let t=e.checkedTypeName??e.type,a=kl[t];return oe(void 0!==a,`Unknown precondition base type ${t}`),a}function xl(e,t,a,n){if("option"!==e.type){if("array"===e.type)return{};if("object"===e.type)return Object.fromEntries(e.keys.map((r=>[r,xl(e.entries[r],`${t}.${r}`,a,n)])));throw Error("bug")}if("closedInterval"===e.optionType){let r=Sl(e.inner.entries.lower);return function(e,t,a,n){return{...Il(e,t,a,n),requireBetween(a,r){n.constrained.add(t);let i=Pl(e.body.preconditions,t),o={lower:a,upper:r};Vl(i,Qi(!0),o,t),i.isSome=Qi(!0),i.value=o}}}(a,t,r,n)}if("flaggedOption"===e.optionType){let r=Sl(e.inner);return Il(a,t,r,n)}}function Tl(e){return oe(e===Bp||e===Ap),e.zero}function El(e){return oe(e===Bp||e===Ap),e.MAXINT()}function Il(e,t,a,n){if(void 0===a)throw Error(`this.${t}: fieldType undefined`);let r={get(){if(bl.includes(t)){let e=n.isSelf?"this":"accountUpdate";throw Error(`${e}.${t}.get() is not implemented yet.`)}let{read:r,vars:i}=n;return r.add(t),i[t]??=function(e,t,a){return _r.witness(a,(()=>{let a,[n,...r]=t.split("."),i=r.join(".");if("account"===n)a=Al(e.body)[i];else if("network"===n)a=Pl(Xd.getNetworkState(),i);else{if("validWhile"!==n)throw Error("impossible");a=Xd.getNetworkState().globalSlotSinceGenesis}return a}))}(e,t,a)},getAndRequireEquals(){let e=r.get();return r.requireEquals(e),e},requireEquals(a){n.constrained.add(t);let r=Pl(e.body.preconditions,t);if("isSome"in r){let e="lower"in r.value&&"upper"in r.value?{lower:a,upper:a}:a;Vl(r,Qi(!0),e,t),r.isSome=Qi(!0),r.value=e}else!function(e,t,a){let n=t.split("."),r=n.pop();Pl(e,n.join("."))[r]=a}(e.body.preconditions,t,a)},requireEqualsIf(r,i){n.constrained.add(t);let o=Pl(e.body.preconditions,t);if(oe("isSome"in o),"lower"in o.value&&"upper"in o.value){let e=_r.if(r,a,i,Tl(a)),n=_r.if(r,a,i,El(a));Vl(o,r,{lower:e,upper:n},t),o.isSome=r,o.value.lower=e,o.value.upper=n}else{let e=_r.if(r,a,i,a.empty());Vl(o,r,e,t),o.isSome=r,o.value=e}},requireNothing(){let r=Pl(e.body.preconditions,t);"isSome"in r&&(r.isSome=Qi(!1),"lower"in r.value&&"upper"in r.value?(r.value.lower=Tl(a),r.value.upper=El(a)):r.value=a.empty()),n.constrained.add(t)}};return r}function Nl(e){let{genesisTimestamp:t,slotTime:a}=Xd.getNetworkConstants();return Ap.from(e).mul(a).add(t)}function Cl(e,t){let{genesisTimestamp:a,slotTime:n}=Xd.getNetworkConstants(),{quotient:r,rest:i}=e.sub(a).divMod(n);return i.value.assertEquals(Yi(0),t),r.toUInt32()}function Al(e){let{publicKey:t,tokenId:a}=e;if(!Xd.hasAccount(t,a))return{balance:Ap.zero,nonce:Bp.zero,receiptChainHash:yo("CodaReceiptEmpty"),actionState:Ks.emptyActionState(),delegate:t,provedState:Qi(!1),isNew:Qi(!0)};let n=Xd.getAccount(t,a);return{balance:n.balance,nonce:n.nonce,receiptChainHash:n.receiptChainHash,actionState:n.zkapp?.actionState?.[0]??Ks.emptyActionState(),delegate:n.delegate??n.publicKey,provedState:n.zkapp?.provedState??Qi(!1),isNew:Qi(!1)}}function Bl(e){let t=Ol.get(e);void 0!==t&&(t.vars={})}function Fl(e){let t=ql(e),a=t.isSelf?"this":"accountUpdate",n=hl.ignoreAll();for(let i of t.read){if(t.constrained.has(i))continue;let o=Pl(e.body.preconditions,i);if(!cp(o,Pl(n,i)))continue;let p="isSome"in(r=o)&&"lower"in r.value,s=i.split(".").pop();throw Error(`You used \`${a}.${i}.get()\` without adding a precondition that links it to the actual ${s}.\nConsider adding this line to your code:\n${a}.${i}.requireEquals(${a}.${i}.get());${p?`\nYou can also add more flexible preconditions with \`${a}.${i}.requireBetween(...)\`.`:""}`)}var r}function ql(e){let t=Ol.get(e);if(void 0===t)throw Error("bug: precondition context not found");return t}function Vl(e,t,a,n){if(!e.isSome.isConstant()||e.isSome.toBoolean()){let r=`\nPrecondition Error: Precondition Error: Attempting to set a precondition that is already set for '${n}'.\n'${n}' represents the field or value you're trying to set a precondition for.\nPreconditions must be set only once to avoid overwriting previous assertions. \nFor example, do not use 'requireBetween()' or 'requireEquals()' multiple times on the same field.\n\nRecommendation:\nEnsure that preconditions for '${n}' are set in a single place and are not overwritten. If you need to update a precondition,\nconsider refactoring your code to consolidate all assertions for '${n}' before setting the precondition.\n\nExample of Correct Usage:\n// Incorrect Usage:\ntimestamp.requireBetween(newUInt32(0n), newUInt32(2n));\ntimestamp.requireBetween(newUInt32(1n), newUInt32(3n));\n\n// Correct Usage:\ntimestamp.requireBetween(new UInt32(1n), new UInt32(2n));\n`;e.isSome.assertEquals(t,r),"lower"in e.value&&"upper"in e.value?(e.value.lower.assertEquals(a.lower,r),e.value.upper.assertEquals(a.lower,r)):e.value.assertEquals(a,r)}}const Ol=new WeakMap;function Pl(e,t){let a=t.split(".").reverse();for(;a.length>0;)e=e[a.pop()];return e}const Dl=fa({toBytes:e=>Aa(e),readBytes(e,t){let a=t+34;return[Ba(e.slice(t,a)),a]}}),Ul={fromString:function(e){let t=Fa(e);if(t>32)throw Error("Memo.fromString: string too long");return`${String.fromCharCode(t)}${e}`+"\0".repeat(32-t)},toString:function(e){let t=Fa(e);if(34!==t)throw Error(`Memo.toString: length ${t} does not equal 34`);if(""!==e[0])throw Error("Memo.toString: expected memo to start with 0x01 byte");let a=e.charCodeAt(1);if(a>32)throw Error("Memo.toString: invalid length encoding");return Ba(Aa(e).slice(2,2+a))},hash:function(e){let t=Ul.toBits(e),a=function({fields:e,bits:t}){let a=[];for(;t.length>0;){let e=t.splice(0,Pa-1),n=La.fromBits(e);a.push(n)}return e.concat(a)}(ws(t));return hs(r.zkappMemo,a)},...Ia(Dl,272),...Ii(Dl,_),sizeInBytes:34,empty:()=>Ul.fromString(""),toValidString(e=""){if(Fa(e)>32)throw Error("Memo: string too long");return e}},{TokenId:zl,ReceiptChainHash:Rl,EpochSeed:Ml,LedgerHash:jl,StateHash:$l}=Ci(Yi);function Ll(e,t){if(!function(e){let t=e.accountUpdates.map((e=>e.body.callDepth)),a=t.shift()??0;if(0!==a)return!1;for(let e of t){if(e<0)return!1;if(e-a>1)return!1;a=e}return!0}(e))throw Error("zkapp command: invalid call depth");let a=function(e,t){return Jl(e,Kl,hs,0n,t)}(Hl(e.accountUpdates),t),n=Ul.hash(Ul.fromBase58(e.memo)),i=function(e,t){return Kl(function({body:{fee:e,nonce:t,publicKey:a,validUntil:n},authorization:r}){let{body:i}=Cd.empty();return i.publicKey=a,i.balanceChange={magnitude:e,sgn:Xa(-1)},i.incrementNonce=Ha(!0),i.preconditions.network.globalSlotSinceGenesis={isSome:Ha(!0),value:{lower:Wa(0),upper:n??Wa.maxValue}},i.preconditions.account.nonce={isSome:Ha(!0),value:{lower:t,upper:t}},i.useFullCommitment=Ha(!0),i.implicitAccountCreationFee=Ha(!0),i.authorizationKind={isProved:Ha(!1),isSigned:Ha(!0),verificationKeyHash:La(c.dummyVerificationKeyHash)},{body:i,authorization:{signature:r}}}(e),t)}(e.feePayer,t);return{commitment:a,fullCommitment:hs(r.accountUpdateCons,[n,i,a])}}function Hl(e,t=0){let a=t>0?e:[...e],n=[];for(;a.length>0;){let e=a[0];if(e.body.callDepth<t)return n;a.shift();let r=Hl(a,t+1);n.push({accountUpdate:e,children:r})}return n}function Kl(e,t){!function(e){let{isSigned:t,isProved:a,verificationKeyHash:n}=e.body.authorizationKind;if(a&&t)throw Error("Invalid authorization kind: Only one of `isProved` and `isSigned` may be true.");if(!a&&n!==La(c.dummyVerificationKeyHash))throw Error(`Invalid authorization kind: If \`isProved\` is false, verification key hash must be ${c.dummyVerificationKeyHash}, got ${n}`)}(e);let a=gs(Cd.toInput(e));return hs(As(t),a)}function Jl(e,t,a,n,i){let o=n;for(let p of[...e].reverse()){let e=Jl(p.children,t,a,n,i),s=t(p.accountUpdate,i),d=a(r.accountUpdateNode,[s,e]);o=a(r.accountUpdateCons,[d,o])}return o}let Wl=en();class Gl{}function Xl(e){return e instanceof Gl}let Zl=en({default:null});function Yl(){let e=Zl.get()?.selfLayout;return e??=Wl()?.layout,e}function Ql(e){let t=Zl.get();return M(null!==t,"This method must be called within a contract method"),void 0!==e&&M(t.this.constructor===e,`This method must be called on a ${e.name} contract`),t.this}const e_={sizeInFields:()=>0,toFields:()=>[],toAuxiliary:(e=Math.random())=>[e],fromFields:(e,[t])=>t,check:()=>{},toValue:e=>e,fromValue:e=>e,toInput:()=>({}),empty:()=>Math.random()};var t_,a_;let n_={async run(e,t,a){let n=rn.enter({witnesses:e,proverData:t,inProver:!0});try{return await a()}finally{rn.leave(n)}},getData:()=>rn.get().proverData};const r_={type:Ys,No:{parentsOwnToken:Qi(!1),inheritFromParent:Qi(!1)},ParentsOwnToken:{parentsOwnToken:Qi(!0),inheritFromParent:Qi(!1)},InheritFromParent:{parentsOwnToken:Qi(!1),inheritFromParent:Qi(!0)},isNo:({body:{mayUseToken:{parentsOwnToken:e,inheritFromParent:t}}})=>e.or(t).not(),isParentsOwnToken:e=>e.body.mayUseToken.parentsOwnToken,isInheritFromParent:e=>e.body.mayUseToken.inheritFromParent},i_={...Hs,pushEvent:(e,t)=>(e=Hs.pushEvent(e,t),_r.asProver((()=>{e.data[0]=e.data[0].map((e=>Yi(Yi.toBigint(e))))})),e)},o_={...Ks,pushEvent:(e,t)=>(e=Ks.pushEvent(e,t),_r.asProver((()=>{e.data[0]=e.data[0].map((e=>Yi(Yi.toBigint(e))))})),e)},p_=()=>Qi(!0),s_=()=>Qi(!1);class d_{constructor(e,t){this.auth=e,this.txnVersion=t}static withCurrentVersion(e){return new d_(e,Bp.from(3))}}let l_={impossible:()=>({constant:p_(),signatureNecessary:p_(),signatureSufficient:s_()}),none:()=>({constant:p_(),signatureNecessary:s_(),signatureSufficient:p_()}),proof:()=>({constant:s_(),signatureNecessary:s_(),signatureSufficient:s_()}),signature:()=>({constant:s_(),signatureNecessary:p_(),signatureSufficient:p_()}),proofOrSignature:()=>({constant:s_(),signatureNecessary:s_(),signatureSufficient:p_()}),VerificationKey:{impossibleDuringCurrentVersion:()=>d_.withCurrentVersion(l_.impossible()),none:()=>d_.withCurrentVersion(l_.none()),proofDuringCurrentVersion:()=>d_.withCurrentVersion(l_.proof()),signature:()=>d_.withCurrentVersion(l_.signature()),proofOrSignature:()=>d_.withCurrentVersion(l_.proofOrSignature())}},__={...l_,default:()=>({editState:l_.proof(),send:l_.proof(),receive:l_.none(),setDelegate:l_.signature(),setPermissions:l_.signature(),setVerificationKey:l_.VerificationKey.signature(),setZkappUri:l_.signature(),editActionState:l_.proof(),setTokenSymbol:l_.signature(),incrementNonce:l_.signature(),setVotingFor:l_.signature(),setTiming:l_.signature(),access:l_.none()}),initial:()=>({editState:l_.signature(),send:l_.signature(),receive:l_.none(),setDelegate:l_.signature(),setPermissions:l_.signature(),setVerificationKey:l_.VerificationKey.signature(),setZkappUri:l_.signature(),editActionState:l_.signature(),setTokenSymbol:l_.signature(),incrementNonce:l_.signature(),setVotingFor:l_.signature(),setTiming:l_.signature(),access:l_.none()}),dummy:()=>({editState:l_.none(),send:l_.none(),receive:l_.none(),access:l_.none(),setDelegate:l_.none(),setPermissions:l_.none(),setVerificationKey:l_.VerificationKey.none(),setZkappUri:l_.none(),editActionState:l_.none(),setTokenSymbol:l_.none(),incrementNonce:l_.none(),setVotingFor:l_.none(),setTiming:l_.none()}),allImpossible:()=>({editState:l_.impossible(),send:l_.impossible(),receive:l_.impossible(),access:l_.impossible(),setDelegate:l_.impossible(),setPermissions:l_.impossible(),setVerificationKey:l_.VerificationKey.impossibleDuringCurrentVersion(),setZkappUri:l_.impossible(),editActionState:l_.impossible(),setTokenSymbol:l_.impossible(),incrementNonce:l_.impossible(),setVotingFor:l_.impossible(),setTiming:l_.impossible()}),fromString:e=>{switch(e){case"None":return l_.none();case"Either":return l_.proofOrSignature();case"Proof":return l_.proof();case"Signature":return l_.signature();case"Impossible":return l_.impossible();default:throw Error(`Cannot parse invalid permission. ${e} does not exist.`)}},fromJSON:e=>Object.fromEntries(Object.entries(e).map((([e,t])=>[e,__.fromString("string"==typeof t?t:t.auth)])))};const m_={keepAll(e,t,a){let{body:n}=sd.empty();return n.publicKey=e,t&&(n.tokenId=t,n.mayUseToken=_r.if(t.equals(f_.default),h_.MayUseToken.type,h_.MayUseToken.No,h_.MayUseToken.ParentsOwnToken)),a&&(n.mayUseToken=a),n},dummy:()=>sd.empty().body},u_=(e,t)=>({publicKey:e,nonce:t,fee:Ap.zero,validUntil:void 0}),c_=rr({tokenOwner:Fs,parentTokenId:Yi}),f_={...Rs,...zl,get default(){return Yi(1)},derive(e,t=Yi(1)){let a=c_.toInput({tokenOwner:e,parentTokenId:t});return bo(r.deriveTokenId,So(a))}};class h_{constructor(e,t={},a=!1){this.label="",this.lazyAuthorization=void 0,this.id=Math.random(),this.body=e,this.authorization=t;let{account:n,network:r,currentSlot:i}=function(e,t){return function(e,t){Ol.set(e,{read:new Set,constrained:new Set,vars:{},isSelf:t})}(e,t),{account:wl(e),network:gl(e),currentSlot:yl(e)}}(this,a);this.account=n,this.network=r,this.currentSlot=i,this.isSelf=a}static clone(e){let t=up(e.body),a=up(e.authorization),n=new h_(t,a,e.isSelf);return n.lazyAuthorization=e.lazyAuthorization,n.id=e.id,n.label=e.label,n}get tokenId(){return this.body.tokenId}send({to:e,amount:t}){let a;return e instanceof h_?(a=e,a.body.tokenId.assertEquals(this.body.tokenId)):Xl(e)?(a=e.self,a.body.tokenId.assertEquals(this.body.tokenId)):(a=h_.defaultAccountUpdate(e,this.body.tokenId),a.label=`${this.label??"Unlabeled"}.send()`,this.approve(a)),this.body.balanceChange=this.body.balanceChange.sub(t),a.body.balanceChange=a.body.balanceChange.add(t),a}approve(e){e instanceof y_?Yl()?.setChildren(this,e):(e instanceof h_&&(e.body.callDepth=this.body.callDepth+1),Yl()?.disattach(e),Yl()?.pushChild(this,e))}get balance(){let e=this;return{addInPlace(t){e.body.balanceChange=e.body.balanceChange.add(t)},subInPlace(t){e.body.balanceChange=e.body.balanceChange.sub(t)}}}get balanceChange(){return this.body.balanceChange}set balanceChange(e){this.body.balanceChange=e}get update(){return this.body.update}static setValue(e,t){e.isSome=Qi(!0),e.value=t}static assertBetween(e,t,a){e.isSome=Qi(!0),e.value.lower=t,e.value.upper=a}static assertEquals(e,t){e.isSome=Qi(!0),"lower"in e.value&&"upper"in e.value?(e.value.lower=t,e.value.upper=t):e.value=t}get publicKey(){return this.body.publicKey}requireSignature(){let{nonce:e,isSameAsFeePayer:t}=h_.getSigningInfo(this);this.body.useFullCommitment=t,this.body.implicitAccountCreationFee=Qi(!1);let a=t.not();this.body.incrementNonce=a;let n=_r.if(a,Bp,e,Bp.zero),r=_r.if(a,Bp,e,Bp.MAXINT());this.body.preconditions.account.nonce.isSome=a,this.body.preconditions.account.nonce.value.lower=n,this.body.preconditions.account.nonce.value.upper=r,C_.setLazySignature(this)}static signFeePayerInPlace(e){e.body.nonce=this.getNonce(e),e.authorization=A_(),e.lazyAuthorization={kind:"lazy-signature"}}static getNonce(e){return h_.getSigningInfo(e).nonce}static getSigningInfo(e){return gr(h_.signingInfo,(()=>h_.getSigningInfoUnchecked(e)))}static getSigningInfoUnchecked(e){let t=e.body.publicKey,a=e instanceof h_?e.body.tokenId:f_.default,n=Number(Al(e.body).nonce.toString()),r=Wl()?.sender?.equals(t),i=!!r?.and(a.equals(f_.default)).toBoolean();i&&n++;let o=Wl()?.layout;return o?.forEachPredecessor(e,(e=>{e.publicKey.equals(t).and(e.tokenId.equals(a)).and(e.body.incrementNonce).toBoolean()&&n++})),{nonce:Bp.from(n),isSameAsFeePayer:Qi(i)}}toJSON(){return sd.toJSON(this)}static toJSON(e){return sd.toJSON(e)}static fromJSON(e){let t=sd.fromJSON(e);return new h_(t.body,t.authorization)}hash(){let e=sd.toInput(this);return bo(As(Xd.getNetworkId()),So(e))}toPublicInput({accountUpdates:e}){let t=this.hash(),a=[],n=this.body.callDepth,r=e.findIndex((e=>e.id===this.id));for(M(-1!==r,"Account update not found in transaction"),r++;r<e.length;r++){let t=e[r];if(t.body.callDepth<=n)break;a.push(t)}return{accountUpdate:t,calls:Jl(Hl(a,n+1),(e=>e.hash()),ho.hashWithPrefix,Ad,Xd.getNetworkId())}}toPrettyLayout(){let e=Yl()?.get(this);M(void 0!==e,"AccountUpdate not found in layout"),e.children.print()}extractTree(){let e=Yl(),t=e?.get(this)?.final?.hash,a=this.id,n=e?.finalizeAndRemove(this)??y_.empty(),r=w_.hash(this,t);return new S_({accountUpdate:r,id:a,children:n})}static defaultAccountUpdate(e,t){return h_.default(e,t)}static default(e,t){return new h_(m_.keepAll(e,t))}static dummy(){let e=new h_(m_.dummy());return e.label="Dummy",e}isDummy(){return this.body.publicKey.isEmpty()}static defaultFeePayer(e,t){return{body:u_(e,t),authorization:A_(),lazyAuthorization:{kind:"lazy-signature"}}}static dummyFeePayer(){return{body:u_(Fs.empty(),Bp.zero),authorization:A_()}}static create(e,t){let a=h_.defaultAccountUpdate(e,t),n=Zl.get();if(n){let e=n.this.self;e.approve(a),a.label=`${e.label||"Unlabeled"} > AccountUpdate.create()`}else Wl()?.layout.pushTopLevel(a),a.label="Mina.transaction() > AccountUpdate.create()";return a}static createIf(e,t,a){return h_.create(_r.if(e,t,Fs.empty()),a)}static attachToTransaction(e){let t=Zl.get();if(t){if(t.this.self===e)return;t.this.self.approve(e)}else{if(!Wl.has())return;Wl.get().layout.pushTopLevel(e)}}static unlink(e){Yl()?.disattach(e)}static createSigned(e,t){let a=h_.create(e,t);return a.label=a.label.replace(".create()",".createSigned()"),a.requireSignature(),a}static fundNewAccount(e,t=1){let a=h_.createSigned(e);a.label="AccountUpdate.fundNewAccount()";let n=Xd.getNetworkConstants().accountCreationFee;return n=n.mul(t),a.balance.subInPlace(n),a}static toAuxiliary(e){let t=sd.toAuxiliary(e);return[{lazyAuthorization:e&&e.lazyAuthorization,id:e?.id??Math.random(),label:e?.label??""},t]}static empty(){return h_.dummy()}static fromFields(e,[t,a]){let n=sd.fromFields(e,a);return Object.assign(new h_(n.body,n.authorization),t)}static fromValue(e){if(e instanceof h_)return e;let t=sd.fromValue(e);return new h_(t.body,t.authorization)}static witness(e,t,{skipCheck:a=!1}={}){let n=a?{...rr(h_),check(){}}:h_,r=rr({accountUpdate:n,result:e});return _r.witnessAsync(r,t)}toPretty(){function e(e){return".."+e.slice(-4)}let t=id(td.AccountUpdate,this),a=t.body;delete a.callData,a.publicKey=e(a.publicKey),"0"===a.balanceChange?.magnitude&&delete a.balanceChange,a.tokenId===f_.toBase58(f_.default)?delete a.tokenId:a.tokenId=e(a.tokenId),0===a.callDepth&&delete a.callDepth,!1===a.incrementNonce&&delete a.incrementNonce,!1===a.useFullCommitment&&delete a.useFullCommitment,!1===a.implicitAccountCreationFee&&delete a.implicitAccountCreationFee,0===a.events?.length&&delete a.events,0===a.actions?.length&&delete a.actions,a.preconditions?.account&&(a.preconditions.account=JSON.stringify(a.preconditions.account)),a.preconditions?.network&&(a.preconditions.network=JSON.stringify(a.preconditions.network)),a.preconditions?.validWhile&&(a.preconditions.validWhile=JSON.stringify(a.preconditions.validWhile)),t.authorization?.proof&&(t.authorization.proof=e(t.authorization.proof)),t.authorization?.signature&&(t.authorization.signature=e(t.authorization.signature)),a.update?.verificationKey&&(a.update.verificationKey=JSON.stringify({data:e(a.update.verificationKey.data),hash:e(a.update.verificationKey.hash)}));for(let e of["permissions","appState","timing"])a.update?.[e]&&(a.update[e]=JSON.stringify(a.update[e]));for(let e of["events","actions"])a[e]&&(a[e]=JSON.stringify(a[e]));!1===a.authorizationKind?.isProved&&delete a.authorizationKind?.verificationKeyHash,!1===a.authorizationKind?.isProved&&!1===a.authorizationKind?.isSigned&&delete a.authorizationKind,void 0===t.authorization&&!0!==a.authorizationKind?.isProved&&!0!==a.authorizationKind?.isSigned||(a.authorization=t.authorization),a.mayUseToken={parentsOwnToken:this.body.mayUseToken.parentsOwnToken.toBoolean(),inheritFromParent:this.body.mayUseToken.inheritFromParent.toBoolean()};let n={...a};return this.label&&(n={label:this.label,...n}),n}}function g_(e){return function(e,t,a){let n=So(e.toInput(a));return ho.hashWithPrefix(t,n)}(h_,As(Xd.getNetworkId()),e)}h_.Actions=o_,h_.Events=i_,h_.signingInfo=rr({isSameAsFeePayer:Qi,nonce:Bp}),h_.sizeInFields=sd.sizeInFields,h_.toFields=sd.toFields,h_.toInput=sd.toInput,h_.check=sd.check,h_.toValue=sd.toValue,h_.MayUseToken=r_;class w_ extends(ls.create(h_,g_)){}const v_=_p({id:e_,accountUpdate:w_,children:class extends(lp({hash:Yi,data:Sr})){static empty(){return{hash:Ad,data:Sr.from([])}}}});class y_ extends(a_=qd.create(v_,x_)){push(e){return super.push(e instanceof h_?S_.from(e):e)}pushIf(e,t){return super.pushIf(e,t instanceof h_?S_.from(t):t)}static fromFlatArray(e){let t=Hl(e);return this.fromSimpleForest(t)}toFlatArray(e=!0,t=0){return t_.toFlatArray(this,e,t)}static toFlatArray(e,t=!0,a=0){let n=[];for(let{element:r}of e.data.get()){let e=r.accountUpdate.value.get();t&&(e.body.callDepth=a),n.push(e),n.push(...this.toFlatArray(r.children,t,a+1))}return n}static fromSimpleForest(e){let t=e.map((e=>({accountUpdate:w_.hash(e.accountUpdate),children:t_.fromSimpleForest(e.children),id:e.accountUpdate.id})));return t_.fromReverse(t)}static assertConstant(e){_r.asProver((()=>{e.data.get().forEach((({element:e})=>{M(_r.isConstant(h_,e.accountUpdate.value.get()),"account update not constant"),t_.assertConstant(e.children)}))}))}static empty(){return t_.provable.empty()}static from(e){return new t_(super.from(e))}static fromReverse(e){return new t_(super.fromReverse(e))}}var b_,k_;t_=y_,y_.provable=(b_=t_,k_=Reflect.get(a_,"provable",t_),{sizeInFields:()=>k_.sizeInFields(),toFields:e=>k_.toFields(e),toAuxiliary:e=>k_.toAuxiliary(e),fromFields:(e,t)=>new b_(k_.fromFields(e,t)),check(e){k_.check(e)},toValue:e=>k_.toValue(e),fromValue:e=>new b_(k_.fromValue(e)),empty:()=>new b_(k_.empty()),toInput:e=>k_.toInput(e)});class S_ extends(_p({id:e_,accountUpdate:w_,children:y_})){static from(e,t){return e instanceof S_?e:new S_({accountUpdate:w_.hash(e,t),id:e.id,children:y_.empty()})}approve(e,t){Yl()?.disattach(e),e instanceof h_?this.children.pushIf(e.isDummy().not(),S_.from(e,t)):this.children.push(e)}static fromFields(e,t){return new S_(super.fromFields(e,t))}static empty(){return new S_(super.empty())}}function x_(e,t){return function(e,t){return ho.hashWithPrefix(r.accountUpdateCons,[t,e])}(e,function(e){return ho.hashWithPrefix(r.accountUpdateNode,[e.accountUpdate.hash,e.children.hash])}(t))}class T_{isFinal(){return void 0!==this.final}isMutable(){return void 0!==this.mutable}constructor(e,t){M(void 0===t!=(void 0===e),"final or mutable"),this.final=t,this.mutable=e}static empty(){return new T_([])}setFinal(e){return Object.assign(this,{final:e,mutable:void 0})}finalize(){if(this.isFinal())return this.final;M(this.isMutable(),"final or mutable");let e=this.mutable.map(E_.finalize),t=y_.empty();for(let{isDummy:a,...n}of[...e].reverse())t.pushIf(a.not(),n);return this.setFinal(t),t}witnessHash(){let e=_r.witness(y_,(()=>this.finalize()));return this.setFinal(e)}push(e){e.siblings!==this&&(M(void 0===e.siblings,"Cannot push node that already has a parent."),e.siblings=this,M(this.isMutable(),"Cannot push to an immutable forest"),this.mutable.push(e))}remove(e){M(this.isMutable(),"Cannot remove from an immutable forest");let t=this.mutable.findIndex((t=>t.id===e.id));-1!==t&&(e.siblings=void 0,this.mutable.splice(t,1))}setToForest(e){return this.isMutable()&&M(0===this.mutable.length,"Replacing a mutable forest that has existing children might be a mistake."),this.setFinal(new y_(e))}static fromForest(e){return T_.empty().setToForest(e)}toFlatArray(e=!0,t=0){if(this.isFinal())return this.final.toFlatArray(e,t);M(this.isMutable(),"final or mutable");let a=[];for(let n of this.mutable){if(n.isDummy.toBoolean())continue;let r=n.mutable??n.final.value.get();e&&(r.body.callDepth=t);let i=n.children.toFlatArray(e,t+1);a.push(r,...i)}return a}toConstantInPlace(){if(this.isFinal())this.final.hash=this.final.hash.toConstant();else{M(this.isMutable(),"final or mutable");for(let e of this.mutable)void 0!==e.mutable?e.mutable=_r.toConstant(h_,e.mutable):e.final.hash=e.final.hash.toConstant(),e.isDummy=_r.toConstant(Qi,e.isDummy),e.children.toConstantInPlace()}}print(){let e=0,t="",a=n=>{if(n.isFinal())t+=" ".repeat(e)+" ( finalized forest )\n";else{M(n.isMutable(),"final or mutable"),e+=2;for(let r of n.mutable){let n=r.mutable?.label||"<no label>";void 0!==r.final&&_r.asProver((()=>n=r.final.value.get().label)),t+=" ".repeat(e)+`( ${n} )\n`,a(r.children)}e-=2}};a(this),console.log(t)}}const E_={create:e=>e instanceof h_?{mutable:e,id:e.id,isDummy:e.isDummy(),children:T_.empty()}:{final:e.accountUpdate,id:e.id,isDummy:Qi(!1),children:T_.fromForest(e.children)},setTo(e,t){t instanceof h_?void 0!==e.final&&Object.assign(e,{mutable:t,final:void 0,children:T_.empty()}):void 0!==e.mutable&&Object.assign(e,{mutable:void 0,final:t.accountUpdate,children:T_.fromForest(t.children)})},finalize(e){let t=e.final??w_.hash(e.mutable),a=e.children.finalize();return{accountUpdate:t,id:e.id,isDummy:e.isDummy,children:a}},isUnfinished:e=>"final"in e||"mutable"in e};class I_{constructor(e){this.map=new Map,e??=h_.dummy();let t={mutable:e,id:e.id,isDummy:Qi(!1),children:T_.empty()};this.map.set(e.id,t),this.root=t}get(e){return this.map.get(e.id)}getOrCreate(e){if(E_.isUnfinished(e))return this.map.has(e.id)||this.map.set(e.id,e),e;let t=this.map.get(e.id);return void 0!==t?(E_.setTo(t,e),t):(t=E_.create(e),this.map.set(e.id,t),t)}pushChild(e,t){let a=this.getOrCreate(e),n=this.getOrCreate(t);a.children.push(n)}pushTopLevel(e){this.pushChild(this.root,e)}setChildren(e,t){this.getOrCreate(e).children.setToForest(t)}setTopLevel(e){this.setChildren(this.root,e)}disattach(e){let t=this.get(e);return t?.siblings?.remove(t),t}finalizeAndRemove(e){let t=this.get(e);if(void 0!==t)return this.disattach(e),t.children.finalize()}finalizeChildren(){let e=this.root.children.finalize();return this.final=e,y_.assertConstant(e),e}toFlatList({mutate:e}){return this.root.children.toFlatArray(e)}forEachPredecessor(e,t){let a=this.toFlatList({mutate:!1});for(let n of a){if(n.id===e.id)return;t(n)}}toConstantInPlace(){this.root.children.toConstantInPlace()}}const N_={toPretty(e){let t=N_.toJSON(e).feePayer;return t.body.publicKey=".."+t.body.publicKey.slice(-4),t.body.authorization=".."+t.authorization.slice(-4),null===t.body.validUntil&&delete t.body.validUntil,[{label:"feePayer",...t.body},...e.accountUpdates.map((e=>e.toPretty()))]},fromJSON(e){let{feePayer:t}=pd.fromJSON({feePayer:e.feePayer,accountUpdates:[],memo:e.memo}),a=Ul.toString(Ul.fromBase58(e.memo));return{feePayer:t,accountUpdates:e.accountUpdates.map(h_.fromJSON),memo:a}},toJSON:({feePayer:e,accountUpdates:t,memo:a})=>(a=Ul.toBase58(Ul.fromString(a)),pd.toJSON({feePayer:e,accountUpdates:t,memo:a}))},C_={hasLazyProof:e=>"lazy-proof"===e.lazyAuthorization?.kind,hasAny(e){let{authorization:t,lazyAuthorization:a}=e;return!!(a||"proof"in t||"signature"in t)},setSignature(e,t){e.authorization={signature:t},e.lazyAuthorization=void 0},setProof:(e,t)=>(e.authorization={proof:t},e.lazyAuthorization=void 0,e),setLazySignature(e){e.body.authorizationKind.isSigned=Qi(!0),e.body.authorizationKind.isProved=Qi(!1),e.body.authorizationKind.verificationKeyHash=Yi(c.dummyVerificationKeyHash),e.authorization={},e.lazyAuthorization={kind:"lazy-signature"}},setLazyNone(e){e.body.authorizationKind.isSigned=Qi(!1),e.body.authorizationKind.isProved=Qi(!1),e.body.authorizationKind.verificationKeyHash=Yi(c.dummyVerificationKeyHash),e.authorization={},e.lazyAuthorization={kind:"lazy-none"}}};function A_(){return Ss.toBase58(Ss.dummy())}let B_=ir({accountUpdate:Yi,calls:Yi});async function F_(e,t,a){let n=e.accountUpdates[t];if(n=h_.clone(n),"lazy-proof"!==n.lazyAuthorization?.kind)return{accountUpdateProved:n,proof:void 0};if(!a)return C_.setProof(n,await async function(){if(pp)return pp;let e=await op(2,15),t=na.proofToBase64([2,e]);return pp=t,t}()),{accountUpdateProved:n,proof:void 0};let r=n.lazyAuthorization,i=function({methodName:e,ZkappClass:t}){if(void 0===t._provers)throw Error(`Cannot prove execution of ${e}(), no prover found. Try calling \`await ${t.name}.compile()\` first, this will cache provers in the background.`);let a=t._provers,n=`Error when computing proofs: Method ${e} not found. Make sure your environment supports decorators, and annotate with \`@method ${e}\`.`;if(void 0===t._methods)throw Error(n);let r=t._methods.findIndex((t=>t.methodName===e));if(-1===r)throw Error(n);return a[r]}(r),o={transaction:e,accountUpdate:n,index:t},p=await async function(e,{methodName:t,args:a,previousProofs:n,ZkappClass:r,memoized:i,blindingValue:o},{transaction:p,accountUpdate:s,index:d}){let l=s.toPublicInput(p),_=so.to(B_.toFields(l)),[,,m]=await n_.run([s.publicKey,s.tokenId,...a],{transaction:p,accountUpdate:s,index:d},(async()=>{let a=hr.enter({memoized:i,currentIndex:0,blindingValue:o});try{return await e(_,f.to(n))}catch(e){throw console.error(`Error when proving ${r.name}.${t}()`),e}finally{hr.leave(a)}})),u=r._maxProofsVerified;return new(r.Proof())({publicInput:l,publicOutput:void 0,proof:m,maxProofsVerified:u})}(i,r,o);return{accountUpdateProved:C_.setProof(n,na.proofToBase64Transaction(p.proof)),proof:p}}a(410);const q_=dd;function V_(e){return ed(ad,nd,{map:(e,t)=>void 0!==t?t:e.empty(),reduceArray:e=>e,reduceObject:(e,t)=>t,reduceFlaggedOption(){throw Error("not relevant")},reduceOrUndefined:e=>e},td.Account,e)}const O_=(e,t,a)=>{const{to:n,from:r}=a??{};let i=`address: "${e}", tokenId: "${t}"`;return void 0!==n&&(i+=`, to: ${n}`),void 0!==r&&(i+=`, from: ${r}`),`{\n  events(input: { ${i} }) {\n    blockInfo {\n      distanceFromMaxBlockHeight\n      height\n      globalSlotSinceGenesis\n      stateHash\n      parentHash\n      chainStatus\n    }\n    eventData {\n      transactionInfo {\n        hash\n        memo\n        status\n      }\n      data\n    }\n  }\n}`},P_=(e,t,a,n)=>{const{fromActionState:r,endActionState:i}=t??{};let o=`address: "${e}", tokenId: "${a}"`;return void 0!==r&&(o+=`, fromActionState: "${r}"`),void 0!==i&&(o+=`, endActionState: "${i}"`),`{\n  actions(input: { ${o} }) {\n    blockInfo {\n      distanceFromMaxBlockHeight\n    }\n    actionState {\n      actionStateOne\n      actionStateTwo\n    }\n    actionData {\n      accountUpdateId\n      data\n    }\n  }\n}`},D_="{\n    genesisConstants {\n      genesisTimestamp\n      coinbase\n      accountCreationFee\n    }\n    daemonStatus {\n      consensusConfiguration {\n        epochDuration\n        k\n        slotDuration\n        slotsPerEpoch\n      }\n    }\n  }",U_="{\n  bestChain(maxLength: 1) {\n    protocolState {\n      blockchainState {\n        snarkedLedgerHash\n        stagedLedgerHash\n        date\n        utcDate\n        stagedLedgerProofEmitted\n      }\n      previousStateHash\n      consensusState {\n        blockHeight\n        slotSinceGenesis\n        slot\n        nextEpochData {\n          ledger {hash totalCurrency}\n          seed\n          startCheckpoint\n          lockCheckpoint\n          epochLength\n        }\n        stakingEpochData {\n          ledger {hash totalCurrency}\n          seed\n          startCheckpoint\n          lockCheckpoint\n          epochLength\n        }\n        epochCount\n        minWindowDensity\n        totalCurrency\n        epoch\n      }\n    }\n  }\n}",z_=e=>`{\n  bestChain(maxLength: ${e}) {\n    transactions {\n      zkappCommands {\n        hash\n        failureReason {\n          failures\n          index\n        }\n      }\n    }\n    stateHash\n    protocolState {\n      consensusState {\n        blockHeight\n        epoch\n        slotSinceGenesis\n      }\n      previousStateHash\n    }\n  }\n}`;function R_(e){return`mutation {\n  sendZkapp(input: {\n    zkappCommand: ${function(e){return JSON.stringify(JSON.parse(e),null,2).replace(/\"(\S+)\"\s*:/gm,"$1:")}(e)}\n  }) {\n    zkapp {\n      hash\n      id\n      failureReason {\n        failures\n        index\n      }\n      zkappCommand {\n        memo\n        feePayer {\n          body {\n            publicKey\n          }\n        }\n        accountUpdates {\n          body {\n            publicKey\n            useFullCommitment\n            incrementNonce\n          }\n        }\n      }\n    }\n  }\n}\n`}const M_=(e,t)=>`{\n  account(publicKey: "${e}", token: "${t}") {\n    publicKey\n    token\n    nonce\n    balance { total }\n    tokenSymbol\n    receiptChainHash\n    timing {\n      initialMinimumBalance\n      cliffTime\n      cliffAmount\n      vestingPeriod\n      vestingIncrement\n    }\n    permissions {\n      editState\n      access\n      send\n      receive\n      setDelegate\n      setPermissions\n      setVerificationKey {\n        auth\n        txnVersion\n      }\n      setZkappUri\n      editActionState\n      setTokenSymbol\n      incrementNonce\n      setVotingFor\n      setTiming\n    }\n    delegateAccount { publicKey }\n    votingFor\n    zkappState\n    verificationKey {\n      verificationKey\n      hash\n    }\n    actionState\n    provedState\n    zkappUri\n  }\n}\n`;let j_={minaEndpoint:"",minaFallbackEndpoints:[],archiveEndpoint:"",archiveFallbackEndpoints:[],lightnetAccountManagerEndpoint:""};function $_(e){try{return new URL(e),!0}catch(e){return!1}}function L_(e){if(!$_(e))throw new Error(`Invalid GraphQL endpoint: ${e}. Please specify a valid URL.`);j_.minaEndpoint=e}function H_(e){if(!$_(e))throw new Error(`Invalid GraphQL endpoint: ${e}. Please specify a valid URL.`);j_.archiveEndpoint=e}async function K_(e,t=j_.minaEndpoint,{timeout:a=W_}={}){let n=e.publicKey instanceof Fs?e.publicKey.toBase58():e.publicKey,r="string"!=typeof e.tokenId&&e.tokenId?f_.toBase58(e.tokenId):e.tokenId;return await J_({publicKey:n,tokenId:r},t,{timeout:a})}async function J_(e,t=j_.minaEndpoint,a){const{publicKey:n,tokenId:r}=e;let[i,o]=await cm(M_(n,r??f_.toBase58(f_.default)),t,j_.minaFallbackEndpoints,a);if(void 0!==o)return{account:void 0,error:o};let p=i?.data?.account;if(!p)return{account:void 0,error:{statusCode:404,statusText:`fetchAccount: Account with public key ${n} does not exist.`}};let s=function(e){const{publicKey:t,nonce:a,zkappState:n,balance:r,permissions:i,timing:{cliffAmount:o,cliffTime:p,initialMinimumBalance:s,vestingIncrement:d,vestingPeriod:l},delegateAccount:_,receiptChainHash:m,actionState:u,token:c,tokenSymbol:f,verificationKey:h,provedState:g,zkappUri:w}=e;let v=null!==n||null!==h||null!==u||null!==w||g;return V_({publicKey:Fs.fromBase58(t),tokenId:zl.fromBase58(c),tokenSymbol:f??void 0,balance:r&&Ap.from(r.total),nonce:Bp.from(a),receiptChainHash:m&&Rl.fromBase58(m)||void 0,delegate:(_&&Fs.fromBase58(_.publicKey))??void 0,votingFor:void 0,timing:o&&p&&s&&d&&l&&{isTimed:Qi(!0),cliffAmount:Ap.from(o),cliffTime:Bp.from(p),initialMinimumBalance:Ap.from(s),vestingIncrement:Ap.from(d),vestingPeriod:Bp.from(l)}||void 0,permissions:(i&&__.fromJSON(i))??__.initial(),zkapp:v?{appState:(n&&n.map(Yi))??void 0,verificationKey:(h&&{data:h.verificationKey,hash:Yi(h.hash)})??void 0,zkappVersion:void 0,actionState:(u&&u.map(Yi))??void 0,lastActionSlot:void 0,provedState:null!==g?Qi(g):void 0,zkappUri:null!==w?w:void 0}:void 0})}(p);return sm(s,t),{account:s,error:void 0}}const W_=3e5;let G_={},X_={},Z_={},Y_={},Q_={},em={},tm={};const am=Fs.empty().toBase58();function nm(e){Q_[e]={graphqlEndpoint:e}}function rm(e,t,a=j_.minaEndpoint){return G_[dm(e,t,a)]?.account}function im(e=j_.minaEndpoint){return X_[e]?.network}function om(e,t,a=j_.archiveEndpoint){return Z_[dm(e,t,a)]?.actions}function pm(e=j_.minaEndpoint){return tm[e]}function sm(e,t){G_[dm(e.publicKey,e.tokenId,t)]={account:e,graphqlEndpoint:t,timestamp:Date.now()}}function dm(e,t,a){return`${e.toBase58()};${f_.toBase58(t)};${a}`}function lm({ledger:{hash:e,totalCurrency:t},seed:a,startCheckpoint:n,lockCheckpoint:r,epochLength:i}){return{ledger:{hash:jl.fromBase58(e),totalCurrency:Ap.from(t)},seed:Ml.fromBase58(a),startCheckpoint:$l.fromBase58(n),lockCheckpoint:$l.fromBase58(r),epochLength:Bp.from(i)}}async function _m(e,t=j_.archiveEndpoint){if(!t)throw Error("fetchActions: Specified GraphQL endpoint is undefined. When using actions, you must set the archive node endpoint in Mina.Network(). Please ensure your Mina.Network() configuration includes an archive node endpoint.");const{publicKey:a,actionStates:n,tokenId:r=f_.toBase58(f_.default)}=e;let[i,o]=await cm(P_(a,n,r),t,j_.archiveFallbackEndpoints);if(o)throw Error(o.statusText);let p=i?.data.actions;if(void 0===p)return{error:{statusCode:404,statusText:`fetchActions: Account with public key ${a} with tokenId ${r} does not exist.`}};const s=function(e,t){const{publicKey:a,actionStates:n}=e;let r=[];return 0!==t.length&&t[0].actionState.actionStateOne===n.fromActionState&&(t=t.slice(1)),t.forEach((e=>{let{actionData:t}=e,n=Yi(e.actionState.actionStateTwo),i=e.actionState.actionStateOne;if(0===t.length)throw Error(`No action data was found for the account ${a} with the latest action state ${i}`);t=t.sort(((e,t)=>Number(e.accountUpdateId)<Number(t.accountUpdateId)?-1:1));let o,p=[],s="none";t.forEach((({accountUpdateId:e,data:t})=>{e===s?o.push(t):(s=e,o=[t],p.push(o))}));for(let e of p)n=um(e,n),r.push({actions:e,hash:n.toString()});const d=n.toString();if(d!==i)throw new Error(`Failed to derive correct actions hash for ${a}.\n        Derived hash: ${d}, expected hash: ${i}).\n        All action hashes derived: ${JSON.stringify(r,null,2)}\n        Please try a different Archive Node API endpoint.\n        `)})),r}(e,p);return function({publicKey:e,tokenId:t},a,n){Z_[`${e};${t};${n}`]={actions:a,graphqlEndpoint:n,timestamp:Date.now()}}({publicKey:a,tokenId:r},s,t),s}var mm;function um(e,t){let a=o_.fromJSON(e).hash;return o_.updateSequenceState(t,a)}async function cm(e,t=j_.minaEndpoint,a,{timeout:n=W_}={}){if("none"===t)throw Error("Should have made a graphql request, but don't know to which endpoint. Try calling `setGraphqlEndpoint` first.");let r=[];const i=async t=>{const a=new AbortController,i=setTimeout((()=>a.abort()),n);r.push(i);let o=JSON.stringify({operationName:null,query:e,variables:{}});try{return async function(e){if(e.ok){let t=await e.json();return t.errors&&t.errors.length>0?[void 0,{statusCode:e.status,statusText:t.errors.map((e=>e.message)).join("\n")}]:void 0===t.data?[void 0,{statusCode:e.status,statusText:"GraphQL response data is undefined"}]:[t,void 0]}return[void 0,{statusCode:e.status,statusText:e.statusText}]}(await fetch(t,{method:"POST",headers:{"Content-Type":"application/json"},body:o,signal:a.signal}))}finally{r.forEach((e=>clearTimeout(e))),r=[]}};let o=[],p=[t,...a];for(let e=0;e<p.length;e+=2){let t=p[e],a=p[e+1];if(void 0===a)try{return await i(t)}catch(e){return[void 0,fm(e)]}try{return await Promise.race([i(t),i(a)])}catch(e){let n=fm(e);if(408!==n.statusCode)return[void 0,n];o.push({url1:t,url2:a,error:n})}}return[void 0,{statusCode:408,statusText:o.map((({url1:e,url2:t,error:a})=>`Request to ${e} and ${t} timed out. Error: ${a}`)).join("\n")}]}function fm(e){let t=JSON.stringify(e);return e instanceof AbortSignal?{statusCode:408,statusText:`Request Timeout: ${t}`}:{statusCode:500,statusText:`Unknown Error: ${t}`}}!function(e){e.acquireKeyPair=async function(e={}){const{isRegularAccount:t=!0,lightnetAccountManagerEndpoint:a=j_.lightnetAccountManagerEndpoint}=e,n=await fetch(`${a}/acquire-account?isRegularAccount=${t}`,{method:"GET",headers:{"Content-Type":"application/json"}});if(n.ok){const e=await n.json();if(e)return{publicKey:Fs.fromBase58(e.pk),privateKey:Bs.fromBase58(e.sk)}}throw new Error("Failed to acquire the key pair")},e.releaseKeyPair=async function(e){const{publicKey:t,lightnetAccountManagerEndpoint:a=j_.lightnetAccountManagerEndpoint}=e,n=await fetch(`${a}/release-account`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({pk:t})});if(n.ok){const e=await n.json();if(e)return e.message}return null},e.listAcquiredKeyPairs=async function(e){const{lightnetAccountManagerEndpoint:t=j_.lightnetAccountManagerEndpoint}=e,a=await fetch(`${t}/list-acquired-accounts`,{method:"GET",headers:{"Content-Type":"application/json"}});if(a.ok){const e=await a.json();if(e)return e.map((e=>({publicKey:Fs.fromBase58(e.pk),privateKey:Bs.fromBase58(e.sk)})))}return null}}(mm||(mm={}));const hm={Invalid_fee_excess({transaction:{accountUpdates:e},isFeePayer:t,accountCreationFee:a}){if(t)return;let n=e.map((({body:e})=>{if(e.tokenId.equals(f_.default).toBoolean())return 1e-9*Number(e.balanceChange.toString())})),r=n.reduce(((e=0,t=0)=>e+t))??0;return`Invalid fee excess.\nThis means that balance changes in your transaction do not sum up to the amount of fees needed.\nHere's the list of balance changes:\n\n${n.map(((e,t)=>`Account update #${t+1}) ${void 0===e?"not a MINA account":`${e.toFixed(2)} MINA`}`)).join("\n")}\n\nTotal change: ${r.toFixed(2)} MINA\n\nIf there are no new accounts created in your transaction, then this sum should be equal to 0.00 MINA.\nIf you are creating new accounts -- by updating accounts that didn't exist yet --\nthen keep in mind the ${(1e-9*Number(a)).toFixed(2)} MINA account creation fee, and make sure that the sum equals\n${(1e-9*-Number(a)).toFixed(2)} times the number of newly created accounts.`}},gm=[{pattern:/\(invalid \(Invalid_proof \\"In progress\\"\)\)/g,replacement:"Stale verification key detected. Please make sure that deployed verification key reflects latest zkApp changes."}];function wm(e,t,a){let n=[],r=JSON.stringify(t),i=e.accountUpdates.length;if(t.length>i){let r=t.shift()??[];for(let[t]of r){let r=hm[t]?.({transaction:e,accountUpdateIndex:NaN,isFeePayer:!0,...a});r&&n.push(r)}}for(let r=0;r<t.length;r++){let i=t[r];for(let[t]of i){let i=hm[t]?.({transaction:e,accountUpdateIndex:r,isFeePayer:!1,...a});i&&n.push(i)}}return n.length>1?["There were multiple errors when applying your transaction:",...n.map(((e,t)=>`${t+1}.) ${e}`)),`Raw list of errors: ${r}`].join("\n\n"):1===n.length?`${n[0]}\n\nRaw list of errors: ${r}`:r}var vm,ym,bm;function km(e){const t=e().then();return Object.assign(t,{sign:(...e)=>km((()=>t.then((t=>t.sign(...e))))),send:()=>Sm((()=>t.then((e=>e.send())))),prove:()=>km((()=>t.then((e=>e.prove())))),proofs:()=>t.then((e=>e.proofs))})}function Sm(e){const t=e().then();return Object.assign(t,{wait:(...e)=>t.then((t=>t.wait(...e)))})}async function xm(e,t,a,{fetchMode:n="cached",isFinalRunOutsideCircuit:r=!0,proofsEnabled:i=!0}={}){if(Wl.has())throw new Error("Cannot start new transaction within another transaction");let o;o=void 0===e?{}:e instanceof Fs?{sender:e}:e;let{sender:p,fee:s,memo:d="",nonce:l}=o,_=Wl.enter({sender:p,layout:new I_,fetchMode:n,isFinalRunOutsideCircuit:r,numberOfRuns:a});try{"test"===n?await _r.runUnchecked((async()=>{await j(t()),_r.asProver((()=>{Wl.get().layout.toConstantInPlace()}))})):await j(t())}catch(e){throw Wl.leave(_),e}let m,u=Wl.get().layout.toFlatList({mutate:!0});try{for(let e of u)Fl(e)}catch(e){throw Wl.leave(_),e}if(void 0!==p){let e,t=(c=p,f=f_.default,Xd.getAccount(c,f));void 0===l?e=t.nonce:(e=Bp.from(l),t.nonce=e,function(e,t=j_.minaEndpoint){sm(V_(e),t)}(t)),m=h_.defaultFeePayer(p,e),void 0!==s&&(m.body.fee=s instanceof Ap?s:Ap.from(String(s)))}else m=h_.dummyFeePayer();var c,f;let h={accountUpdates:u,feePayer:m,memo:d};return Wl.leave(_),Tm(h,i)}function Tm(e,t){let a={transaction:e,sign:e=>(a.transaction=function(e,t){let a=t.map((e=>e.toPublicKey())),{commitment:n,fullCommitment:r}=Ll({...pd.toValue(e),memo:Ul.toBase58(Ul.fromString(e.memo))},Xd.getNetworkId()),{feePayer:i,accountUpdates:o,memo:p}=e;return{feePayer:function(e){let{body:n,authorization:i,lazyAuthorization:o}=up(e);if(void 0===o)return{body:n,authorization:i};let p=a.findIndex((t=>t.equals(e.body.publicKey).toBoolean()));if(-1===p)return{body:n,authorization:A_()};let s=t[p],d=xs(r,s.toBigInt(),Xd.getNetworkId());return{body:n,authorization:Ss.toBase58(d)}}(i),accountUpdates:o.map((function(e){if(e=h_.clone(e),"lazy-signature"!==e.lazyAuthorization?.kind)return e;let i=a.findIndex((t=>t.equals(e.body.publicKey).toBoolean()));if(-1===i)return C_.setSignature(e,A_()),e;let o=t[i],p=xs(e.body.useFullCommitment.toBoolean()?r:n,o.toBigInt(),Xd.getNetworkId());return C_.setSignature(e,Ss.toBase58(p)),e})),memo:p}}(a.transaction,e),a),prove:()=>km((async()=>{let{zkappCommand:e,proofs:n}=await async function(e,{proofsEnabled:t=!0}){let{feePayer:a,accountUpdates:n,memo:r}=e,i=[],o=[];for(let a=0;a<n.length;a++){let{accountUpdateProved:n,proof:r}=await F_(e,a,t);i.push(n),o.push(r)}return{zkappCommand:{feePayer:a,accountUpdates:i,memo:r},proofs:o}}(a.transaction,{proofsEnabled:t});return a.transaction=e,Object.assign(a,{proofs:n})})),toJSON(){let e=N_.toJSON(a.transaction);return JSON.stringify(e)},toPretty:()=>N_.toPretty(a.transaction),toGraphqlQuery:()=>R_(a.toJSON()),send:()=>Sm((async()=>{const e=await Im(a);if(e.errors.length>0)throw Error(`Transaction failed with errors:\n- ${e.errors.join("\n- ")}`);return e})),async safeSend(){const e=await Im(a);return e.errors.length>0?Nm(e,e.errors):e}};return a}function Em(e,t){let a,n;return void 0!==t?(a=e,n=t):(a=void 0,n=e),Xd.transaction(a,n)}async function Im(e){return await Xd.sendTransaction(e)}function Nm({transaction:e,data:t,toJSON:a,toPretty:n,hash:r},i){return{status:"rejected",errors:i,transaction:e,toJSON:a,toPretty:n,hash:r,data:t}}function Cm({transaction:e,data:t,toJSON:a,toPretty:n,hash:r}){return{status:"included",transaction:e,toJSON:a,toPretty:n,hash:r,data:t}}function Am(e,t){return t===f_.toBase58(f_.default)?`getAccount: Could not find account for public key ${e}`:`getAccount: Could not find account for public key ${e} with the tokenId ${t}`}function Bm(){let e={ledger:{hash:Yi(0),totalCurrency:Ap.zero},seed:Yi(0),startCheckpoint:Yi(0),lockCheckpoint:Yi(0),epochLength:Bp.zero};return{snarkedLedgerHash:Yi(0),blockchainLength:Bp.zero,minWindowDensity:Bp.zero,totalCurrency:Ap.zero,globalSlotSinceGenesis:Bp.zero,stakingEpochData:e,nextEpochData:up(e)}}function Fm({accountUpdates:e}){let t={events:0,actions:0},a=e.map((e=>{t.events+=qm(e.body.events),t.actions+=qm(e.body.actions);let{isSigned:a,isProved:n,verificationKeyHash:r}=e.body.authorizationKind;return{isSigned:a.toBoolean(),isProved:n.toBoolean(),verificationKeyHash:r.toString()}}));a.unshift({isSigned:!0,isProved:!1,verificationKeyHash:""});let n=Vm(a),r=ym.PROOF_COST*n.proof+ym.SIGNED_PAIR_COST*n.signedPair+ym.SIGNED_SINGLE_COST*n.signedSingle<ym.COST_LIMIT,i=t.events<=bm.MAX_EVENT_ELEMENTS,o=t.actions<=bm.MAX_ACTION_ELEMENTS,p="";if(r||(p+=`Error: The transaction is too expensive, try reducing the number of AccountUpdates that are attached to the transaction.\nEach transaction needs to be processed by the snark workers on the network.\nCertain layouts of AccountUpdates require more proving time than others, and therefore are too expensive.\n\n${JSON.stringify(n)}\n\n\n`),i||(p+=`Error: The account updates in your transaction are trying to emit too much event data. The maximum allowed number of field elements in events is ${bm.MAX_EVENT_ELEMENTS}, but you tried to emit ${t.events}.\n\n`),o||(p+=`Error: The account updates in your transaction are trying to emit too much action data. The maximum allowed number of field elements in actions is ${bm.MAX_ACTION_ELEMENTS}, but you tried to emit ${t.actions}.\n\n`),p)throw Error("Error during transaction sending:\n\n"+p)}function qm({data:e}){return e.reduce(((e,t)=>e+t.length),0)}function Vm(e){let t=Dm(e);e=t.xs;let a=0,n=0;return e.forEach((e=>{e.isProved?n++:a++})),{signedPair:t.pairs,signedSingle:a,proof:n}}async function Om(e,t,a,n,r,i){if(0===t.body.callDepth&&!h_.MayUseToken.isNo(t).toBoolean())throw Error("Top-level account update can not use or pass on token permissions. Make sure that\naccountUpdate.body.mayUseToken = AccountUpdate.MayUseToken.No;");let o=e.permissions;if(t.authorization===A_()){let e=Fs.toBase58(t.body.publicKey);throw Error(`verifyAccountUpdate: Detected a missing signature for (${e}), private key was missing.`)}function p(e){switch(e){case"appState":return o.editState;case"delegate":return o.setDelegate;case"verificationKey":return o.setVerificationKey.auth;case"permissions":return o.setPermissions;case"zkappUri":return o.setZkappUri;case"tokenSymbol":return o.setTokenSymbol;case"timing":return o.setTiming;case"votingFor":return o.setVotingFor;case"actions":return o.editActionState;case"incrementNonce":return o.incrementNonce;case"send":return o.send;case"receive":return o.receive;default:throw Error(`Invalid permission for field ${e}: does not exist.`)}}let s=t.toJSON();const d=s.body.update;let l="",_=!1,m=!1;if(r||(_=!0),t.authorization.proof&&r)try{let n=B_.toFields(a),r={maxProofsVerified:2,proof:t.authorization.proof,publicInput:n.map((e=>e.toString())),publicOutput:[]},i=e.zkapp?.verificationKey?.data;if(Pn(void 0!==i,"Account does not have a verification key"),_=await async function(e,t){let a,n;if(await pa(),"string"==typeof e.proof){[,a]=na.proofOfBase64(e.proof,e.maxProofsVerified);let t=so.to(e.publicInput.map(Yi)),r=so.to(e.publicOutput.map(Yi));n=h(t,r)}else{a=e.proof;let t=ap(e.constructor),r=ip(t.input,e.publicInput),i=ip(t.output,e.publicOutput);n=h(r,i)}let r="string"==typeof t?t:t.data;return ne(Qt((()=>na.verify(n,a,r))))}(r,i),!_)throw Error(`Invalid proof for account update\n${JSON.stringify(d)}`)}catch(e){l+="\n\n"+e.stack,_=!1}if(t.authorization.signature)try{m=function(e,t,a){if(void 0===e.authorization.signature)return!1;let{publicKey:n,useFullCommitment:r}=e.body,{commitment:i,fullCommitment:o}=t,p=r?o:i;return function(e,t,a,n){return function(e,t,a,n){let{r,s:i}=e,o=qi.toGroup(a),p=Es(t,o,r,n),{scale:s,one:d,sub:l}=xe,_=l(s(d,i),s(Ai.toProjective(o),p));try{let{x:e,y:t}=Ai.fromProjective(_);return La.isEven(t)&&La.equal(e,r)}catch{return!1}}(e,{fields:[t]},a,n)}(Ss.fromBase58(e.authorization.signature),p,n,a)}(Cd.fromJSON(s),n,i)}catch(e){l+="\n\n"+e.stack,m=!1}let u=!1;function c(e,t){let a=$s.toJSON(e);if("None"!==a){if("Impossible"===a)throw Error(`Transaction verification failed: Cannot update field '${t}' because permission for this field is '${a}'`);if("Signature"!==a&&"Either"!==a||(u||=m),"Proof"!==a&&"Either"!==a||(u||=_),!u)throw Error(`Transaction verification failed: Cannot update field '${t}' because permission for this field is '${a}', but the required authorization was not provided or is invalid.\n        ${""!==l?"Error trace: "+l:""}\n\n`)}}if(Object.entries(d).forEach((([e,t])=>{var a;a=t,(Array.isArray(a)?a.every((e=>null===e)):null===a)||c(p(e),e)})),t.body.actions.data.length>0&&c(p("actions"),"actions"),t.body.incrementNonce.toBoolean()&&c(p("incrementNonce"),"incrementNonce"),l&&!u)throw Error(`One or more proofs were invalid and no other form of authorization was provided.\n${l}`)}!function(e){e.fromJSON=function(e){return Tm(N_.fromJSON(e),Xd.proofsEnabled)}}(vm||(vm={})),function(e){e.PROOF_COST=10.26,e.SIGNED_PAIR_COST=10.08,e.SIGNED_SINGLE_COST=9.14,e.COST_LIMIT=69.45}(ym||(ym={})),function(e){e.MAX_ACTION_ELEMENTS=100,e.MAX_EVENT_ELEMENTS=100}(bm||(bm={}));const Pm=(e,t)=>!e.isProved&&!t.isProved;function Dm(e){if(e.length<=1)return{xs:e,pairs:0};if(Pm(e[0],e[1])){let t=Dm(e.slice(2));return{xs:t.xs,pairs:t.pairs+1}}{let t=Dm(e.slice(1));return{xs:[e[0]].concat(t.xs),pairs:t.pairs}}}class Um{constructor(){this.accounts=new Map}static create(){return new Um}exists({publicKey:e,tokenId:t=Rs.empty()}){return this.accounts.has(zm({publicKey:e,tokenId:t}))}store(e){this.accounts.set(zm(e),e)}load({publicKey:e,tokenId:t=Rs.empty()}){let a=zm({publicKey:e,tokenId:t});return this.accounts.get(a)}apply(e){let t=zm(e.body),a=this.accounts.get(t);a??=function(e){let t=q_.empty();return t.publicKey=e.publicKey,t.tokenId=e.tokenId??Rs.empty(),t.permissions=__.initial(),t}(e.body);let n=function(e,t){e.publicKey.assertEquals(t.publicKey),e.tokenId.assertEquals(t.tokenId,"token id mismatch");let a=q_.toJSON(e);return e=q_.fromJSON(a),t.update.permissions.isSome.toBoolean()&&(e.permissions=t.update.permissions.value),e}(a,e);this.accounts.set(t,n)}}function zm(e){let t=e.publicKey.x.toBigInt();return t<<=1n,t|=BigInt(e.publicKey.isOdd.toBoolean()),t<<=BigInt(ui.sizeInBits),t|=e.tokenId.toBigInt(),t}const Rm={constFromField:function(e){return e.toConstant().value[1]},constToField:function(e){return Yi(e)},varFromField:function(e){return e.value},varToField:function(e){return Yi(e)},fromScalar:Mm,toScalar:function(e){return Li.from(e[1])},fromPrivateKey:function(e){return Mm(e.s)},toPrivateKey:function(e){return new Bs(Li.from(e[1]))},fromPublicKey:function(e){return h(e.x.toConstant().value[1],g(e.isOdd.toBoolean()))},toPublicKey:function([,e,t]){return Fs.from({x:Yi(e),isOdd:Qi(g.from(t))})},fromPublicKeyVar:function(e){return h(e.x.value,e.isOdd.toField().value)},toPublicKeyVar:function([,e,t]){return Fs.from({x:Yi(e),isOdd:Qi(t)})}};function Mm(e){return[0,e.toBigInt()]}function jm(e){return Object.assign(Fs.fromPrivateKey(e),{key:e})}async function $m({proofsEnabled:e=!0,enforceTransactionLimits:t=!0}={}){await pa();const a=Date.now(),n=Ap.from(a),r=aa.create();let i=Bm();function o(e,t){try{r.addAccount(Rm.fromPublicKey(e),t)}catch(e){throw ae(e)}}let p=[];for(let e=0;e<10;++e){const e=1000n*10n**9n,t=jm.random();o(t,e.toString()),p.push(t)}const s={},d={},l=e;return{getNetworkId:()=>"testnet",proofsEnabled:e,getNetworkConstants:()=>({...Gd,genesisTimestamp:n}),currentSlot:()=>Bp.from(Math.ceil(((new Date).valueOf()-a)/18e4)),hasAccount:(e,t=f_.default)=>!!r.getAccount(Rm.fromPublicKey(e),Rm.constFromField(t)),getAccount(e,t=f_.default){let a=r.getAccount(Rm.fromPublicKey(e),Rm.constFromField(t));if(void 0===a)throw new Error(Am(e.toBase58(),f_.toBase58(t)));return dd.fromJSON(a)},getNetworkState:()=>i,sendTransaction(e){return Sm((async()=>{let a=N_.toJSON(e.transaction),n=Ll(Nd.fromJSON(a),this.getNetworkId());t&&Fm(e.transaction);let o=Um.create();for(const t of e.transaction.accountUpdates){let a=!!t.authorization.proof;if(t.body.authorizationKind.isProved.toBoolean()&&!a)throw Error("The actual authorization does not match the expected authorization kind. Did you forget to invoke `await tx.prove();`?");let i=o.load(t.body);if(void 0===i){let e=r.getAccount(Rm.fromPublicKey(t.body.publicKey),Rm.constFromField(t.body.tokenId));if(void 0!==e){let t=q_.fromJSON(e);o.store(t),i=t}}if(void 0!==i){let a=t.toPublicInput(e.transaction);await Om(i,t,a,n,this.proofsEnabled,this.getNetworkId()),o.apply(t)}}let p="pending";const l=[];try{r.applyJsonTransaction(JSON.stringify(a),Gd.accountCreationFee.toString(),JSON.stringify(i))}catch(t){p="rejected";try{const a=JSON.parse(t.message),n=wm(e.transaction,a,{accountCreationFee:Gd.accountCreationFee.toString()});l.push(n)}catch(e){const a=t.message||e.message||"Unknown error occurred";l.push(a)}}e.transaction.accountUpdates.forEach(((e,t)=>{let n=a.accountUpdates[t],r=n.body.publicKey,o=n.body.tokenId;if(s[r]??={},e.body.events.data.length>0){s[r][o]??=[];let t=e.body.events.data.map((e=>({data:e,transactionInfo:{transactionHash:"",transactionStatus:"",transactionMemo:""}})));s[r][o].push({events:t,blockHeight:i.blockchainLength,globalSlot:i.globalSlotSinceGenesis,blockHash:"",parentBlockHash:"",chainStatus:""})}let p=d[r]?.[o],l=p?.[p.length-1]?.hash,_=void 0!==l?Yi(l):o_.emptyActionState();if(d[r]??={},e.body.actions.data.length>0){let t=o_.updateSequenceState(_,e.body.actions.hash);d[r][o]??=[],d[r][o].push({actions:n.body.actions,hash:t.toString()})}}));const _=(await sa()).transactionHash.hashZkAppCommand(e.toJSON()),m={status:p,errors:l,transaction:e.transaction,hash:_,toJSON:e.toJSON,toPretty:e.toPretty},u=async e=>"rejected"===p?Nm(m,m.errors):Cm(m);return{...m,wait:async e=>{const t=await u();if("rejected"===t.status)throw Error(`Transaction failed with errors:\n${t.errors.join("\n")}`);return t},safeWait:u}}))},transaction(e,t){return km((async()=>{let a=(await xm(e,t,0,{isFinalRunOutsideCircuit:!1,proofsEnabled:this.proofsEnabled,fetchMode:"test"})).transaction.accountUpdates.some(C_.hasLazyProof);return await xm(e,t,1,{isFinalRunOutsideCircuit:!a,proofsEnabled:this.proofsEnabled})}))},applyJsonTransaction:e=>r.applyJsonTransaction(e,Gd.accountCreationFee.toString(),JSON.stringify(i)),fetchEvents:async(e,t=f_.default)=>(s?.[e.toBase58()]?.[f_.toBase58(t)]??[]).reverse(),async fetchActions(e,t,a=f_.default){return this.getActions(e,t,a)},getActions(e,t,a=f_.default){let n=d?.[e.toBase58()]?.[f_.toBase58(a)]??[],{fromActionState:r,endActionState:i}=t??{},o=o_.emptyActionState();if(i?.equals(o).toBoolean())return[];let p,s=r?.equals(o).toBoolean()?void 0:r?.toString(),l=i?.toString(),_=0;if(s){let e=n.findIndex((e=>e.hash===s));if(-1===e)throw Error("getActions: fromActionState not found.");_=e+1}if(l){let e=n.findIndex((e=>e.hash===l));if(-1===e)throw Error("getActions: endActionState not found.");p=e+1}return n.slice(_,p)},addAccount:o,testAccounts:p,setGlobalSlot(e){i.globalSlotSinceGenesis=Bp.from(e)},incrementGlobalSlot(e){i.globalSlotSinceGenesis=i.globalSlotSinceGenesis.add(e)},setBlockchainLength(e){i.blockchainLength=e},setTotalCurrency(e){i.totalCurrency=e},setProofsEnabled(e){this.proofsEnabled=e},resetProofsEnabled(){this.proofsEnabled=l}}}function Lm(e){let t,a,n,r="testnet";if(e&&"string"==typeof e)t=e,L_(t);else{if(!e||"object"!=typeof e)throw new Error("Network: malformed input. Please provide a string or an object with 'mina' and 'archive' endpoints.");if(e.networkId&&(r=e.networkId),!e.mina)throw new Error("Network: malformed input. Please provide an object with 'mina' endpoint.");Array.isArray(e.mina)&&0!==e.mina.length?(t=e.mina[0],L_(t),function(e){if(e.some((e=>!$_(e))))throw new Error(`Invalid GraphQL endpoint: ${e}. Please specify a valid URL.`);j_.minaFallbackEndpoints=e}(e.mina.slice(1))):"string"==typeof e.mina&&(t=e.mina,L_(t)),void 0!==e.archive&&(Array.isArray(e.archive)&&0!==e.archive.length?(a=e.archive[0],H_(a),function(e){if(e.some((e=>!$_(e))))throw new Error(`Invalid GraphQL endpoint: ${e}. Please specify a valid URL.`);j_.archiveFallbackEndpoints=e}(e.archive.slice(1))):"string"==typeof e.archive&&(a=e.archive,H_(a))),void 0!==e.lightnetAccountManager&&"string"==typeof e.lightnetAccountManager&&(n=e.lightnetAccountManager,function(e){if(!$_(e))throw new Error(`Invalid account manager endpoint: ${e}. Please specify a valid URL.`);j_.lightnetAccountManagerEndpoint=e}(n))}return{getNetworkId:()=>r,getNetworkConstants(){if("test"===Wl()?.fetchMode){nm(t);const e=pm(t);return void 0!==e?Wm(e):Gd}if(!Wl.has()||"cached"===Wl.get().fetchMode){const e=pm(t);if(void 0!==e)return Wm(e)}return Gd},currentSlot(){throw Error("currentSlot() is not implemented yet for remote blockchains.")},hasAccount:(e,a=f_.default)=>!(Wl.has()&&"cached"!==Wl.get().fetchMode||!rm(e,a,t)),getAccount(e,a=f_.default){if("test"===Wl()?.fetchMode)return function(e,t,a){let n=e.toBase58();if(n===am)return;let r=f_.toBase58(t);Y_[`${n};${r};${a}`]={publicKey:n,tokenId:r,graphqlEndpoint:a}}(e,a,t),rm(e,a,t)??function(e){let t=dd.empty();return e&&(t.publicKey=e),t}(e);if(!Wl.has()||"cached"===Wl.get().fetchMode){let n=rm(e,a,t);if(void 0!==n)return n}throw Error(`${Am(e.toBase58(),f_.toBase58(a))}\nGraphql endpoint: ${t}`)},getNetworkState(){if("test"===Wl()?.fetchMode)return nm(t),im(t)??Bm();if(!Wl.has()||"cached"===Wl.get().fetchMode){let e=im(t);if(void 0!==e)return e}throw Error(`getNetworkState: Could not fetch network state from graphql endpoint ${t} outside of a transaction.`)},sendTransaction:e=>Sm((async()=>{Fm(e.transaction);let[t,a]=await function(e,t=j_.minaEndpoint,{timeout:a=W_}={}){return cm(R_(e),t,j_.minaFallbackEndpoints,{timeout:a})}(e.toJSON()),n=[];void 0===t&&void 0!==a?n=[JSON.stringify(a)]:t&&t.errors&&t.errors.length>0&&t?.errors.forEach((e=>n.push(JSON.stringify(e))));const r=function(e,t=gm){return e.map((e=>{let a=e;return t.forEach((({pattern:e,replacement:t})=>{a=a.replace(e,t)})),a}))}(n),i=0===n.length?"pending":"rejected",o=(await sa()).transactionHash.hashZkAppCommand(e.toJSON()),p={status:i,data:t?.data,errors:r,transaction:e.transaction,hash:o,toJSON:e.toJSON,toPretty:e.toPretty},s=async(t,a,n,r=0)=>{let i;try{if(i=await async function(e,t=20){let a=await async function(e,t=j_.minaEndpoint){let[a,n]=await cm(z_(e),t,j_.minaFallbackEndpoints);if(n)throw Error(`Error making GraphQL request: ${n.statusText}`);let r=a?.data;if(void 0===r)throw Error("Failed to fetch the latest zkApp transaction status. The response data is undefined.");return r}(t);for(let t of a.bestChain)for(let a of t.transactions.zkappCommands)if(a.hash===e)return null!==a.failureReason?{success:!1,failureReason:a.failureReason.reverse().map((e=>[e.failures.map((e=>e))]))}:{success:!0,failureReason:null};return{success:!1,failureReason:null}}(t),i.success)return Cm(p);if(i.failureReason){const t=wm(e.transaction,i.failureReason,{accountCreationFee:Gd.accountCreationFee.toString()});return Nm(p,[t])}}catch(e){return Nm(p,[e.message])}return a&&r>=a?Nm(p,[`Exceeded max attempts.\nTransactionId: ${t}\nAttempts: ${r}\nLast received status: ${i}`]):(await new Promise((e=>setTimeout(e,n))),s(t,a,n,r+1))},d=async e=>"rejected"===i?Nm(p,p.errors):await(async(e=45,t=2e4)=>s(o,e,t))(e?.maxAttempts,e?.interval);return{...p,wait:async e=>{const t=await d(e);if("rejected"===t.status)throw Error(`Transaction failed with errors:\n${t.errors.join("\n")}`);return t},safeWait:d}})),transaction:(e,n)=>km((async()=>{let r=await xm(e,n,0,{fetchMode:"test",isFinalRunOutsideCircuit:!1});await async function(e,t){let a=Object.entries(Y_).map((async([t,{publicKey:a,tokenId:n}])=>{void 0===(await J_({publicKey:a,tokenId:n},e)).error&&delete Y_[t]})),n=Object.entries(em).map((async([e,{publicKey:a,actionStates:n,tokenId:r}])=>{let i=await _m({publicKey:a,actionStates:n,tokenId:r},t);"error"in i&&void 0!==i.error||delete em[e]}));a.push(...n);let r=Object.entries(Q_).find((([,t])=>t.graphqlEndpoint===e));void 0!==r&&a.push((async()=>{try{await async function(e=j_.minaEndpoint){let[t,a]=await cm(U_,e,j_.minaFallbackEndpoints);if(a)throw Error(a.statusText);let n=t?.data?.bestChain?.[0];if(void 0===n)throw Error("Failed to fetch latest network state.");let r=function({protocolState:{blockchainState:{snarkedLedgerHash:e,utcDate:t},consensusState:{blockHeight:a,minWindowDensity:n,totalCurrency:r,slot:i,slotSinceGenesis:o,nextEpochData:p,stakingEpochData:s}}}){return{snarkedLedgerHash:jl.fromBase58(e),blockchainLength:Bp.from(a),minWindowDensity:Bp.from(n),totalCurrency:Ap.from(r),globalSlotSinceGenesis:Bp.from(o),nextEpochData:lm(p),stakingEpochData:lm(s)}}(n);return X_[e]={network:r,graphqlEndpoint:e,timestamp:Date.now()},r}(e),await async function(e=j_.minaEndpoint){let[t,a]=await cm(D_,e,j_.minaFallbackEndpoints);if(a)throw Error(a.statusText);const n=t?.data?.genesisConstants,r=t?.data?.daemonStatus?.consensusConfiguration;if(void 0===n||void 0===r)throw Error("Failed to fetch genesis constants.");const i={genesisTimestamp:n.genesisTimestamp,coinbase:Number(n.coinbase),accountCreationFee:Number(n.accountCreationFee),epochDuration:Number(r.epochDuration),k:Number(r.k),slotDuration:Number(r.slotDuration),slotsPerEpoch:Number(r.slotsPerEpoch)};return tm[e]=i,i}(e),delete Q_[r[0]]}catch{}})()),await Promise.all(a)}(t,a);let i=r.transaction.accountUpdates.some(C_.hasLazyProof);return await xm(e,n,1,{fetchMode:"cached",isFinalRunOutsideCircuit:!i})})),fetchEvents:async(e,t=f_.default,n={})=>async function(e,t=j_.archiveEndpoint,a={}){if(!t)throw Error("fetchEvents: Specified GraphQL endpoint is undefined. When using events, you must set the archive node endpoint in Mina.Network(). Please ensure your Mina.Network() configuration includes an archive node endpoint.");const{publicKey:n,tokenId:r}=e;let[i,o]=await cm(O_(n,r??f_.toBase58(f_.default),a),t,j_.archiveFallbackEndpoints);if(o)throw Error(o.statusText);let p=i?.data.events;if(void 0===p)throw Error(`Failed to fetch events data. Account: ${n} Token: ${r}`);return p.map((e=>({events:e.eventData.map((({data:e,transactionInfo:t})=>({data:e,transactionInfo:t}))),blockHeight:Bp.from(e.blockInfo.height),blockHash:e.blockInfo.stateHash,parentBlockHash:e.blockInfo.parentHash,globalSlot:Bp.from(e.blockInfo.globalSlotSinceGenesis),chainStatus:e.blockInfo.chainStatus})))}({publicKey:e.toBase58(),tokenId:f_.toBase58(t)},a,n),async fetchActions(e,t,n=f_.default){let r=e.toBase58(),i=f_.toBase58(n),{fromActionState:o,endActionState:p}=t??{};return _m({publicKey:r,actionStates:{fromActionState:o?o.toString():void 0,endActionState:p?p.toString():void 0},tokenId:i},a)},getActions(e,t,n=f_.default){if("test"===Wl()?.fetchMode)return function(e,t,a,n={}){let r=e.toBase58(),i=f_.toBase58(t),{fromActionState:o,endActionState:p}=n,s=o?o.toString():void 0,d=p?p.toString():void 0;em[`${r};${i};${a}`]={publicKey:r,tokenId:i,actionStates:{fromActionState:s,endActionState:d},graphqlEndpoint:a}}(e,n,a,t),om(e,n)??[];if(!Wl.has()||"cached"===Wl.get().fetchMode){let t=om(e,n);if(void 0!==t)return t}throw Error(`getActions: Could not find actions for the public key ${e.toBase58()}`)},proofsEnabled:!0}}function Hm(){if(void 0===Wl())throw Error("The sender is not available outside a transaction. Make sure you only use it within `Mina.transaction` blocks or smart contract methods.");let e=Wl()?.sender;if(void 0===e)throw Error("The sender is not available, because the transaction block was created without the optional `sender` argument.\nHere's an example for how to pass in the sender and make it available:\n\nMina.transaction(sender, // <-- pass in sender's public key here\n() => {\n  // methods can use this.sender\n});\n");return e}async function Km(e){let t=0;const a=async(n,r)=>{let{account:i}=await K_({publicKey:e});return t++,i?n():30===t?r(new Error("Exceeded max attempts")):void setTimeout(a,3e4,n,r)};return new Promise(a)}async function Jm(e,t="berkeley-qanet"){let a=e.toBase58(),n=await fetch("https://faucet.minaprotocol.com/api/v1/faucet",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({network:t,address:a})});if(n=await n.json(),"success"!==n.status.toString())throw new Error(`Error funding account ${a}, got response status: ${n.status}, text: ${n.statusText}`);await Km(a)}function Wm(e){return{genesisTimestamp:Ap.from(Date.parse(e.genesisTimestamp)),slotTime:Ap.from(e.slotDuration),accountCreationFee:Ap.from(e.accountCreationFee)}}!function(e){e.random=function(t=1){return 1===t?e(Bs.random()):Array.from({length:t},(()=>e(Bs.random())))},e.fromBase58=function(t){return e(Bs.fromBase58(t))}}(jm||(jm={})),Zd({...Xd,transaction:(e,t)=>km((()=>xm(e,t,0)))});const Gm=1;function Xm(e){return function(e){return{_contract:void 0,defaultValue:e,set(e){if(void 0===this._contract)throw Error("set can only be called when the State is assigned to a SmartContract @state.");let t=Ym(this._contract),a=this._contract.stateType.toFields(e),n=this._contract.instance.self;a.forEach(((e,a)=>{let r=n.body.update.appState[t.offset+a];h_.setValue(r,e)}))},requireEquals(e){if(void 0===this._contract)throw Error("requireEquals can only be called when the State is assigned to a SmartContract @state.");let t=Ym(this._contract),a=this._contract.stateType.toFields(e),n=this._contract.instance.self;a.forEach(((e,a)=>{let r=n.body.preconditions.account.state[t.offset+a];Vl(r,Qi(!0),e,this._contract?.key),h_.assertEquals(r,e)})),this._contract.wasConstrained=!0},requireEqualsIf(e,t){if(void 0===this._contract)throw Error("requireEqualsIf can only be called when the State is assigned to a SmartContract @state.");let a=Ym(this._contract),n=this._contract.stateType.toFields(t),r=this._contract.instance.self;n.forEach(((t,n)=>{let i=_r.if(e,t,Yi(0));Vl(r.body.preconditions.account.state[a.offset+n],e,i,this._contract?.key);let o=r.body.preconditions.account.state[a.offset+n];o.isSome=e,o.value=i})),this._contract.wasConstrained=!0},requireNothing(){if(void 0===this._contract)throw Error("requireNothing can only be called when the State is assigned to a SmartContract @state.");this._contract.wasConstrained=!0},get(){if(void 0===this._contract)throw Error("get can only be called when the State is assigned to a SmartContract @state.");if(void 0!==this._contract.cachedVariable&&_r.inCheckedComputation())return this._contract.wasRead=!0,this._contract.cachedVariable;let e=Ym(this._contract),t=this._contract,a=_r.inProver(),n=_r.Array(Yi,e.length),r=_r.witness(n,(()=>{let n;try{n=el(t.instance.address,t.instance.self.body.tokenId)}catch(e){if(a)throw e;let n=`${t.key}.get() failed, either:\n1. We can't find this zkapp account in the ledger\n2. Because the zkapp account was not found in the cache. Try calling \`await fetchAccount(zkappAddress)\` first.\nIf none of these are the case, then please reach out on Discord at #zkapp-developers and/or open an issue to tell us!`;throw e.message?(e.message=n+`\n\n${e.message}`,e):Error(n)}if(void 0===n.zkapp?.appState)return Array(e.length).fill(Yi(0));{let t=[];for(let a=0;a<e.length;++a)t.push(n.zkapp.appState[e.offset+a]);return t}})),i=this._contract.stateType.fromFields(r);return _r.inCheckedComputation()&&this._contract.stateType.check?.(i),this._contract.wasRead=!0,this._contract.cachedVariable=i,i},getAndRequireEquals(){let e=this.get();return this.requireEquals(e),e},async fetch(){if(void 0===this._contract)throw Error("fetch can only be called when the State is assigned to a SmartContract @state.");let e,t,a=Ym(this._contract),n=this._contract.instance.address;if(""===j_.minaEndpoint?e=el(n,f_.default):({account:e}=await K_({publicKey:n,tokenId:f_.toBase58(f_.default)})),void 0!==e){if(void 0===e.zkapp?.appState)t=Array(a.length).fill(Yi(0));else{t=[];for(let n=0;n<a.length;n++)t.push(e.zkapp.appState[a.offset+n])}return this._contract.stateType.fromFields(t)}},fromAppState(e){if(void 0===this._contract)throw Error("fromAppState() can only be called when the State is assigned to a SmartContract @state.");let t=Ym(this._contract),a=[];for(let n=0;n<t.length;++n)a.push(e[t.offset+n]);return this._contract.stateType.fromFields(a)}}}(e)}function Zm(e){let t=ar.get(e);return function(e,a,n){const r=e.constructor;if(tu.has(a))throw Error(`Property name ${a} is reserved.`);let i=eu.get(r);void 0===i&&(i={states:[],layout:void 0},eu.set(r,i)),i.states.push([a,t]),Object.defineProperty(e,a,{get(){return this._?.[a]},set(e){if(void 0!==e._contract)throw Error("A State should only be assigned once to a SmartContract");if(this._?.[a])throw Error("A @state should only be assigned once");e._contract={key:a,stateType:t,instance:this,class:r,wasConstrained:!1,wasRead:!1,cachedVariable:void 0},(this._??={})[a]=e}})}}function Ym({key:e,class:t}){let a=Qm(t).get(e);if(void 0===a)throw new Error(`state ${e} not found`);return a}function Qm(e){let t=eu.get(e);if(void 0===t)return new Map;if(void 0===t.layout){let a=new Map;t.layout=a;let n=0;if(t.states.forEach((([e,t])=>{let r=t.sizeInFields();a.set(e,{offset:n,length:r}),n+=r})),n>8)throw Error(`Found ${n} on-chain state field elements on ${e.name}. Currently, only a total of 8 field elements of state are supported.`)}return t.layout}BigInt(32);const eu=new WeakMap,tu=new Set(["_methods","_"]);function au(e){try{for(let[t,a]of ru(e)){if(!a?.wasRead||a.wasConstrained)continue;let e=`You used \`this.${t}.get()\` without adding a precondition that links it to the actual on-chain state.\nConsider adding this line to your code:\nthis.${t}.requireEquals(this.${t}.get());`;throw Error(e)}}finally{nu(e)}}function nu(e){for(let[,t]of ru(e))void 0!==t&&(t.wasRead=!1,t.wasConstrained=!1,t.cachedVariable=void 0)}function ru(e){let t=e.constructor,a=eu.get(t);return void 0===a?[]:a.states.map((([t])=>[t,e[t]?._contract]))}var iu,ou;Object.defineProperty((function(e){return e}),"initialActionState",{get:o_.emptyActionState});const pu=new Set(["_methods","_"]);function su(e,t,a,n){const r=e.constructor;if(pu.has(t))throw Error(`Property name ${t} is reserved.`);if("function"!=typeof e[t])throw Error(`@method decorator was applied to \`${t}\`, which is not a function.`);let i=Reflect.getMetadata("design:paramtypes",e,t);class o extends Uo{}o.publicInputType=B_,o.publicOutputType=Oo,o.tag=()=>r;let p=Wo(r.name,t,i,o),s=Wo(r.name,t,[Fs,Yi,...i],o);void 0!==n&&(p.returnType=n,s.returnType=n),r._methods??=[],r._methods.push(s),r._maxProofsVerified??=0,r._maxProofsVerified=Math.max(r._maxProofsVerified,s.proofArgs.length);let d=a.value;a.value=function(e,t,a){let n=a.methodName,r=`Expected \`${t.name}.${n}()\` to return a promise.`;return async function(...i){nu(this),i.forEach((e=>{e instanceof h_&&h_.unlink(e)}));let o=Zl.get();if(!o){const{id:o,context:p}=mu.enter(this,_u(this,n));try{if(!(rn.get().inCompile||on()||sn())){if(Wl.has()){let n,o=p.selfUpdate,s=up(i),d=wr(),l={memoized:[],currentIndex:0,blindingValue:d},_=hr.enter(l);try{n=await j(e.apply(this,i.map(((e,t)=>{let n=a.allArgs[t];if("witness"===n.type){let t=a.witnessArgs[n.index];return _r.witness(t,(()=>e))}return e}))),r)}finally{hr.leave(_)}let{memoized:m}=l;au(this);let u=du(a,s,n,d);o.body.callData=ho.hash(u),C_.hasAny(o)||uu.setLazyProof(o,{methodName:a.methodName,args:s,previousProofs:Xo(i,a),ZkappClass:t,memoized:m,blindingValue:d},Wl.get().layout),pn()&&_r.asProver((()=>{o=_r.toConstant(h_,o),p.selfLayout.toConstantInPlace()}));let c=Wl.get().layout;return c.pushTopLevel(o),c.setChildren(o,p.selfLayout.finalizeChildren()),n}{let t=await j(e.apply(this,i),r);return Fl(this.self),Bl(this.self),au(this),t}}{let t=on()?n_.getData():void 0,n=Wl.enter({sender:t?.transaction.feePayer.body.publicKey,layout:new I_,fetchMode:on()?"cached":"test",isFinalRunOutsideCircuit:!1,numberOfRuns:void 0});try{let t,n=i.shift(),o=this.self,s=_r.witness(Yi,wr),d=hr()??{memoized:[],currentIndex:0},l=hr.enter({...d,blindingValue:s});try{let a=i.map(up);t=await j(e.apply(this,a),r)}finally{hr.leave(l)}let _=du(a,i,t,s);return o.body.callData=ho.hash(_),uu.setKind(o),function(e){cu&&_r.asProver((()=>{fu(e,n_.getData())}))}(o),function({accountUpdate:e,calls:t},a,n){e.assertEquals(a.hash()),t.assertEquals(n.hash)}(n,o,p.selfLayout.finalizeChildren()),Fl(o),Bl(o),au(this),t}finally{Wl.leave(n)}}}finally{Zl.leave(o)}}let p=o.this.self,{id:s,context:d}=mu.enter(this,_u(this,n));try{let n=wr(),s=async()=>{let o=function({allArgs:e,proofArgs:t,witnessArgs:a},n){let r=[];for(let i=0;i<e.length;i++){let o=n[i],{type:p,index:s}=e[i];if("witness"===p)r.push(_r.toConstant(a[s],o));else if("proof"===p){let e=t[s],a=ap(e),n=_r.toConstant(a.input,o.publicInput),i=_r.toConstant(a.output,o.publicOutput);r.push(new e({publicInput:n,publicOutput:i,proof:o.proof}))}}return r}(a,i),s=n.toConstant(),l=this.self;l.body.callDepth=p.body.callDepth+1;let _,m={memoized:[],currentIndex:0,blindingValue:s},u=hr.enter(m);try{_=await j(e.apply(this,o.map(up)),r)}finally{hr.leave(u)}let{memoized:c}=m;if(au(this),void 0!==_){let{returnType:e}=a;Pn(void 0!==e,"Bug: returnType is undefined but the method result isn't."),_=_r.toConstant(e,_)}let f=du(a,o,_,s);return l.body.callData=go(f),C_.hasAny(l)||uu.setLazyProof(l,{methodName:a.methodName,args:o,previousProofs:Xo(o,a),ZkappClass:t,memoized:c,blindingValue:s},Wl()?.layout??new I_),{accountUpdate:l,result:{result:_??null,children:d.selfLayout.finalizeChildren()}}},{accountUpdate:l,result:{result:_,children:m}}=await h_.witness(rr({result:a.returnType??rr(null),children:y_}),s,{skipCheck:!0});d.selfUpdate=l,l.body.callDepth=p.body.callDepth+1,o.selfLayout.pushTopLevel(l),o.selfLayout.setChildren(l,m),l.body.publicKey.assertEquals(this.address),l.body.tokenId.assertEquals(this.self.body.tokenId),Pn(l.body.authorizationKind.isProved,"callee is proved");let u=du(a,i,_,n),c=ho.hash(u);return l.body.callData.assertEquals(c),_}finally{Zl.leave(s)}}}(d,r,p)}function du(e,t,a,n){let{returnType:r,methodName:i}=e,o=function({allArgs:e,proofArgs:t,witnessArgs:a},n){let r=[];for(let i=0;i<e.length;i++){let o=n[i],{type:p,index:s}=e[i];if("witness"===p)r.push({type:a[s],value:o});else if("proof"===p){let e=o,a=ap(t[s]),n=ir({input:a.input,output:a.output}),i={input:e.publicInput,output:e.publicOutput};r.push({type:n,value:i})}}return r}(e,t),p={fields:[],packed:[]};for(let{type:e,value:t}of o)xo(e)?p=nr.append(p,e.toInput(t)):p.fields.push(Yi(e.sizeInFields()),...e.toFields(t));const s=So(p);let d=Yi(o.map((({type:e})=>e.sizeInFields())).reduce(((e,t)=>e+t),0)),l=Yi(r?.sizeInFields()??0);return p={fields:[],packed:[]},xo(r)?p=nr.append(p,r.toInput(a)):p.fields.push(...r?.toFields(a)??[]),[d,...s,l,...So(p),...(_=i,function(e){let t=[],a=0n,n=0n;for(let r of e)a+=BigInt(r)<<n,n+=8n,248n===n&&(t.push(Yi(a.toString())),a=0n,n=0n);return a+=BigInt(Gm)<<n,t.push(Yi(a.toString())),t}((new TextEncoder).encode(_))),n];var _}su.returns=function(e){return function(t,a,n){return su(t,a,n,ar.get(e))}};class lu extends Gl{static Proof(){var e;let t=this;return(e=class extends Uo{}).publicInputType=B_,e.publicOutputType=Oo,e.tag=()=>t,e}constructor(e,t){super(),iu.set(this,void 0),ou.set(this,void 0),this.sender={self:this,getUnconstrained(){if(!Wl.has())throw Error("this.sender is not available outside a transaction. Make sure you only use it within `Mina.transaction` blocks or smart contract methods.");let e=Wl.id();if(br(this.self,ou,"f")?.transactionId===e)return br(this.self,ou,"f").sender;{let t=_r.witness(Fs,(()=>Hm()));return kr(this.self,ou,{transactionId:e,sender:t},"f"),t}},getUnconstrainedV2(){let e=this.getUnconstrained();return e.x.assertNotEquals(0),e},getAndRequireSignature(){let e=this.getUnconstrained();return h_.createSigned(e),e},getAndRequireSignatureV2(){let e=this.getUnconstrainedV2();return h_.createSigned(e),e}},this.events={},this.address=e,this.tokenId=t??f_.default,Object.defineProperty(this,"reducer",{set(e){(this._??={}).reducer=e},get(){return function(e){let t=(e._??={}).reducer;if(void 0===t)throw Error(`You are trying to use a reducer without having declared its type.\nMake sure to add a property \`reducer\` on ${e.constructor.name}, for example:\nclass ${e.constructor.name} extends SmartContract {\n  reducer = Reducer({ actionType: Field });\n}`);return{dispatch(a){let n=e.self,r=t.actionType.toFields(a);n.body.actions=o_.pushEvent(n.body.actions,r)},reduce(a,n,r,i,{maxUpdatesWithActions:o=32,maxActionsPerUpdate:p=1,skipActionStatePrecondition:s=!1}={}){_r.asProver((()=>{if(a.data.get().length>o)throw Error(`reducer.reduce: Exceeded the maximum number of lists of actions, ${o}.\n  Use the optional \`maxUpdatesWithActions\` argument to increase this number.`)})),s||e.account.actionState.requireEquals(a.hash);const d=a.startIterating();for(let e=0;e<o;e++){let{element:e,isDummy:a}=d.Unsafe.next(),o=e.startIterating(),s=i;if(1===p){let e=_r.witness(t.actionType,(()=>o.data.get()[0]?.element??o.innerProvable.empty())),n=o.Constructor.emptyHash,i=o.nextHash(n,e);i=_r.if(a,n,i),o.hash.assertEquals(i),s=r(s,e)}else{for(let e=0;e<p;e++){let{element:e,isDummy:t}=o.Unsafe.next();s=_r.if(t,n,s,r(s,e))}o.assertAtEnd()}i=_r.if(a,n,i,s)}return d.assertAtEnd(),i},forEach(e,t,a){const n=rr(null);this.reduce(e,n,((e,a)=>(t(a),null)),null,a)},getActions(a){const n=t.actionType,r=o_.empty().hash,i=(e,t)=>o_.pushEvent({hash:e,data:[]},n.toFields(t)).hash;class o extends(qd.create(n,i,r)){}class p extends(qd.create(o,((e,t)=>o_.updateSequenceState(e,t.hash)),a?.fromActionState??o_.emptyActionState())){}let s=_r.witness(p,(()=>{let n=sl(e.address,a,e.tokenId).map((e=>e.actions.map((e=>t.actionType.fromFields(e.map(Yi))))));return p.from(n.map((e=>o.fromReverse(e))))}));return void 0!==a?.endActionState&&s.hash.assertEquals(a.endActionState),s},async fetchActions(a){let n=await pl(e.address,a,e.tokenId);if("error"in n)throw Error(JSON.stringify(n));return n.map((e=>e.actions.map((e=>t.actionType.fromFields(e.map(Yi))))))}}}(this)}})}static async compile({cache:e=At.FileSystemDefault,forceRecompile:t=!1}={}){let a=this._methods??[],n=a.map((({methodName:e})=>async(t,a,n,...r)=>{let i=new this(a,n);await i[e](t,...r)})),r=await this.analyzeMethods(),i=a.map((e=>r[e.methodName].gates)),{verificationKey:o,provers:p,verify:s}=await Yo({publicInputType:B_,publicOutputType:Oo,methodIntfs:a,methods:n,gates:i,proofSystemTag:this,cache:e,forceRecompile:t});return this._provers=p,this._verificationKey=o,{verificationKey:o,provers:p,verify:s}}static async digest(){let e=await this.analyzeMethods();return go(Object.values(e).map((e=>Yi(BigInt("0x"+e.digest))))).toBigInt().toString(16)}async deploy({verificationKey:e}={}){let t=this.newSelf("deploy");if(e??=this.constructor._verificationKey,void 0===e){if(dl())throw Error(`\`${this.constructor.name}.deploy()\` was called but no verification key was found.\nTry calling \`await ${this.constructor.name}.compile()\` first, this will cache the verification key in the background.`);{await pa();let[,t,a]=na.dummyVerificationKey();e={data:t,hash:Yi(a)}}}let{hash:a,data:n}=e,r=Yi.from(a);if(t.account.verificationKey.set({hash:r,data:n}),t.account.permissions.set(__.default()),t.requireSignature(),h_.attachToTransaction(t),tl(this.address)&&void 0!==el(this.address).zkapp?.verificationKey)return;await this.init();let i=this.self;kr(this,iu,{transactionId:br(this,iu,"f").transactionId,accountUpdate:t},"f"),0===Wl()?.numberOfRuns&&_r.asProver((()=>{i.update.appState.some((({isSome:e})=>!e.toBoolean()))&&console.warn("WARNING: the `init()` method was called without overwriting the entire state. This means that your zkApp will lack\nthe `provedState === true` status which certifies that the current state was verifiably produced by proofs (and not arbitrarily set by the zkApp developer).\nTo make sure the entire state is reset, consider adding this line to the beginning of your `init()` method:\nsuper.init();\n")}))}init(){this.account.provedState.requireEquals(Qi(!1));let e=this.self;for(let t=0;t<8;t++)h_.setValue(e.body.update.appState[t],Yi(0));let t=Qm(this.constructor).keys();for(let e of t){let t=this[e];void 0!==t&&void 0!==t.defaultValue&&t.set(t.defaultValue)}h_.attachToTransaction(e)}requireSignature(){this.self.requireSignature()}skipAuthorization(){C_.setLazyNone(this.self)}get self(){let e=Wl.has(),t=Zl.get();if(!e&&!t)return _u(this);let a=e?Wl.id():NaN;if(t&&t.this===this){let e=t.selfUpdate;return kr(this,iu,{accountUpdate:e,transactionId:a},"f"),e}let n=br(this,iu,"f");if(void 0!==n&&n.transactionId===a)return n.accountUpdate;let r=_u(this);return kr(this,iu,{transactionId:a,accountUpdate:r},"f"),r}newSelf(e){let t=Wl.has()?Wl.id():NaN,a=_u(this,e);return kr(this,iu,{transactionId:t,accountUpdate:a},"f"),a}get account(){return this.self.account}get network(){return this.self.network}get currentSlot(){return this.self.currentSlot}approve(e){this.self.approve(e)}send(e){return this.self.send(e)}get balance(){return this.self.balance}emitEventIf(e,t,a){let n=this.self,r=Object.keys(this.events);if(0===r.length)throw Error(`emitEvent: You are trying to emit an event without having declared the types of your events.\nMake sure to add a property \`events\` on ${this.constructor.name}, for example: \nclass ${this.constructor.name} extends SmartContract {\n  events = { 'my-event': Field }\n}`);let i=r.sort().indexOf(t);if(-1===i)throw Error(`emitEvent: Unknown event type "${t}". The declared event types are: ${r.join(", ")}.`);let o,p=this.events[t];o=1===r.length?p.toFields(a):[Yi(i),...p.toFields(a)];let s=i_.pushEvent(n.body.events,o);n.body.events=_r.if(e,i_,s,n.body.events)}emitEvent(e,t){this.emitEventIf(Qi(!0),e,t)}async fetchEvents(e=Bp.from(0),t){const a=Object.keys(this.events).sort();if(0===a.length)throw Error(`fetchEvents: You are trying to fetch events without having declared the types of your events.\nMake sure to add a property \`events\` on ${this.constructor.name}, for example: \nclass ${this.constructor.name} extends SmartContract {\n  events = { 'my-event': Field }\n}\nOr, if you want to access the events from the zkapp account ${this.address.toBase58()} without casting their types\nthen try Mina.fetchEvents('${this.address.toBase58()}') instead.`);const n={};return e.greaterThan(Bp.from(0)).toBoolean()&&(n.from=e),t&&(n.to=t),(await ol(this.address,this.self.body.tokenId,n)).map((e=>e.events.map((t=>{let{events:a,...n}=e;return{...n,event:t}})))).flat().map((e=>{if(1===a.length){let t=a[0],n=this.events[t].fromFields(e.event.data.map((e=>Yi(e))));return{...e,type:t,event:{data:n,transactionInfo:{transactionHash:e.event.transactionInfo.hash,transactionStatus:e.event.transactionInfo.status,transactionMemo:e.event.transactionInfo.memo}}}}{let t=Number(e.event.data[0]),n=a[t],r=e.event.data.slice(1),i=this.events[n].fromFields(r.map((e=>Yi(e))));return{...e,type:n,event:{data:i,transactionInfo:{transactionHash:e.event.transactionInfo.hash,transactionStatus:e.event.transactionInfo.status,transactionMemo:e.event.transactionInfo.memo}}}}}))}static runOutsideCircuit(e){(Wl()?.isFinalRunOutsideCircuit||on())&&_r.asProver(e)}static async analyzeMethods({printSummary:e=!1}={}){let t=this,a=t._methodMetadata??={},n=t._methods??[];if(!n.every((e=>e.methodName in a))&&!sn()){let r,i=!!Zl.get();i&&(r=Zl.enter(null));try{for(let r of n){let n,{rows:i,digest:o,gates:p,summary:s}=await Qo(B_,r,(async(e,a,i,...o)=>{let p=new t(a,i),s=await p[r.methodName](e,...o);return n=br(p,iu,"f").accountUpdate,s}));a[r.methodName]={actions:n.body.actions.data.length,rows:i,digest:o,gates:p},e&&console.log(r.methodName,s())}}finally{i&&Zl.leave(r)}}return a}}function _u(e,t){let a=m_.keepAll(e.address,e.tokenId),n=new h_(a,{},!0);return n.label=t?`${e.constructor.name}.${t}()`:`${e.constructor.name}, no method`,n}iu=new WeakMap,ou=new WeakMap;const mu={enter(e,t){let a={this:e,selfUpdate:t,selfLayout:new I_(t)};return{id:Zl.enter(a),context:a}}},uu={setKind({body:e,id:t},a){e.authorizationKind.isSigned=Qi(!1),e.authorizationKind.isProved=Qi(!0);let n=_r.witness(Yi,(()=>{let n=n_.getData(),r=void 0!==n;Pn(r||void 0!==a,"Called `setKind()` outside the prover without passing in `priorAccountUpdates`.");let i=r?n.accountUpdate.id:t,o=a?.toFlatList({mutate:!1});o??=n.transaction.accountUpdates,o=o.filter((e=>e.id!==i));let p=[...o].reverse().find((t=>t.update.verificationKey.isSome.and(t.tokenId.equals(e.tokenId)).and(t.publicKey.equals(e.publicKey)).toBoolean()));if(void 0!==p)return p.body.update.verificationKey.value.hash;try{let t=el(e.publicKey,e.tokenId);return t.zkapp?.verificationKey?.hash??Yi(0)}catch{return Yi(0)}}));e.authorizationKind.verificationKeyHash=n},setLazyProof(e,t,a){this.setKind(e,a),e.authorization={},e.lazyAuthorization={...t,kind:"lazy-proof"}}},cu=!1;function fu(e,t){let{transaction:a,index:n,accountUpdate:r}=t;!function(e,t,a,n){delete a.id,delete a.callDepth,delete n.id,delete n.callDepth,JSON.stringify(a)!==JSON.stringify(n)&&(console.log("transaction:",N_.toPretty(e)),console.log("index",t),console.log("inconsistent account updates:"),console.log("update created by the prover:"),console.log(a),console.log("update created in transaction block:"),console.log(n))}(a,n,e.toPretty(),r.toPretty());let i=Yl()?.get(e)?.children.mutable;if(void 0===i)return;let o=[],p=r.body.callDepth;for(let e=n;e<a.accountUpdates.length;e++){let t=a.accountUpdates[e];if(t.body.callDepth<=p)break;t.body.callDepth===p+1&&o.push(t)}let s=o.length;for(let e=0;e<s;e++){let t=o[e],r=i[e].mutable;if(!r)return;fu(r,{transaction:a,index:n,accountUpdate:t})}}const hu=Vd.create(y_.prototype.innerProvable,y_._nextHash,y_.emptyHash);class gu extends(lp({forest:hu,mayUseToken:h_.MayUseToken.type})){}const wu=qd.create(gu),vu=h_.MayUseToken;class yu{constructor(e,t,a){this.currentLayer={forest:e,mayUseToken:t},this.unfinishedParentLayers=wu.empty(),this.selfToken=a}static create(e,t){return new yu(hu.startIteratingFromLast(e),vu.ParentsOwnToken,t)}next(){let{accountUpdate:e,children:t}=this.currentLayer.forest.previous(),a=hu.startIteratingFromLast(t),n={forest:a,mayUseToken:vu.InheritFromParent},r=e.unhash(),i=r.tokenId.equals(this.selfToken),o=_r.equal(vu.type,r.body.mayUseToken,this.currentLayer.mayUseToken),p=f_.derive(r.publicKey,r.tokenId).equals(this.selfToken),s=o.not().or(p);a.jumpToStartIf(s);let d=this.currentLayer.forest.isAtStart(),l=a.isAtStart();this.unfinishedParentLayers.pushIf(d.not(),this.currentLayer);let _=this.unfinishedParentLayers.popIf(l);return this.currentLayer=_r.if(l,gu,_,n),{accountUpdate:r,usesThisToken:i}}assertFinished(e){Pn(this.currentLayer.forest.isAtStart(),e??"TokenAccountUpdateIterator not finished")}}function bu(e,t,a,n){return Xl(a)&&(a=a.self),a instanceof h_&&(a.tokenId.assertEquals(t),e.approve(a)),a instanceof Fs&&(a=h_.defaultAccountUpdate(a,t),e.approve(a)),a.label||(a.label=`${e.label??"Unlabeled"}.${n}`),a}class ku extends lu{async deploy(e){await super.deploy(e),this.account.permissions.set({...__.default(),access:__.proofOrSignature()}),this.account.isNew.requireEquals(Qi(!0))}deriveTokenId(){return f_.derive(this.address,this.tokenId)}get internal(){return function(e){return{mint({address:t,amount:a}){let n=f_.derive(e.publicKey,e.tokenId),r=bu(e,n,t,"token.mint()");return r.balance.addInPlace(a),r},burn({address:t,amount:a}){let n=f_.derive(e.publicKey,e.tokenId),r=bu(e,n,t,"token.burn()");return r.balance.subInPlace(a),r.body.useFullCommitment=Qi(!0),C_.setLazySignature(r),r},send({from:t,to:a,amount:n}){let r=f_.derive(e.publicKey,e.tokenId),i=bu(e,r,t,"token.send() (sender)");i.balance.subInPlace(n),i.body.useFullCommitment=Qi(!0),C_.setLazySignature(i);let o=bu(e,r,a,"token.send() (receiver)");return o.balance.addInPlace(n),o}}}(this.self)}forEachUpdate(e,t){let a=yu.create(e,this.deriveTokenId());for(let e=0;e<this.constructor.MAX_ACCOUNT_UPDATES;e++){let{accountUpdate:e,usesThisToken:n}=a.next();t(e,n)}a.assertFinished(`Number of account updates to approve exceed the supported limit of ${this.constructor.MAX_ACCOUNT_UPDATES}.\n`),this.approve(e)}checkZeroBalanceChange(e){let t=qp.zero;this.forEachUpdate(e,((e,a)=>{t=t.add(_r.if(a,e.balanceChange,qp.zero))})),t.assertEquals(0)}async approveAccountUpdate(e){let t=Su([e]);await this.approveBase(t)}async approveAccountUpdates(e){let t=Su(e);await this.approveBase(t)}async transfer(e,t,a){let n=this.deriveTokenId();e instanceof Fs&&((e=h_.defaultAccountUpdate(e,n)).requireSignature(),e.label=`${this.constructor.name}.transfer() (from)`),t instanceof Fs&&((t=h_.defaultAccountUpdate(t,n)).label=`${this.constructor.name}.transfer() (to)`),e.balanceChange=qp.from(a).neg(),t.balanceChange=qp.from(a);let r=Su([e,t]);await this.approveBase(r)}}function Su(e){let t=e.map((e=>e instanceof h_?e.extractTree():e));return y_.fromReverse(t)}ku.MAX_ACCOUNT_UPDATES=20,class extends ku{}.MAX_ACCOUNT_UPDATES=9;class xu extends(lp({value:Yi})){constructor(e){super({value:Yi(e)})}isNull(){return this.value.equals(Iu().value)}toField(){return this.value}toString(){const e=Number(this.value.toString());return String.fromCharCode(e)}static fromString(e){return new xu(e.charCodeAt(0))}static check(e){Yp.rangeCheckN(16,e.value)}}const Tu={...rr({values:_r.Array(xu,128)}),toValue:({values:e})=>e.map((e=>e.toString())).join("").replace(/[^ -~]+/g,""),fromValue:e=>"object"==typeof e?e:{values:Nu(e.split("").map((e=>xu.fromString(e))),128)}};class Eu extends(lp(Tu)){static fromCharacters(e){return new Eu({values:Nu(e,this.maxLength)})}maxLength(){return this.constructor.maxLength}computeLengthAndMask(){let e=this.values.length,t=Yi(0),a=[],n=Qi(!0);for(let r=0;r<e;r++){let e=this.values[r].isNull();a[r]=e.and(n),n=e.not().and(n),t.add(n.toField())}return a[e]=n,this._length=t,this._mask=a,{mask:a,length:t}}lengthMask(){return this._mask??this.computeLengthAndMask().mask}length(){return this._length??this.computeLengthAndMask().length}equals(e){return _r.equal(Eu,this,e)}append(e){let t=this.maxLength();this.length().add(e.length()).assertLessThan(t);let a=this.values,n=Nu(e.values,t),r=[];for(let e=0;e<t+1;e++)r[e]=a.slice(0,e).concat(n.slice(0,t-e));let i=[],o=this.lengthMask();for(let e=0;e<t;e++){let t=r.map((t=>t[e]));i[e]=_r.switch(o,xu,t)}return Eu.fromCharacters(i)}hash(){return ho.hash(this.values.map((e=>e.value)))}substring(e,t){return Eu.fromCharacters(this.values.slice(e,t))}toString(){return Eu.toValue(this)}static fromString(e){if(e.length>this.maxLength)throw Error("CircuitString.fromString: input string exceeds max length!");return new Eu(Eu.fromValue(e))}}Eu.maxLength=128;let Iu=()=>new xu(Yi(0));function Nu([...e],t){let a=Iu();for(let n=e.length;n<t;n++)e[n]=a;return e}class Cu extends Ip{constructor(e,t){super(),this.isLefts=e,this.siblings=t}computeRootAndKey(e){let t=e;const a=this.isLefts,n=this.siblings;let r=Yi(0);for(let e=0;e<255;e++){const i=_r.if(a[e],t,n[e]),o=_r.if(a[e],n[e],t);t=ho.hash([i,o]);const p=_r.if(a[e],Yi(0),Yi(1));r=r.mul(2).add(p)}return[t,r]}computeRootAndKeyV2(e){this.isLefts[0].assertTrue();let t=e;const a=this.isLefts,n=this.siblings;let r=Yi(0);for(let e=0;e<255;e++){const i=_r.if(a[e],t,n[e]),o=_r.if(a[e],n[e],t);t=ho.hash([i,o]);const p=_r.if(a[e],Yi(0),Yi(1));r=r.mul(2).add(p)}return[t,r]}}vr([Cp(Qi,255),yr("design:type",Array)],Cu.prototype,"isLefts",void 0),vr([Cp(Yi,255),yr("design:type",Array)],Cu.prototype,"siblings",void 0),lp({publicKey:eo,public:{nullifier:eo,s:Li},private:{c:Yi,g_r:eo,h_m_pk_r:eo}});ee(101n),ee((1n<<31n)-1n),ee((1n<<64n)-(1n<<32n)+1n),ee((1n<<255n)-19n);let Au=ee((1n<<256n)-(1n<<32n)-977n),Bu=ee((1n<<256n)-0x14551231950b75fc4402da1732fc9bebfn);ee(0x01ae3a4617c510eac63b05c06ca1493b1a22d9f300f5138f1ef3622fba094800170b5d44300000008508c00000000001n),ee(0x12ab655e9a2ca55660b44d1e5c37b00159aa76fed00000010a11800000000001n);function Fu(e,t,a){return Vu([e,Yi(0)],t,a)}function qu({prefix:e,keyType:t,valueType:a,key:n,value:r,previousValue:i}){let o=(a=ar.get(a)).sizeInFields()%2==0?[]:[Yi(0)],p=Vu([e,Yi(0)],t,n),s=Qi(void 0!==i).toField(),d=void 0!==i?_r.if(i.isSome,ho.hashPacked(a,i.value),Yi(0)):Yi(0),l=ho.hashPacked(a,r);return[...a.toFields(r),...o,s,d,p,l]}function Vu(e,t,a){let n=ho.initialState();if(n=ho.update(n,e),void 0!==t){let e=So(ar.get(t).toInput(a));n=ho.update(n,e)}return n[0]}Au.modulus,Bu.modulus,xe.modulus,xe.order,xe.a,xe.b,xe.one,xe.endoBase,xe.endoScalar,Te.modulus,Te.order,Te.a,Te.b,Te.one,Te.endoBase,Te.endoScalar;class Ou extends(lp({key:Yi,value:Yi,usesPreviousValue:Qi,previousValue:Yi,prefix:Sr.withEmpty([])})){static fromAction(e){Pn(e.length>=4,"invalid action size");let[t,a,n,r]=e.slice(-4),i=t.assertBool(),o=Sr.from(e.slice(0,-4));return new Ou({usesPreviousValue:i,previousValue:a,key:n,value:r,prefix:o})}static hash(e){let t=_r.witnessFields(3,(()=>{let t=e.prefix.get(),a=vo(r.event);return ho.update(a,t)}));return ho.update(t,[e.usesPreviousValue.toField(),e.previousValue,e.key,e.value])[0]}}function Pu(e,t){return bo(r.sequenceEvents,[e,Ou.hash(t)])}class Du extends(qd.create(Ou,Pu,o_.empty().hash)){}class Uu extends(lp({action:Ou,isCheckPoint:Qi})){static hash({action:e,isCheckPoint:t}){let a=_r.witnessFields(3,(()=>{let t=e.prefix.get(),a=vo(r.event);return ho.update(a,t)}));return ho.update(a,[e.usesPreviousValue.toField().add(t.toField().mul(2)),e.previousValue,e.key,e.value])[0]}}class zu extends(qd.create(Uu,((e,t)=>ho.hash([e,Uu.hash(t)])),o_.empty().hash)){}async function Ru(e,t,a){let n=await pl(t.address,{endActionState:a},t.tokenId);if("error"in n)throw Error(JSON.stringify(n));let r=n.map((e=>e.actions.map((e=>Ou.fromAction(e.map(Yi)))).reverse())),i=new(zd(e)),o=new Map;return Mu(r,i,o),{merkleMap:i,valueMap:o}}function Mu(e,t,a){let n=t.clone();for(let r of e){let e=!0,i=[];for(let t of r){let{key:a,value:r,usesPreviousValue:o,previousValue:p,prefix:s}=Ou.toValue(t),d=n.getOption(a).orElse(0n);if(o&&d.toBigInt()!==p){e=!1;break}n.set(a,r),i.push({key:a,fullValue:s})}if(e){t.overwrite(n);for(let{key:e,fullValue:t}of i)a&&a.set(e,t)}else n.overwrite(t)}}class ju extends(Vd.create(Du,((e,t)=>Ks.updateSequenceState(e,t.hash)),Ks.emptyActionState())){}class $u extends(lp({root:Yi,length:Yi,actionState:Yi})){static emptyFromHeight(e){let t=new(zd(e));return new $u({root:t.root,length:t.length,actionState:Ks.emptyActionState()})}}function Lu({maxActionsPerProof:e,maxActionsPerUpdate:t},a,n,r){n.currentHash.assertEquals(a.actionState);let i=zu.empty();for(let a=0;a<e;a++){let e=n.next().startIterating(),a=Qi(!1);for(let n=0;n<t;n++){let{element:t,isDummy:n}=e.Unsafe.next(),r=e.isAtEnd();[a,r]=[a.or(r),r.and(a.not())],i.pushIf(n.not(),new Uu({action:t,isCheckPoint:r}))}e.assertAtEnd(`Expected at most ${t} actions per account update.`)}n.assertAtEnd(),a.root.assertEquals(r.root),a.length.assertEquals(r.length);let o=r.clone(),p=Qi(!0);return i.forEach(e,((e,t)=>{let{action:a,isCheckPoint:n}=e,{key:i,value:s,usesPreviousValue:d,previousValue:l}=a,_=o.setIf(t.not(),i,s).orElse(0n).equals(l),m=d.implies(_);p=p.and(m),r.overwriteIf(n.and(p),o),p=_r.if(n,Qi(!0),p),o.overwriteIf(n,r)})),{root:r.root,length:r.length,actionState:n.currentHash}}function Hu(e,t){class a extends(qd.create(Du,((e,t)=>Ks.updateSequenceState(e,t.hash)),e.currentHash)){}let n=a.empty(),r=0;for(;!e.isAtEnd().toBoolean();){let a=e.data.get()[e._index("next")].element.data.get().length;if(Pn(a<=t,"Actions in one update exceed maximum batch size"),r+a>t)break;let i=e.next();n.push(i),r+=a}return n.startIterating()}function Ku(e,t){let{logTotalCapacity:a=30,maxActionsPerUpdate:n=4,maxActionsPerProof:r}=t??{};const i=a+1;class o extends(zd(i)){}let p={_contract:void 0,_contractClass:void 0,_merkleMap:void 0,_valueMap:void 0,get contract(){return $(p._contract,"Must call `setContractInstance()` first")}};const s=async()=>{let e=(await p.contract.offchainState.fetch())?.actionState;return Pn(void 0!==e,"Could not fetch action state"),e},d=async()=>{if(void 0!==p._merkleMap&&void 0!==p._valueMap)return{merkleMap:p._merkleMap,valueMap:p._valueMap};let e=await s(),{merkleMap:t,valueMap:a}=await Ru(i,p.contract,e);return p._merkleMap=t,p._valueMap=a,{merkleMap:t,valueMap:a}};let l=function({maxActionsPerProof:e=22,maxActionsPerUpdate:t=4,logTotalCapacity:a=30}={}){class n extends(zd(a+1)){}let r=Ho({name:"merkle-map-rollup",publicInput:$u,publicOutput:$u,methods:{firstBatch:{privateInputs:[ju,n],method:async(a,n,r)=>Lu({maxActionsPerProof:e,maxActionsPerUpdate:t},a,n,r)},nextBatch:{privateInputs:[ju,n,Ko],async method(a,n,r,i){i.verify(),_r.assertEqual($u,i.publicInput,a);let o=i.publicOutput;return Lu({maxActionsPerProof:e,maxActionsPerUpdate:t},o,n,r)}}}}),i=Ho.Proof(r),o=!1;return{Proof:i,program:r,async compile(){if(o)return;let e=await r.compile();return o=!0,e},async prove(t,n){Pn(t.height===a+1,"Tree height must match"),dl()&&await this.compile(),t=t.clone();let o=n.startIterating(),p=new $u({root:t.root,length:t.length,actionState:o.currentHash});if(!dl()){Mu(n.data.get().map((({element:e})=>e.data.get().map((({element:e})=>e)).reverse())).reverse(),t);let e=new $u({root:t.root,length:t.length,actionState:o.hash});return{proof:await i.dummy(p,e,2,15),tree:t,nProofs:0}}let s=Hu(o,e),d=await r.firstBatch(p,s,t);t.root=d.publicOutput.root,t.length=d.publicOutput.length;let l=1;for(let a=1;!o.isAtEnd().toBoolean();a++){l++;let a=Hu(o,e);d=await r.nextBatch(p,a,t,d),t.root=d.publicOutput.root,t.length=d.publicOutput.length}return{proof:d,tree:t,nProofs:l}}}}({logTotalCapacity:a,maxActionsPerProof:r,maxActionsPerUpdate:n});function _(){return Ql($(p._contractClass,"Must call `setContractInstance()` or `setContractClass()` first"))}async function m(e,t){let a=function(){try{return _()}catch{return p.contract}}().offchainState.getAndRequireEquals(),n=await _r.witnessAsync(o,(async()=>(await d()).merkleMap));n.root.assertEquals(a.root,"root mismatch"),n.length.assertEquals(a.length,"length mismatch");let r=n.getOption(e);const i=Dd(t);let s=await _r.witnessAsync(i,(async()=>{let{valueMap:a}=await d(),n=a.get(e.toBigInt());if(void 0===n)return i.none();let r=function(e,t){let a=(e=ar.get(e)).sizeInFields(),n=a%2==0?0:1;Pn(t.length===a+n,"invalid action size");let r=e.fromFields(t.slice(0,a));return e.check(r),r}(t,n);return i.from(r)})),l=ho.hashPacked(t,s.value).equals(r.value),m=s.isSome.or(r.isSome).not();return Pn(l.or(m),"value hash mismatch"),s}function u(e,t){t=ar.get(t);const a=Yi(e);let n=Dd(t);return{_type:t,overwrite(e){let n=qu({prefix:a,keyType:void 0,valueType:t,key:void 0,value:t.fromValue(e)}),r=_().self;r.body.actions=o_.pushEvent(r.body.actions,n)},update({from:e,to:r}){let i=qu({prefix:a,keyType:void 0,valueType:t,key:void 0,value:t.fromValue(r),previousValue:n.fromValue(e)}),o=_().self;o.body.actions=o_.pushEvent(o.body.actions,i)},async get(){let e=Fu(a,void 0,void 0);return await m(e,t)}}}function c(e,t,a){t=ar.get(t),a=ar.get(a);const n=Yi(e);let r=Dd(a);return{_keyType:t,_valueType:a,overwrite(e,r){let i=qu({prefix:n,keyType:t,valueType:a,key:e,value:a.fromValue(r)}),o=_().self;o.body.actions=o_.pushEvent(o.body.actions,i)},update(e,{from:i,to:o}){let p=qu({prefix:n,keyType:t,valueType:a,key:e,value:a.fromValue(o),previousValue:r.fromValue(i)}),s=_().self;s.body.actions=o_.pushEvent(s.body.actions,p)},async get(e){let r=Fu(n,t,e);return await m(r,a)}}}return{setContractInstance(e){p._contract=e,p._contractClass=e.constructor},setContractClass(e){p._contractClass=e},async compile(){await l.compile()},async createSettlementProof(){let{merkleMap:e}=await d(),t=await s(),a=await async function(e,t){class a extends(qd.create(Du,((e,t)=>o_.updateSequenceState(e,t.hash)),t?.fromActionState??o_.emptyActionState())){}let n=await pl(e.address,t,e.tokenId);if("error"in n)throw Error(JSON.stringify(n));let r=n.map((e=>e.actions.map((e=>Ou.fromAction(e.map(Yi))))));return a.from(r.map((e=>Du.fromReverse(e))))}(p.contract,{fromActionState:t}),n=await l.prove(e,a),{merkleMap:r,valueMap:o}=await Ru(i,p.contract);return p._merkleMap=r,p._valueMap=o,n.proof},Proof:l.Proof,async settle(e){e.verify();let t=_().offchainState.getAndRequireEquals();_r.assertEqual($u,t,e.publicInput),_().account.actionState.requireEquals(e.publicOutput.actionState),_().offchainState.set(e.publicOutput)},fields:Object.fromEntries(Object.entries(e).map((([e,t],a)=>[e,"offchain-field"===t.kind?u(a,t.type):c(a,t.keyType,t.valueType)]))),commitments:()=>Xm($u.emptyFromHeight(i))}}Ku.Map=function(e,t){return{kind:"offchain-map",keyType:e,valueType:t}},Ku.Field=function(e){return{kind:"offchain-field",type:e}},Ku.Commitments=$u;const Ju=o_.empty().hash,Wu=o_.emptyActionState();function Gu(e,t){return qd.create(Xu(e),((e,t)=>bo(r.sequenceEvents,[e,t.hash])),t??Wu)}function Xu(e){return qd.create(Zu(e),((e,t)=>bo(r.sequenceEvents,[e,t.hash])),Ju)}function Zu(e){let t=ar.get(e);return ls.create(t,(e=>bo(r.event,t.toFields(e))))}function Yu(e){return qd.create(Yi,((e,t)=>bo(r.sequenceEvents,[e,t])),e??Wu)}Gu.fromFields=function(e,t,a){let n=ar.get(e);const r=Zu(n),i=Xu(n),o=Gu(n,a?Yi(a):void 0);let p=t.map((e=>e.map((e=>n.fromFields(e.map(Yi)))))).map((e=>e.map((e=>r.hash(e)))));return o.from(p.map((e=>i.from(e))))};class Qu{constructor({actionType:e,batchSize:t,maxUpdatesPerProof:a=300,maxUpdatesFinalProof:n=100,maxActionsPerUpdate:r=Math.min(t,5)}){this.batchSize=t,this.actionType=ar.get(e),this.Batch=ec(this.actionType),this.maxUpdatesFinalProof=n,this.program=function(e){let t=Ho({name:"action-stack-prover",publicInput:Yi,publicOutput:ac,methods:{proveChunk:{privateInputs:[Ko,Qi,Sr.withEmpty([])],async method(t,a,n,r){a.verifyIf(n),_r.assertEqualIf(n,Yi,t,a.publicInput);let i={actions:t,stack:Wu},o=_r.if(n,ac,a.publicOutput,i);return rc(e,o,r)}}}});return Object.assign(t,{maxUpdatesPerProof:e})}(a),this.BatchProof=Ho.Proof(this.program),M(r<=t,"Invalid maxActionsPerUpdate, must be smaller than the batch size because we process entire updates at once."),this.maxActionsPerUpdate=r}static get initialActionState(){return Wu}static get initialActionStack(){return Wu}contractClass(){return $(this._contractClass,"Contract instance or class must be set before calling this method")}contract(){return Ql(this.contractClass())}setContractInstance(e){this._contract=e,this._contractClass=e.constructor}setContractClass(e){this._contractClass=e}dispatch(e){let t=this.contract().self,a=this.actionType.toFields(this.actionType.fromValue(e));t.body.actions=o_.pushEvent(t.body.actions,a)}dispatchIf(e,t){let a=this.contract().self,n=this.actionType.toFields(this.actionType.fromValue(t)),r=o_.pushEvent(a.body.actions,n);a.body.actions=_r.if(e,o_,r,a.body.actions)}processBatch({batch:e,proof:t},a){let{actionType:n,batchSize:r}=this,i=this.contract(),{useOnchainStack:o,processedActionState:p,onchainActionState:s,onchainStack:d}=e,l=o.not();i.actionState.requireEquals(p),i.actionStack.requireEqualsIf(o,d),i.account.actionState.requireEqualsIf(l,s);let{isRecursive:_}=e;t.verifyIf(_),_r.assertEqualIf(_,Yi,t.publicInput,s);let m={actions:s,stack:Wu},u=_r.if(_,ac,t.publicOutput,m),c=rc(this.maxUpdatesFinalProof,u,e.witnesses);_r.assertEqualIf(l,Yi,c.actions,p);let f=_r.if(o,d,c.stack),{stack:h}=e;h=h.clone(),h.hash.assertEquals(f);let g=Sr.witness((()=>{let e=h.toArrayUnconstrained().get(),t=0,a=0;for(let n of e.reverse()){if(a+=n.lengthUnconstrained().get(),a>r)break;t++}return t})),w=function(e){return qd.create(Zu(e))}(n).empty();for(let e=0;e<r;e++){let t=_r.witness(Qi,(()=>e<g.get())),a=h.popIfUnsafe(t);a=_r.if(t,h.innerProvable,a,h.innerProvable.empty()),a.forEach(this.maxActionsPerUpdate,((e,t)=>{w.pushIf(t.not(),e)}));let n=o_.updateSequenceState(p,a.hash);p=_r.if(t,n,p)}const v=Zu(n),y=v.empty();w.forEach(r,((e,t,n)=>{e=_r.if(t,v,y,e),a(e.unhash(),t,n)})),i.actionState.set(p),i.actionStack.set(h.hash)}async compile(){return await this.program.compile()}async prepareBatches(){let{batchSize:e,actionType:t}=this,a=$(this._contract,"Contract instance must be set before proving actions"),n=$(await a.actionState.fetch(),"Could not fetch action state").toBigInt(),{endActionState:r,witnesses:i,actions:o}=await async function(e,t,a){let n=await pl(e.address,{fromActionState:Yi(t)},e.tokenId);if("error"in n)throw Error(JSON.stringify(n));let r=n.map((({actions:e})=>e.map((e=>e.map(BigInt))).reverse())),i=Gu.fromFields(a,r,t),o=t,p=[],s=r.map((e=>e.reduce(tc,gd.empty().hash)));for(let e of s)p.push({hash:e,stateBefore:o}),o=gd.updateSequenceState(o,e);return{endActionState:o,witnesses:p,actions:i}}(a,n,this.actionType);if(0===i.length)return[];let{proof:p,isRecursive:s,finalWitnesses:d}=await async function(e,t,a,n){let r=t.slice(0,n),i=t.slice(n),{isEmpty:o,proof:p}=await async function(e,t,a){e=Yi(e);let{maxUpdatesPerProof:n}=a;const r=Ho.Proof(a);let i=t.length,o=Qi(0===i),p=Yu().empty();for(let e of[...t].reverse())void 0!==e&&p.push(Yi(e.hash));if(!dl()){let a=t[0]?.stateBefore??e;return{isEmpty:o,proof:await r.dummy(e,{actions:Yi(a),stack:p.hash},1,14)}}let s=[],d=Math.ceil(i/n);for(let e=0,a=0;e<d;e++){let r=[];for(let e=0;e<n;e++,a++)r[e]=t[a];s[e]=Sr.from(r)}let l=await r.dummy(Yi(0),{actions:Wu,stack:Wu},1,14);for(let t=d-1;t>=0;t--){let n=Qi(t<d-1);l=await a.proveChunk(e,l,n,s[t])}return l.publicOutput.stack.assertEquals(p.hash,"Stack hash mismatch"),{isEmpty:o,proof:l}}(e,i,a);return{proof:p,isRecursive:o.not(),finalWitnesses:Sr.from(r)}}(r,i,this.program,this.maxUpdatesFinalProof),l=Gu(t).fromReverse(o.toArrayUnconstrained().get()),_=[],m={isRecursive:s,onchainActionState:Yi(r),witnesses:d},u=l.toArrayUnconstrained().get(),c=Yi(n),f=Yi(0),h=Qi(!1),g=u.length-1;for(;g>=0;){_.push({...m,useOnchainStack:h,processedActionState:c,onchainStack:f,stack:l.clone()});let t=0;for(;g>=0&&(t+=u[g].lengthUnconstrained().get(),!(t>e));){let e=l.pop();c=o_.updateSequenceState(c,e.hash),g--}f=l.hash,h=Qi(!0)}return l.isEmpty().assertTrue(),_.map((e=>({proof:p,batch:e})))}}function ec(e){return lp({useOnchainStack:Qi,processedActionState:Yi,onchainActionState:Yi,onchainStack:Yi,stack:Gu(e),isRecursive:Qi,witnesses:Sr.withEmpty([])})}function tc(e,t){return hs(r.sequenceEvents,[e,hs(r.event,t)])}class ac extends(lp({actions:Yi,stack:Yi})){}class nc extends(Dd(lp({hash:Yi,stateBefore:Yi}))){}function rc(e,t,a){let n=Yu(t.stack).empty(),r=t.actions;for(let t=e-1;t>=0;t--){let{didPop:e,state:i,hash:o}=ic(r,t,a);n.pushIf(e,o),r=i}return new ac({actions:r,stack:n.hash})}function ic(e,t,a){let{isSome:n,value:r}=_r.witness(nc,(()=>a.get()[t])),i=o_.updateSequenceState(r.stateBefore,r.hash);return _r.assertEqualIf(n,Yi,i,e),{didPop:n,state:_r.if(n,r.stateBefore,e),hash:r.hash}}const oc=gr,pc=zd;var sc;!function(e){e.memoizeWitness=oc,e.IndexedMerkleMap=pc,e.OffchainState=Ku,e.OffchainStateCommitments=class extends $u{},e.BatchReducer=class extends Qu{},e.ActionBatch=ec}(sc||(sc={})),Error.stackTraceLimit=1e5},472:e=>{"use strict";e.exports=JSON.parse('[[[0,44],"disallowed_STD3_valid"],[[45,46],"valid"],[[47,47],"disallowed_STD3_valid"],[[48,57],"valid"],[[58,64],"disallowed_STD3_valid"],[[65,65],"mapped",[97]],[[66,66],"mapped",[98]],[[67,67],"mapped",[99]],[[68,68],"mapped",[100]],[[69,69],"mapped",[101]],[[70,70],"mapped",[102]],[[71,71],"mapped",[103]],[[72,72],"mapped",[104]],[[73,73],"mapped",[105]],[[74,74],"mapped",[106]],[[75,75],"mapped",[107]],[[76,76],"mapped",[108]],[[77,77],"mapped",[109]],[[78,78],"mapped",[110]],[[79,79],"mapped",[111]],[[80,80],"mapped",[112]],[[81,81],"mapped",[113]],[[82,82],"mapped",[114]],[[83,83],"mapped",[115]],[[84,84],"mapped",[116]],[[85,85],"mapped",[117]],[[86,86],"mapped",[118]],[[87,87],"mapped",[119]],[[88,88],"mapped",[120]],[[89,89],"mapped",[121]],[[90,90],"mapped",[122]],[[91,96],"disallowed_STD3_valid"],[[97,122],"valid"],[[123,127],"disallowed_STD3_valid"],[[128,159],"disallowed"],[[160,160],"disallowed_STD3_mapped",[32]],[[161,167],"valid",[],"NV8"],[[168,168],"disallowed_STD3_mapped",[32,776]],[[169,169],"valid",[],"NV8"],[[170,170],"mapped",[97]],[[171,172],"valid",[],"NV8"],[[173,173],"ignored"],[[174,174],"valid",[],"NV8"],[[175,175],"disallowed_STD3_mapped",[32,772]],[[176,177],"valid",[],"NV8"],[[178,178],"mapped",[50]],[[179,179],"mapped",[51]],[[180,180],"disallowed_STD3_mapped",[32,769]],[[181,181],"mapped",[956]],[[182,182],"valid",[],"NV8"],[[183,183],"valid"],[[184,184],"disallowed_STD3_mapped",[32,807]],[[185,185],"mapped",[49]],[[186,186],"mapped",[111]],[[187,187],"valid",[],"NV8"],[[188,188],"mapped",[49,8260,52]],[[189,189],"mapped",[49,8260,50]],[[190,190],"mapped",[51,8260,52]],[[191,191],"valid",[],"NV8"],[[192,192],"mapped",[224]],[[193,193],"mapped",[225]],[[194,194],"mapped",[226]],[[195,195],"mapped",[227]],[[196,196],"mapped",[228]],[[197,197],"mapped",[229]],[[198,198],"mapped",[230]],[[199,199],"mapped",[231]],[[200,200],"mapped",[232]],[[201,201],"mapped",[233]],[[202,202],"mapped",[234]],[[203,203],"mapped",[235]],[[204,204],"mapped",[236]],[[205,205],"mapped",[237]],[[206,206],"mapped",[238]],[[207,207],"mapped",[239]],[[208,208],"mapped",[240]],[[209,209],"mapped",[241]],[[210,210],"mapped",[242]],[[211,211],"mapped",[243]],[[212,212],"mapped",[244]],[[213,213],"mapped",[245]],[[214,214],"mapped",[246]],[[215,215],"valid",[],"NV8"],[[216,216],"mapped",[248]],[[217,217],"mapped",[249]],[[218,218],"mapped",[250]],[[219,219],"mapped",[251]],[[220,220],"mapped",[252]],[[221,221],"mapped",[253]],[[222,222],"mapped",[254]],[[223,223],"deviation",[115,115]],[[224,246],"valid"],[[247,247],"valid",[],"NV8"],[[248,255],"valid"],[[256,256],"mapped",[257]],[[257,257],"valid"],[[258,258],"mapped",[259]],[[259,259],"valid"],[[260,260],"mapped",[261]],[[261,261],"valid"],[[262,262],"mapped",[263]],[[263,263],"valid"],[[264,264],"mapped",[265]],[[265,265],"valid"],[[266,266],"mapped",[267]],[[267,267],"valid"],[[268,268],"mapped",[269]],[[269,269],"valid"],[[270,270],"mapped",[271]],[[271,271],"valid"],[[272,272],"mapped",[273]],[[273,273],"valid"],[[274,274],"mapped",[275]],[[275,275],"valid"],[[276,276],"mapped",[277]],[[277,277],"valid"],[[278,278],"mapped",[279]],[[279,279],"valid"],[[280,280],"mapped",[281]],[[281,281],"valid"],[[282,282],"mapped",[283]],[[283,283],"valid"],[[284,284],"mapped",[285]],[[285,285],"valid"],[[286,286],"mapped",[287]],[[287,287],"valid"],[[288,288],"mapped",[289]],[[289,289],"valid"],[[290,290],"mapped",[291]],[[291,291],"valid"],[[292,292],"mapped",[293]],[[293,293],"valid"],[[294,294],"mapped",[295]],[[295,295],"valid"],[[296,296],"mapped",[297]],[[297,297],"valid"],[[298,298],"mapped",[299]],[[299,299],"valid"],[[300,300],"mapped",[301]],[[301,301],"valid"],[[302,302],"mapped",[303]],[[303,303],"valid"],[[304,304],"mapped",[105,775]],[[305,305],"valid"],[[306,307],"mapped",[105,106]],[[308,308],"mapped",[309]],[[309,309],"valid"],[[310,310],"mapped",[311]],[[311,312],"valid"],[[313,313],"mapped",[314]],[[314,314],"valid"],[[315,315],"mapped",[316]],[[316,316],"valid"],[[317,317],"mapped",[318]],[[318,318],"valid"],[[319,320],"mapped",[108,183]],[[321,321],"mapped",[322]],[[322,322],"valid"],[[323,323],"mapped",[324]],[[324,324],"valid"],[[325,325],"mapped",[326]],[[326,326],"valid"],[[327,327],"mapped",[328]],[[328,328],"valid"],[[329,329],"mapped",[700,110]],[[330,330],"mapped",[331]],[[331,331],"valid"],[[332,332],"mapped",[333]],[[333,333],"valid"],[[334,334],"mapped",[335]],[[335,335],"valid"],[[336,336],"mapped",[337]],[[337,337],"valid"],[[338,338],"mapped",[339]],[[339,339],"valid"],[[340,340],"mapped",[341]],[[341,341],"valid"],[[342,342],"mapped",[343]],[[343,343],"valid"],[[344,344],"mapped",[345]],[[345,345],"valid"],[[346,346],"mapped",[347]],[[347,347],"valid"],[[348,348],"mapped",[349]],[[349,349],"valid"],[[350,350],"mapped",[351]],[[351,351],"valid"],[[352,352],"mapped",[353]],[[353,353],"valid"],[[354,354],"mapped",[355]],[[355,355],"valid"],[[356,356],"mapped",[357]],[[357,357],"valid"],[[358,358],"mapped",[359]],[[359,359],"valid"],[[360,360],"mapped",[361]],[[361,361],"valid"],[[362,362],"mapped",[363]],[[363,363],"valid"],[[364,364],"mapped",[365]],[[365,365],"valid"],[[366,366],"mapped",[367]],[[367,367],"valid"],[[368,368],"mapped",[369]],[[369,369],"valid"],[[370,370],"mapped",[371]],[[371,371],"valid"],[[372,372],"mapped",[373]],[[373,373],"valid"],[[374,374],"mapped",[375]],[[375,375],"valid"],[[376,376],"mapped",[255]],[[377,377],"mapped",[378]],[[378,378],"valid"],[[379,379],"mapped",[380]],[[380,380],"valid"],[[381,381],"mapped",[382]],[[382,382],"valid"],[[383,383],"mapped",[115]],[[384,384],"valid"],[[385,385],"mapped",[595]],[[386,386],"mapped",[387]],[[387,387],"valid"],[[388,388],"mapped",[389]],[[389,389],"valid"],[[390,390],"mapped",[596]],[[391,391],"mapped",[392]],[[392,392],"valid"],[[393,393],"mapped",[598]],[[394,394],"mapped",[599]],[[395,395],"mapped",[396]],[[396,397],"valid"],[[398,398],"mapped",[477]],[[399,399],"mapped",[601]],[[400,400],"mapped",[603]],[[401,401],"mapped",[402]],[[402,402],"valid"],[[403,403],"mapped",[608]],[[404,404],"mapped",[611]],[[405,405],"valid"],[[406,406],"mapped",[617]],[[407,407],"mapped",[616]],[[408,408],"mapped",[409]],[[409,411],"valid"],[[412,412],"mapped",[623]],[[413,413],"mapped",[626]],[[414,414],"valid"],[[415,415],"mapped",[629]],[[416,416],"mapped",[417]],[[417,417],"valid"],[[418,418],"mapped",[419]],[[419,419],"valid"],[[420,420],"mapped",[421]],[[421,421],"valid"],[[422,422],"mapped",[640]],[[423,423],"mapped",[424]],[[424,424],"valid"],[[425,425],"mapped",[643]],[[426,427],"valid"],[[428,428],"mapped",[429]],[[429,429],"valid"],[[430,430],"mapped",[648]],[[431,431],"mapped",[432]],[[432,432],"valid"],[[433,433],"mapped",[650]],[[434,434],"mapped",[651]],[[435,435],"mapped",[436]],[[436,436],"valid"],[[437,437],"mapped",[438]],[[438,438],"valid"],[[439,439],"mapped",[658]],[[440,440],"mapped",[441]],[[441,443],"valid"],[[444,444],"mapped",[445]],[[445,451],"valid"],[[452,454],"mapped",[100,382]],[[455,457],"mapped",[108,106]],[[458,460],"mapped",[110,106]],[[461,461],"mapped",[462]],[[462,462],"valid"],[[463,463],"mapped",[464]],[[464,464],"valid"],[[465,465],"mapped",[466]],[[466,466],"valid"],[[467,467],"mapped",[468]],[[468,468],"valid"],[[469,469],"mapped",[470]],[[470,470],"valid"],[[471,471],"mapped",[472]],[[472,472],"valid"],[[473,473],"mapped",[474]],[[474,474],"valid"],[[475,475],"mapped",[476]],[[476,477],"valid"],[[478,478],"mapped",[479]],[[479,479],"valid"],[[480,480],"mapped",[481]],[[481,481],"valid"],[[482,482],"mapped",[483]],[[483,483],"valid"],[[484,484],"mapped",[485]],[[485,485],"valid"],[[486,486],"mapped",[487]],[[487,487],"valid"],[[488,488],"mapped",[489]],[[489,489],"valid"],[[490,490],"mapped",[491]],[[491,491],"valid"],[[492,492],"mapped",[493]],[[493,493],"valid"],[[494,494],"mapped",[495]],[[495,496],"valid"],[[497,499],"mapped",[100,122]],[[500,500],"mapped",[501]],[[501,501],"valid"],[[502,502],"mapped",[405]],[[503,503],"mapped",[447]],[[504,504],"mapped",[505]],[[505,505],"valid"],[[506,506],"mapped",[507]],[[507,507],"valid"],[[508,508],"mapped",[509]],[[509,509],"valid"],[[510,510],"mapped",[511]],[[511,511],"valid"],[[512,512],"mapped",[513]],[[513,513],"valid"],[[514,514],"mapped",[515]],[[515,515],"valid"],[[516,516],"mapped",[517]],[[517,517],"valid"],[[518,518],"mapped",[519]],[[519,519],"valid"],[[520,520],"mapped",[521]],[[521,521],"valid"],[[522,522],"mapped",[523]],[[523,523],"valid"],[[524,524],"mapped",[525]],[[525,525],"valid"],[[526,526],"mapped",[527]],[[527,527],"valid"],[[528,528],"mapped",[529]],[[529,529],"valid"],[[530,530],"mapped",[531]],[[531,531],"valid"],[[532,532],"mapped",[533]],[[533,533],"valid"],[[534,534],"mapped",[535]],[[535,535],"valid"],[[536,536],"mapped",[537]],[[537,537],"valid"],[[538,538],"mapped",[539]],[[539,539],"valid"],[[540,540],"mapped",[541]],[[541,541],"valid"],[[542,542],"mapped",[543]],[[543,543],"valid"],[[544,544],"mapped",[414]],[[545,545],"valid"],[[546,546],"mapped",[547]],[[547,547],"valid"],[[548,548],"mapped",[549]],[[549,549],"valid"],[[550,550],"mapped",[551]],[[551,551],"valid"],[[552,552],"mapped",[553]],[[553,553],"valid"],[[554,554],"mapped",[555]],[[555,555],"valid"],[[556,556],"mapped",[557]],[[557,557],"valid"],[[558,558],"mapped",[559]],[[559,559],"valid"],[[560,560],"mapped",[561]],[[561,561],"valid"],[[562,562],"mapped",[563]],[[563,563],"valid"],[[564,566],"valid"],[[567,569],"valid"],[[570,570],"mapped",[11365]],[[571,571],"mapped",[572]],[[572,572],"valid"],[[573,573],"mapped",[410]],[[574,574],"mapped",[11366]],[[575,576],"valid"],[[577,577],"mapped",[578]],[[578,578],"valid"],[[579,579],"mapped",[384]],[[580,580],"mapped",[649]],[[581,581],"mapped",[652]],[[582,582],"mapped",[583]],[[583,583],"valid"],[[584,584],"mapped",[585]],[[585,585],"valid"],[[586,586],"mapped",[587]],[[587,587],"valid"],[[588,588],"mapped",[589]],[[589,589],"valid"],[[590,590],"mapped",[591]],[[591,591],"valid"],[[592,680],"valid"],[[681,685],"valid"],[[686,687],"valid"],[[688,688],"mapped",[104]],[[689,689],"mapped",[614]],[[690,690],"mapped",[106]],[[691,691],"mapped",[114]],[[692,692],"mapped",[633]],[[693,693],"mapped",[635]],[[694,694],"mapped",[641]],[[695,695],"mapped",[119]],[[696,696],"mapped",[121]],[[697,705],"valid"],[[706,709],"valid",[],"NV8"],[[710,721],"valid"],[[722,727],"valid",[],"NV8"],[[728,728],"disallowed_STD3_mapped",[32,774]],[[729,729],"disallowed_STD3_mapped",[32,775]],[[730,730],"disallowed_STD3_mapped",[32,778]],[[731,731],"disallowed_STD3_mapped",[32,808]],[[732,732],"disallowed_STD3_mapped",[32,771]],[[733,733],"disallowed_STD3_mapped",[32,779]],[[734,734],"valid",[],"NV8"],[[735,735],"valid",[],"NV8"],[[736,736],"mapped",[611]],[[737,737],"mapped",[108]],[[738,738],"mapped",[115]],[[739,739],"mapped",[120]],[[740,740],"mapped",[661]],[[741,745],"valid",[],"NV8"],[[746,747],"valid",[],"NV8"],[[748,748],"valid"],[[749,749],"valid",[],"NV8"],[[750,750],"valid"],[[751,767],"valid",[],"NV8"],[[768,831],"valid"],[[832,832],"mapped",[768]],[[833,833],"mapped",[769]],[[834,834],"valid"],[[835,835],"mapped",[787]],[[836,836],"mapped",[776,769]],[[837,837],"mapped",[953]],[[838,846],"valid"],[[847,847],"ignored"],[[848,855],"valid"],[[856,860],"valid"],[[861,863],"valid"],[[864,865],"valid"],[[866,866],"valid"],[[867,879],"valid"],[[880,880],"mapped",[881]],[[881,881],"valid"],[[882,882],"mapped",[883]],[[883,883],"valid"],[[884,884],"mapped",[697]],[[885,885],"valid"],[[886,886],"mapped",[887]],[[887,887],"valid"],[[888,889],"disallowed"],[[890,890],"disallowed_STD3_mapped",[32,953]],[[891,893],"valid"],[[894,894],"disallowed_STD3_mapped",[59]],[[895,895],"mapped",[1011]],[[896,899],"disallowed"],[[900,900],"disallowed_STD3_mapped",[32,769]],[[901,901],"disallowed_STD3_mapped",[32,776,769]],[[902,902],"mapped",[940]],[[903,903],"mapped",[183]],[[904,904],"mapped",[941]],[[905,905],"mapped",[942]],[[906,906],"mapped",[943]],[[907,907],"disallowed"],[[908,908],"mapped",[972]],[[909,909],"disallowed"],[[910,910],"mapped",[973]],[[911,911],"mapped",[974]],[[912,912],"valid"],[[913,913],"mapped",[945]],[[914,914],"mapped",[946]],[[915,915],"mapped",[947]],[[916,916],"mapped",[948]],[[917,917],"mapped",[949]],[[918,918],"mapped",[950]],[[919,919],"mapped",[951]],[[920,920],"mapped",[952]],[[921,921],"mapped",[953]],[[922,922],"mapped",[954]],[[923,923],"mapped",[955]],[[924,924],"mapped",[956]],[[925,925],"mapped",[957]],[[926,926],"mapped",[958]],[[927,927],"mapped",[959]],[[928,928],"mapped",[960]],[[929,929],"mapped",[961]],[[930,930],"disallowed"],[[931,931],"mapped",[963]],[[932,932],"mapped",[964]],[[933,933],"mapped",[965]],[[934,934],"mapped",[966]],[[935,935],"mapped",[967]],[[936,936],"mapped",[968]],[[937,937],"mapped",[969]],[[938,938],"mapped",[970]],[[939,939],"mapped",[971]],[[940,961],"valid"],[[962,962],"deviation",[963]],[[963,974],"valid"],[[975,975],"mapped",[983]],[[976,976],"mapped",[946]],[[977,977],"mapped",[952]],[[978,978],"mapped",[965]],[[979,979],"mapped",[973]],[[980,980],"mapped",[971]],[[981,981],"mapped",[966]],[[982,982],"mapped",[960]],[[983,983],"valid"],[[984,984],"mapped",[985]],[[985,985],"valid"],[[986,986],"mapped",[987]],[[987,987],"valid"],[[988,988],"mapped",[989]],[[989,989],"valid"],[[990,990],"mapped",[991]],[[991,991],"valid"],[[992,992],"mapped",[993]],[[993,993],"valid"],[[994,994],"mapped",[995]],[[995,995],"valid"],[[996,996],"mapped",[997]],[[997,997],"valid"],[[998,998],"mapped",[999]],[[999,999],"valid"],[[1000,1000],"mapped",[1001]],[[1001,1001],"valid"],[[1002,1002],"mapped",[1003]],[[1003,1003],"valid"],[[1004,1004],"mapped",[1005]],[[1005,1005],"valid"],[[1006,1006],"mapped",[1007]],[[1007,1007],"valid"],[[1008,1008],"mapped",[954]],[[1009,1009],"mapped",[961]],[[1010,1010],"mapped",[963]],[[1011,1011],"valid"],[[1012,1012],"mapped",[952]],[[1013,1013],"mapped",[949]],[[1014,1014],"valid",[],"NV8"],[[1015,1015],"mapped",[1016]],[[1016,1016],"valid"],[[1017,1017],"mapped",[963]],[[1018,1018],"mapped",[1019]],[[1019,1019],"valid"],[[1020,1020],"valid"],[[1021,1021],"mapped",[891]],[[1022,1022],"mapped",[892]],[[1023,1023],"mapped",[893]],[[1024,1024],"mapped",[1104]],[[1025,1025],"mapped",[1105]],[[1026,1026],"mapped",[1106]],[[1027,1027],"mapped",[1107]],[[1028,1028],"mapped",[1108]],[[1029,1029],"mapped",[1109]],[[1030,1030],"mapped",[1110]],[[1031,1031],"mapped",[1111]],[[1032,1032],"mapped",[1112]],[[1033,1033],"mapped",[1113]],[[1034,1034],"mapped",[1114]],[[1035,1035],"mapped",[1115]],[[1036,1036],"mapped",[1116]],[[1037,1037],"mapped",[1117]],[[1038,1038],"mapped",[1118]],[[1039,1039],"mapped",[1119]],[[1040,1040],"mapped",[1072]],[[1041,1041],"mapped",[1073]],[[1042,1042],"mapped",[1074]],[[1043,1043],"mapped",[1075]],[[1044,1044],"mapped",[1076]],[[1045,1045],"mapped",[1077]],[[1046,1046],"mapped",[1078]],[[1047,1047],"mapped",[1079]],[[1048,1048],"mapped",[1080]],[[1049,1049],"mapped",[1081]],[[1050,1050],"mapped",[1082]],[[1051,1051],"mapped",[1083]],[[1052,1052],"mapped",[1084]],[[1053,1053],"mapped",[1085]],[[1054,1054],"mapped",[1086]],[[1055,1055],"mapped",[1087]],[[1056,1056],"mapped",[1088]],[[1057,1057],"mapped",[1089]],[[1058,1058],"mapped",[1090]],[[1059,1059],"mapped",[1091]],[[1060,1060],"mapped",[1092]],[[1061,1061],"mapped",[1093]],[[1062,1062],"mapped",[1094]],[[1063,1063],"mapped",[1095]],[[1064,1064],"mapped",[1096]],[[1065,1065],"mapped",[1097]],[[1066,1066],"mapped",[1098]],[[1067,1067],"mapped",[1099]],[[1068,1068],"mapped",[1100]],[[1069,1069],"mapped",[1101]],[[1070,1070],"mapped",[1102]],[[1071,1071],"mapped",[1103]],[[1072,1103],"valid"],[[1104,1104],"valid"],[[1105,1116],"valid"],[[1117,1117],"valid"],[[1118,1119],"valid"],[[1120,1120],"mapped",[1121]],[[1121,1121],"valid"],[[1122,1122],"mapped",[1123]],[[1123,1123],"valid"],[[1124,1124],"mapped",[1125]],[[1125,1125],"valid"],[[1126,1126],"mapped",[1127]],[[1127,1127],"valid"],[[1128,1128],"mapped",[1129]],[[1129,1129],"valid"],[[1130,1130],"mapped",[1131]],[[1131,1131],"valid"],[[1132,1132],"mapped",[1133]],[[1133,1133],"valid"],[[1134,1134],"mapped",[1135]],[[1135,1135],"valid"],[[1136,1136],"mapped",[1137]],[[1137,1137],"valid"],[[1138,1138],"mapped",[1139]],[[1139,1139],"valid"],[[1140,1140],"mapped",[1141]],[[1141,1141],"valid"],[[1142,1142],"mapped",[1143]],[[1143,1143],"valid"],[[1144,1144],"mapped",[1145]],[[1145,1145],"valid"],[[1146,1146],"mapped",[1147]],[[1147,1147],"valid"],[[1148,1148],"mapped",[1149]],[[1149,1149],"valid"],[[1150,1150],"mapped",[1151]],[[1151,1151],"valid"],[[1152,1152],"mapped",[1153]],[[1153,1153],"valid"],[[1154,1154],"valid",[],"NV8"],[[1155,1158],"valid"],[[1159,1159],"valid"],[[1160,1161],"valid",[],"NV8"],[[1162,1162],"mapped",[1163]],[[1163,1163],"valid"],[[1164,1164],"mapped",[1165]],[[1165,1165],"valid"],[[1166,1166],"mapped",[1167]],[[1167,1167],"valid"],[[1168,1168],"mapped",[1169]],[[1169,1169],"valid"],[[1170,1170],"mapped",[1171]],[[1171,1171],"valid"],[[1172,1172],"mapped",[1173]],[[1173,1173],"valid"],[[1174,1174],"mapped",[1175]],[[1175,1175],"valid"],[[1176,1176],"mapped",[1177]],[[1177,1177],"valid"],[[1178,1178],"mapped",[1179]],[[1179,1179],"valid"],[[1180,1180],"mapped",[1181]],[[1181,1181],"valid"],[[1182,1182],"mapped",[1183]],[[1183,1183],"valid"],[[1184,1184],"mapped",[1185]],[[1185,1185],"valid"],[[1186,1186],"mapped",[1187]],[[1187,1187],"valid"],[[1188,1188],"mapped",[1189]],[[1189,1189],"valid"],[[1190,1190],"mapped",[1191]],[[1191,1191],"valid"],[[1192,1192],"mapped",[1193]],[[1193,1193],"valid"],[[1194,1194],"mapped",[1195]],[[1195,1195],"valid"],[[1196,1196],"mapped",[1197]],[[1197,1197],"valid"],[[1198,1198],"mapped",[1199]],[[1199,1199],"valid"],[[1200,1200],"mapped",[1201]],[[1201,1201],"valid"],[[1202,1202],"mapped",[1203]],[[1203,1203],"valid"],[[1204,1204],"mapped",[1205]],[[1205,1205],"valid"],[[1206,1206],"mapped",[1207]],[[1207,1207],"valid"],[[1208,1208],"mapped",[1209]],[[1209,1209],"valid"],[[1210,1210],"mapped",[1211]],[[1211,1211],"valid"],[[1212,1212],"mapped",[1213]],[[1213,1213],"valid"],[[1214,1214],"mapped",[1215]],[[1215,1215],"valid"],[[1216,1216],"disallowed"],[[1217,1217],"mapped",[1218]],[[1218,1218],"valid"],[[1219,1219],"mapped",[1220]],[[1220,1220],"valid"],[[1221,1221],"mapped",[1222]],[[1222,1222],"valid"],[[1223,1223],"mapped",[1224]],[[1224,1224],"valid"],[[1225,1225],"mapped",[1226]],[[1226,1226],"valid"],[[1227,1227],"mapped",[1228]],[[1228,1228],"valid"],[[1229,1229],"mapped",[1230]],[[1230,1230],"valid"],[[1231,1231],"valid"],[[1232,1232],"mapped",[1233]],[[1233,1233],"valid"],[[1234,1234],"mapped",[1235]],[[1235,1235],"valid"],[[1236,1236],"mapped",[1237]],[[1237,1237],"valid"],[[1238,1238],"mapped",[1239]],[[1239,1239],"valid"],[[1240,1240],"mapped",[1241]],[[1241,1241],"valid"],[[1242,1242],"mapped",[1243]],[[1243,1243],"valid"],[[1244,1244],"mapped",[1245]],[[1245,1245],"valid"],[[1246,1246],"mapped",[1247]],[[1247,1247],"valid"],[[1248,1248],"mapped",[1249]],[[1249,1249],"valid"],[[1250,1250],"mapped",[1251]],[[1251,1251],"valid"],[[1252,1252],"mapped",[1253]],[[1253,1253],"valid"],[[1254,1254],"mapped",[1255]],[[1255,1255],"valid"],[[1256,1256],"mapped",[1257]],[[1257,1257],"valid"],[[1258,1258],"mapped",[1259]],[[1259,1259],"valid"],[[1260,1260],"mapped",[1261]],[[1261,1261],"valid"],[[1262,1262],"mapped",[1263]],[[1263,1263],"valid"],[[1264,1264],"mapped",[1265]],[[1265,1265],"valid"],[[1266,1266],"mapped",[1267]],[[1267,1267],"valid"],[[1268,1268],"mapped",[1269]],[[1269,1269],"valid"],[[1270,1270],"mapped",[1271]],[[1271,1271],"valid"],[[1272,1272],"mapped",[1273]],[[1273,1273],"valid"],[[1274,1274],"mapped",[1275]],[[1275,1275],"valid"],[[1276,1276],"mapped",[1277]],[[1277,1277],"valid"],[[1278,1278],"mapped",[1279]],[[1279,1279],"valid"],[[1280,1280],"mapped",[1281]],[[1281,1281],"valid"],[[1282,1282],"mapped",[1283]],[[1283,1283],"valid"],[[1284,1284],"mapped",[1285]],[[1285,1285],"valid"],[[1286,1286],"mapped",[1287]],[[1287,1287],"valid"],[[1288,1288],"mapped",[1289]],[[1289,1289],"valid"],[[1290,1290],"mapped",[1291]],[[1291,1291],"valid"],[[1292,1292],"mapped",[1293]],[[1293,1293],"valid"],[[1294,1294],"mapped",[1295]],[[1295,1295],"valid"],[[1296,1296],"mapped",[1297]],[[1297,1297],"valid"],[[1298,1298],"mapped",[1299]],[[1299,1299],"valid"],[[1300,1300],"mapped",[1301]],[[1301,1301],"valid"],[[1302,1302],"mapped",[1303]],[[1303,1303],"valid"],[[1304,1304],"mapped",[1305]],[[1305,1305],"valid"],[[1306,1306],"mapped",[1307]],[[1307,1307],"valid"],[[1308,1308],"mapped",[1309]],[[1309,1309],"valid"],[[1310,1310],"mapped",[1311]],[[1311,1311],"valid"],[[1312,1312],"mapped",[1313]],[[1313,1313],"valid"],[[1314,1314],"mapped",[1315]],[[1315,1315],"valid"],[[1316,1316],"mapped",[1317]],[[1317,1317],"valid"],[[1318,1318],"mapped",[1319]],[[1319,1319],"valid"],[[1320,1320],"mapped",[1321]],[[1321,1321],"valid"],[[1322,1322],"mapped",[1323]],[[1323,1323],"valid"],[[1324,1324],"mapped",[1325]],[[1325,1325],"valid"],[[1326,1326],"mapped",[1327]],[[1327,1327],"valid"],[[1328,1328],"disallowed"],[[1329,1329],"mapped",[1377]],[[1330,1330],"mapped",[1378]],[[1331,1331],"mapped",[1379]],[[1332,1332],"mapped",[1380]],[[1333,1333],"mapped",[1381]],[[1334,1334],"mapped",[1382]],[[1335,1335],"mapped",[1383]],[[1336,1336],"mapped",[1384]],[[1337,1337],"mapped",[1385]],[[1338,1338],"mapped",[1386]],[[1339,1339],"mapped",[1387]],[[1340,1340],"mapped",[1388]],[[1341,1341],"mapped",[1389]],[[1342,1342],"mapped",[1390]],[[1343,1343],"mapped",[1391]],[[1344,1344],"mapped",[1392]],[[1345,1345],"mapped",[1393]],[[1346,1346],"mapped",[1394]],[[1347,1347],"mapped",[1395]],[[1348,1348],"mapped",[1396]],[[1349,1349],"mapped",[1397]],[[1350,1350],"mapped",[1398]],[[1351,1351],"mapped",[1399]],[[1352,1352],"mapped",[1400]],[[1353,1353],"mapped",[1401]],[[1354,1354],"mapped",[1402]],[[1355,1355],"mapped",[1403]],[[1356,1356],"mapped",[1404]],[[1357,1357],"mapped",[1405]],[[1358,1358],"mapped",[1406]],[[1359,1359],"mapped",[1407]],[[1360,1360],"mapped",[1408]],[[1361,1361],"mapped",[1409]],[[1362,1362],"mapped",[1410]],[[1363,1363],"mapped",[1411]],[[1364,1364],"mapped",[1412]],[[1365,1365],"mapped",[1413]],[[1366,1366],"mapped",[1414]],[[1367,1368],"disallowed"],[[1369,1369],"valid"],[[1370,1375],"valid",[],"NV8"],[[1376,1376],"disallowed"],[[1377,1414],"valid"],[[1415,1415],"mapped",[1381,1410]],[[1416,1416],"disallowed"],[[1417,1417],"valid",[],"NV8"],[[1418,1418],"valid",[],"NV8"],[[1419,1420],"disallowed"],[[1421,1422],"valid",[],"NV8"],[[1423,1423],"valid",[],"NV8"],[[1424,1424],"disallowed"],[[1425,1441],"valid"],[[1442,1442],"valid"],[[1443,1455],"valid"],[[1456,1465],"valid"],[[1466,1466],"valid"],[[1467,1469],"valid"],[[1470,1470],"valid",[],"NV8"],[[1471,1471],"valid"],[[1472,1472],"valid",[],"NV8"],[[1473,1474],"valid"],[[1475,1475],"valid",[],"NV8"],[[1476,1476],"valid"],[[1477,1477],"valid"],[[1478,1478],"valid",[],"NV8"],[[1479,1479],"valid"],[[1480,1487],"disallowed"],[[1488,1514],"valid"],[[1515,1519],"disallowed"],[[1520,1524],"valid"],[[1525,1535],"disallowed"],[[1536,1539],"disallowed"],[[1540,1540],"disallowed"],[[1541,1541],"disallowed"],[[1542,1546],"valid",[],"NV8"],[[1547,1547],"valid",[],"NV8"],[[1548,1548],"valid",[],"NV8"],[[1549,1551],"valid",[],"NV8"],[[1552,1557],"valid"],[[1558,1562],"valid"],[[1563,1563],"valid",[],"NV8"],[[1564,1564],"disallowed"],[[1565,1565],"disallowed"],[[1566,1566],"valid",[],"NV8"],[[1567,1567],"valid",[],"NV8"],[[1568,1568],"valid"],[[1569,1594],"valid"],[[1595,1599],"valid"],[[1600,1600],"valid",[],"NV8"],[[1601,1618],"valid"],[[1619,1621],"valid"],[[1622,1624],"valid"],[[1625,1630],"valid"],[[1631,1631],"valid"],[[1632,1641],"valid"],[[1642,1645],"valid",[],"NV8"],[[1646,1647],"valid"],[[1648,1652],"valid"],[[1653,1653],"mapped",[1575,1652]],[[1654,1654],"mapped",[1608,1652]],[[1655,1655],"mapped",[1735,1652]],[[1656,1656],"mapped",[1610,1652]],[[1657,1719],"valid"],[[1720,1721],"valid"],[[1722,1726],"valid"],[[1727,1727],"valid"],[[1728,1742],"valid"],[[1743,1743],"valid"],[[1744,1747],"valid"],[[1748,1748],"valid",[],"NV8"],[[1749,1756],"valid"],[[1757,1757],"disallowed"],[[1758,1758],"valid",[],"NV8"],[[1759,1768],"valid"],[[1769,1769],"valid",[],"NV8"],[[1770,1773],"valid"],[[1774,1775],"valid"],[[1776,1785],"valid"],[[1786,1790],"valid"],[[1791,1791],"valid"],[[1792,1805],"valid",[],"NV8"],[[1806,1806],"disallowed"],[[1807,1807],"disallowed"],[[1808,1836],"valid"],[[1837,1839],"valid"],[[1840,1866],"valid"],[[1867,1868],"disallowed"],[[1869,1871],"valid"],[[1872,1901],"valid"],[[1902,1919],"valid"],[[1920,1968],"valid"],[[1969,1969],"valid"],[[1970,1983],"disallowed"],[[1984,2037],"valid"],[[2038,2042],"valid",[],"NV8"],[[2043,2047],"disallowed"],[[2048,2093],"valid"],[[2094,2095],"disallowed"],[[2096,2110],"valid",[],"NV8"],[[2111,2111],"disallowed"],[[2112,2139],"valid"],[[2140,2141],"disallowed"],[[2142,2142],"valid",[],"NV8"],[[2143,2207],"disallowed"],[[2208,2208],"valid"],[[2209,2209],"valid"],[[2210,2220],"valid"],[[2221,2226],"valid"],[[2227,2228],"valid"],[[2229,2274],"disallowed"],[[2275,2275],"valid"],[[2276,2302],"valid"],[[2303,2303],"valid"],[[2304,2304],"valid"],[[2305,2307],"valid"],[[2308,2308],"valid"],[[2309,2361],"valid"],[[2362,2363],"valid"],[[2364,2381],"valid"],[[2382,2382],"valid"],[[2383,2383],"valid"],[[2384,2388],"valid"],[[2389,2389],"valid"],[[2390,2391],"valid"],[[2392,2392],"mapped",[2325,2364]],[[2393,2393],"mapped",[2326,2364]],[[2394,2394],"mapped",[2327,2364]],[[2395,2395],"mapped",[2332,2364]],[[2396,2396],"mapped",[2337,2364]],[[2397,2397],"mapped",[2338,2364]],[[2398,2398],"mapped",[2347,2364]],[[2399,2399],"mapped",[2351,2364]],[[2400,2403],"valid"],[[2404,2405],"valid",[],"NV8"],[[2406,2415],"valid"],[[2416,2416],"valid",[],"NV8"],[[2417,2418],"valid"],[[2419,2423],"valid"],[[2424,2424],"valid"],[[2425,2426],"valid"],[[2427,2428],"valid"],[[2429,2429],"valid"],[[2430,2431],"valid"],[[2432,2432],"valid"],[[2433,2435],"valid"],[[2436,2436],"disallowed"],[[2437,2444],"valid"],[[2445,2446],"disallowed"],[[2447,2448],"valid"],[[2449,2450],"disallowed"],[[2451,2472],"valid"],[[2473,2473],"disallowed"],[[2474,2480],"valid"],[[2481,2481],"disallowed"],[[2482,2482],"valid"],[[2483,2485],"disallowed"],[[2486,2489],"valid"],[[2490,2491],"disallowed"],[[2492,2492],"valid"],[[2493,2493],"valid"],[[2494,2500],"valid"],[[2501,2502],"disallowed"],[[2503,2504],"valid"],[[2505,2506],"disallowed"],[[2507,2509],"valid"],[[2510,2510],"valid"],[[2511,2518],"disallowed"],[[2519,2519],"valid"],[[2520,2523],"disallowed"],[[2524,2524],"mapped",[2465,2492]],[[2525,2525],"mapped",[2466,2492]],[[2526,2526],"disallowed"],[[2527,2527],"mapped",[2479,2492]],[[2528,2531],"valid"],[[2532,2533],"disallowed"],[[2534,2545],"valid"],[[2546,2554],"valid",[],"NV8"],[[2555,2555],"valid",[],"NV8"],[[2556,2560],"disallowed"],[[2561,2561],"valid"],[[2562,2562],"valid"],[[2563,2563],"valid"],[[2564,2564],"disallowed"],[[2565,2570],"valid"],[[2571,2574],"disallowed"],[[2575,2576],"valid"],[[2577,2578],"disallowed"],[[2579,2600],"valid"],[[2601,2601],"disallowed"],[[2602,2608],"valid"],[[2609,2609],"disallowed"],[[2610,2610],"valid"],[[2611,2611],"mapped",[2610,2620]],[[2612,2612],"disallowed"],[[2613,2613],"valid"],[[2614,2614],"mapped",[2616,2620]],[[2615,2615],"disallowed"],[[2616,2617],"valid"],[[2618,2619],"disallowed"],[[2620,2620],"valid"],[[2621,2621],"disallowed"],[[2622,2626],"valid"],[[2627,2630],"disallowed"],[[2631,2632],"valid"],[[2633,2634],"disallowed"],[[2635,2637],"valid"],[[2638,2640],"disallowed"],[[2641,2641],"valid"],[[2642,2648],"disallowed"],[[2649,2649],"mapped",[2582,2620]],[[2650,2650],"mapped",[2583,2620]],[[2651,2651],"mapped",[2588,2620]],[[2652,2652],"valid"],[[2653,2653],"disallowed"],[[2654,2654],"mapped",[2603,2620]],[[2655,2661],"disallowed"],[[2662,2676],"valid"],[[2677,2677],"valid"],[[2678,2688],"disallowed"],[[2689,2691],"valid"],[[2692,2692],"disallowed"],[[2693,2699],"valid"],[[2700,2700],"valid"],[[2701,2701],"valid"],[[2702,2702],"disallowed"],[[2703,2705],"valid"],[[2706,2706],"disallowed"],[[2707,2728],"valid"],[[2729,2729],"disallowed"],[[2730,2736],"valid"],[[2737,2737],"disallowed"],[[2738,2739],"valid"],[[2740,2740],"disallowed"],[[2741,2745],"valid"],[[2746,2747],"disallowed"],[[2748,2757],"valid"],[[2758,2758],"disallowed"],[[2759,2761],"valid"],[[2762,2762],"disallowed"],[[2763,2765],"valid"],[[2766,2767],"disallowed"],[[2768,2768],"valid"],[[2769,2783],"disallowed"],[[2784,2784],"valid"],[[2785,2787],"valid"],[[2788,2789],"disallowed"],[[2790,2799],"valid"],[[2800,2800],"valid",[],"NV8"],[[2801,2801],"valid",[],"NV8"],[[2802,2808],"disallowed"],[[2809,2809],"valid"],[[2810,2816],"disallowed"],[[2817,2819],"valid"],[[2820,2820],"disallowed"],[[2821,2828],"valid"],[[2829,2830],"disallowed"],[[2831,2832],"valid"],[[2833,2834],"disallowed"],[[2835,2856],"valid"],[[2857,2857],"disallowed"],[[2858,2864],"valid"],[[2865,2865],"disallowed"],[[2866,2867],"valid"],[[2868,2868],"disallowed"],[[2869,2869],"valid"],[[2870,2873],"valid"],[[2874,2875],"disallowed"],[[2876,2883],"valid"],[[2884,2884],"valid"],[[2885,2886],"disallowed"],[[2887,2888],"valid"],[[2889,2890],"disallowed"],[[2891,2893],"valid"],[[2894,2901],"disallowed"],[[2902,2903],"valid"],[[2904,2907],"disallowed"],[[2908,2908],"mapped",[2849,2876]],[[2909,2909],"mapped",[2850,2876]],[[2910,2910],"disallowed"],[[2911,2913],"valid"],[[2914,2915],"valid"],[[2916,2917],"disallowed"],[[2918,2927],"valid"],[[2928,2928],"valid",[],"NV8"],[[2929,2929],"valid"],[[2930,2935],"valid",[],"NV8"],[[2936,2945],"disallowed"],[[2946,2947],"valid"],[[2948,2948],"disallowed"],[[2949,2954],"valid"],[[2955,2957],"disallowed"],[[2958,2960],"valid"],[[2961,2961],"disallowed"],[[2962,2965],"valid"],[[2966,2968],"disallowed"],[[2969,2970],"valid"],[[2971,2971],"disallowed"],[[2972,2972],"valid"],[[2973,2973],"disallowed"],[[2974,2975],"valid"],[[2976,2978],"disallowed"],[[2979,2980],"valid"],[[2981,2983],"disallowed"],[[2984,2986],"valid"],[[2987,2989],"disallowed"],[[2990,2997],"valid"],[[2998,2998],"valid"],[[2999,3001],"valid"],[[3002,3005],"disallowed"],[[3006,3010],"valid"],[[3011,3013],"disallowed"],[[3014,3016],"valid"],[[3017,3017],"disallowed"],[[3018,3021],"valid"],[[3022,3023],"disallowed"],[[3024,3024],"valid"],[[3025,3030],"disallowed"],[[3031,3031],"valid"],[[3032,3045],"disallowed"],[[3046,3046],"valid"],[[3047,3055],"valid"],[[3056,3058],"valid",[],"NV8"],[[3059,3066],"valid",[],"NV8"],[[3067,3071],"disallowed"],[[3072,3072],"valid"],[[3073,3075],"valid"],[[3076,3076],"disallowed"],[[3077,3084],"valid"],[[3085,3085],"disallowed"],[[3086,3088],"valid"],[[3089,3089],"disallowed"],[[3090,3112],"valid"],[[3113,3113],"disallowed"],[[3114,3123],"valid"],[[3124,3124],"valid"],[[3125,3129],"valid"],[[3130,3132],"disallowed"],[[3133,3133],"valid"],[[3134,3140],"valid"],[[3141,3141],"disallowed"],[[3142,3144],"valid"],[[3145,3145],"disallowed"],[[3146,3149],"valid"],[[3150,3156],"disallowed"],[[3157,3158],"valid"],[[3159,3159],"disallowed"],[[3160,3161],"valid"],[[3162,3162],"valid"],[[3163,3167],"disallowed"],[[3168,3169],"valid"],[[3170,3171],"valid"],[[3172,3173],"disallowed"],[[3174,3183],"valid"],[[3184,3191],"disallowed"],[[3192,3199],"valid",[],"NV8"],[[3200,3200],"disallowed"],[[3201,3201],"valid"],[[3202,3203],"valid"],[[3204,3204],"disallowed"],[[3205,3212],"valid"],[[3213,3213],"disallowed"],[[3214,3216],"valid"],[[3217,3217],"disallowed"],[[3218,3240],"valid"],[[3241,3241],"disallowed"],[[3242,3251],"valid"],[[3252,3252],"disallowed"],[[3253,3257],"valid"],[[3258,3259],"disallowed"],[[3260,3261],"valid"],[[3262,3268],"valid"],[[3269,3269],"disallowed"],[[3270,3272],"valid"],[[3273,3273],"disallowed"],[[3274,3277],"valid"],[[3278,3284],"disallowed"],[[3285,3286],"valid"],[[3287,3293],"disallowed"],[[3294,3294],"valid"],[[3295,3295],"disallowed"],[[3296,3297],"valid"],[[3298,3299],"valid"],[[3300,3301],"disallowed"],[[3302,3311],"valid"],[[3312,3312],"disallowed"],[[3313,3314],"valid"],[[3315,3328],"disallowed"],[[3329,3329],"valid"],[[3330,3331],"valid"],[[3332,3332],"disallowed"],[[3333,3340],"valid"],[[3341,3341],"disallowed"],[[3342,3344],"valid"],[[3345,3345],"disallowed"],[[3346,3368],"valid"],[[3369,3369],"valid"],[[3370,3385],"valid"],[[3386,3386],"valid"],[[3387,3388],"disallowed"],[[3389,3389],"valid"],[[3390,3395],"valid"],[[3396,3396],"valid"],[[3397,3397],"disallowed"],[[3398,3400],"valid"],[[3401,3401],"disallowed"],[[3402,3405],"valid"],[[3406,3406],"valid"],[[3407,3414],"disallowed"],[[3415,3415],"valid"],[[3416,3422],"disallowed"],[[3423,3423],"valid"],[[3424,3425],"valid"],[[3426,3427],"valid"],[[3428,3429],"disallowed"],[[3430,3439],"valid"],[[3440,3445],"valid",[],"NV8"],[[3446,3448],"disallowed"],[[3449,3449],"valid",[],"NV8"],[[3450,3455],"valid"],[[3456,3457],"disallowed"],[[3458,3459],"valid"],[[3460,3460],"disallowed"],[[3461,3478],"valid"],[[3479,3481],"disallowed"],[[3482,3505],"valid"],[[3506,3506],"disallowed"],[[3507,3515],"valid"],[[3516,3516],"disallowed"],[[3517,3517],"valid"],[[3518,3519],"disallowed"],[[3520,3526],"valid"],[[3527,3529],"disallowed"],[[3530,3530],"valid"],[[3531,3534],"disallowed"],[[3535,3540],"valid"],[[3541,3541],"disallowed"],[[3542,3542],"valid"],[[3543,3543],"disallowed"],[[3544,3551],"valid"],[[3552,3557],"disallowed"],[[3558,3567],"valid"],[[3568,3569],"disallowed"],[[3570,3571],"valid"],[[3572,3572],"valid",[],"NV8"],[[3573,3584],"disallowed"],[[3585,3634],"valid"],[[3635,3635],"mapped",[3661,3634]],[[3636,3642],"valid"],[[3643,3646],"disallowed"],[[3647,3647],"valid",[],"NV8"],[[3648,3662],"valid"],[[3663,3663],"valid",[],"NV8"],[[3664,3673],"valid"],[[3674,3675],"valid",[],"NV8"],[[3676,3712],"disallowed"],[[3713,3714],"valid"],[[3715,3715],"disallowed"],[[3716,3716],"valid"],[[3717,3718],"disallowed"],[[3719,3720],"valid"],[[3721,3721],"disallowed"],[[3722,3722],"valid"],[[3723,3724],"disallowed"],[[3725,3725],"valid"],[[3726,3731],"disallowed"],[[3732,3735],"valid"],[[3736,3736],"disallowed"],[[3737,3743],"valid"],[[3744,3744],"disallowed"],[[3745,3747],"valid"],[[3748,3748],"disallowed"],[[3749,3749],"valid"],[[3750,3750],"disallowed"],[[3751,3751],"valid"],[[3752,3753],"disallowed"],[[3754,3755],"valid"],[[3756,3756],"disallowed"],[[3757,3762],"valid"],[[3763,3763],"mapped",[3789,3762]],[[3764,3769],"valid"],[[3770,3770],"disallowed"],[[3771,3773],"valid"],[[3774,3775],"disallowed"],[[3776,3780],"valid"],[[3781,3781],"disallowed"],[[3782,3782],"valid"],[[3783,3783],"disallowed"],[[3784,3789],"valid"],[[3790,3791],"disallowed"],[[3792,3801],"valid"],[[3802,3803],"disallowed"],[[3804,3804],"mapped",[3755,3737]],[[3805,3805],"mapped",[3755,3745]],[[3806,3807],"valid"],[[3808,3839],"disallowed"],[[3840,3840],"valid"],[[3841,3850],"valid",[],"NV8"],[[3851,3851],"valid"],[[3852,3852],"mapped",[3851]],[[3853,3863],"valid",[],"NV8"],[[3864,3865],"valid"],[[3866,3871],"valid",[],"NV8"],[[3872,3881],"valid"],[[3882,3892],"valid",[],"NV8"],[[3893,3893],"valid"],[[3894,3894],"valid",[],"NV8"],[[3895,3895],"valid"],[[3896,3896],"valid",[],"NV8"],[[3897,3897],"valid"],[[3898,3901],"valid",[],"NV8"],[[3902,3906],"valid"],[[3907,3907],"mapped",[3906,4023]],[[3908,3911],"valid"],[[3912,3912],"disallowed"],[[3913,3916],"valid"],[[3917,3917],"mapped",[3916,4023]],[[3918,3921],"valid"],[[3922,3922],"mapped",[3921,4023]],[[3923,3926],"valid"],[[3927,3927],"mapped",[3926,4023]],[[3928,3931],"valid"],[[3932,3932],"mapped",[3931,4023]],[[3933,3944],"valid"],[[3945,3945],"mapped",[3904,4021]],[[3946,3946],"valid"],[[3947,3948],"valid"],[[3949,3952],"disallowed"],[[3953,3954],"valid"],[[3955,3955],"mapped",[3953,3954]],[[3956,3956],"valid"],[[3957,3957],"mapped",[3953,3956]],[[3958,3958],"mapped",[4018,3968]],[[3959,3959],"mapped",[4018,3953,3968]],[[3960,3960],"mapped",[4019,3968]],[[3961,3961],"mapped",[4019,3953,3968]],[[3962,3968],"valid"],[[3969,3969],"mapped",[3953,3968]],[[3970,3972],"valid"],[[3973,3973],"valid",[],"NV8"],[[3974,3979],"valid"],[[3980,3983],"valid"],[[3984,3986],"valid"],[[3987,3987],"mapped",[3986,4023]],[[3988,3989],"valid"],[[3990,3990],"valid"],[[3991,3991],"valid"],[[3992,3992],"disallowed"],[[3993,3996],"valid"],[[3997,3997],"mapped",[3996,4023]],[[3998,4001],"valid"],[[4002,4002],"mapped",[4001,4023]],[[4003,4006],"valid"],[[4007,4007],"mapped",[4006,4023]],[[4008,4011],"valid"],[[4012,4012],"mapped",[4011,4023]],[[4013,4013],"valid"],[[4014,4016],"valid"],[[4017,4023],"valid"],[[4024,4024],"valid"],[[4025,4025],"mapped",[3984,4021]],[[4026,4028],"valid"],[[4029,4029],"disallowed"],[[4030,4037],"valid",[],"NV8"],[[4038,4038],"valid"],[[4039,4044],"valid",[],"NV8"],[[4045,4045],"disallowed"],[[4046,4046],"valid",[],"NV8"],[[4047,4047],"valid",[],"NV8"],[[4048,4049],"valid",[],"NV8"],[[4050,4052],"valid",[],"NV8"],[[4053,4056],"valid",[],"NV8"],[[4057,4058],"valid",[],"NV8"],[[4059,4095],"disallowed"],[[4096,4129],"valid"],[[4130,4130],"valid"],[[4131,4135],"valid"],[[4136,4136],"valid"],[[4137,4138],"valid"],[[4139,4139],"valid"],[[4140,4146],"valid"],[[4147,4149],"valid"],[[4150,4153],"valid"],[[4154,4159],"valid"],[[4160,4169],"valid"],[[4170,4175],"valid",[],"NV8"],[[4176,4185],"valid"],[[4186,4249],"valid"],[[4250,4253],"valid"],[[4254,4255],"valid",[],"NV8"],[[4256,4293],"disallowed"],[[4294,4294],"disallowed"],[[4295,4295],"mapped",[11559]],[[4296,4300],"disallowed"],[[4301,4301],"mapped",[11565]],[[4302,4303],"disallowed"],[[4304,4342],"valid"],[[4343,4344],"valid"],[[4345,4346],"valid"],[[4347,4347],"valid",[],"NV8"],[[4348,4348],"mapped",[4316]],[[4349,4351],"valid"],[[4352,4441],"valid",[],"NV8"],[[4442,4446],"valid",[],"NV8"],[[4447,4448],"disallowed"],[[4449,4514],"valid",[],"NV8"],[[4515,4519],"valid",[],"NV8"],[[4520,4601],"valid",[],"NV8"],[[4602,4607],"valid",[],"NV8"],[[4608,4614],"valid"],[[4615,4615],"valid"],[[4616,4678],"valid"],[[4679,4679],"valid"],[[4680,4680],"valid"],[[4681,4681],"disallowed"],[[4682,4685],"valid"],[[4686,4687],"disallowed"],[[4688,4694],"valid"],[[4695,4695],"disallowed"],[[4696,4696],"valid"],[[4697,4697],"disallowed"],[[4698,4701],"valid"],[[4702,4703],"disallowed"],[[4704,4742],"valid"],[[4743,4743],"valid"],[[4744,4744],"valid"],[[4745,4745],"disallowed"],[[4746,4749],"valid"],[[4750,4751],"disallowed"],[[4752,4782],"valid"],[[4783,4783],"valid"],[[4784,4784],"valid"],[[4785,4785],"disallowed"],[[4786,4789],"valid"],[[4790,4791],"disallowed"],[[4792,4798],"valid"],[[4799,4799],"disallowed"],[[4800,4800],"valid"],[[4801,4801],"disallowed"],[[4802,4805],"valid"],[[4806,4807],"disallowed"],[[4808,4814],"valid"],[[4815,4815],"valid"],[[4816,4822],"valid"],[[4823,4823],"disallowed"],[[4824,4846],"valid"],[[4847,4847],"valid"],[[4848,4878],"valid"],[[4879,4879],"valid"],[[4880,4880],"valid"],[[4881,4881],"disallowed"],[[4882,4885],"valid"],[[4886,4887],"disallowed"],[[4888,4894],"valid"],[[4895,4895],"valid"],[[4896,4934],"valid"],[[4935,4935],"valid"],[[4936,4954],"valid"],[[4955,4956],"disallowed"],[[4957,4958],"valid"],[[4959,4959],"valid"],[[4960,4960],"valid",[],"NV8"],[[4961,4988],"valid",[],"NV8"],[[4989,4991],"disallowed"],[[4992,5007],"valid"],[[5008,5017],"valid",[],"NV8"],[[5018,5023],"disallowed"],[[5024,5108],"valid"],[[5109,5109],"valid"],[[5110,5111],"disallowed"],[[5112,5112],"mapped",[5104]],[[5113,5113],"mapped",[5105]],[[5114,5114],"mapped",[5106]],[[5115,5115],"mapped",[5107]],[[5116,5116],"mapped",[5108]],[[5117,5117],"mapped",[5109]],[[5118,5119],"disallowed"],[[5120,5120],"valid",[],"NV8"],[[5121,5740],"valid"],[[5741,5742],"valid",[],"NV8"],[[5743,5750],"valid"],[[5751,5759],"valid"],[[5760,5760],"disallowed"],[[5761,5786],"valid"],[[5787,5788],"valid",[],"NV8"],[[5789,5791],"disallowed"],[[5792,5866],"valid"],[[5867,5872],"valid",[],"NV8"],[[5873,5880],"valid"],[[5881,5887],"disallowed"],[[5888,5900],"valid"],[[5901,5901],"disallowed"],[[5902,5908],"valid"],[[5909,5919],"disallowed"],[[5920,5940],"valid"],[[5941,5942],"valid",[],"NV8"],[[5943,5951],"disallowed"],[[5952,5971],"valid"],[[5972,5983],"disallowed"],[[5984,5996],"valid"],[[5997,5997],"disallowed"],[[5998,6000],"valid"],[[6001,6001],"disallowed"],[[6002,6003],"valid"],[[6004,6015],"disallowed"],[[6016,6067],"valid"],[[6068,6069],"disallowed"],[[6070,6099],"valid"],[[6100,6102],"valid",[],"NV8"],[[6103,6103],"valid"],[[6104,6107],"valid",[],"NV8"],[[6108,6108],"valid"],[[6109,6109],"valid"],[[6110,6111],"disallowed"],[[6112,6121],"valid"],[[6122,6127],"disallowed"],[[6128,6137],"valid",[],"NV8"],[[6138,6143],"disallowed"],[[6144,6149],"valid",[],"NV8"],[[6150,6150],"disallowed"],[[6151,6154],"valid",[],"NV8"],[[6155,6157],"ignored"],[[6158,6158],"disallowed"],[[6159,6159],"disallowed"],[[6160,6169],"valid"],[[6170,6175],"disallowed"],[[6176,6263],"valid"],[[6264,6271],"disallowed"],[[6272,6313],"valid"],[[6314,6314],"valid"],[[6315,6319],"disallowed"],[[6320,6389],"valid"],[[6390,6399],"disallowed"],[[6400,6428],"valid"],[[6429,6430],"valid"],[[6431,6431],"disallowed"],[[6432,6443],"valid"],[[6444,6447],"disallowed"],[[6448,6459],"valid"],[[6460,6463],"disallowed"],[[6464,6464],"valid",[],"NV8"],[[6465,6467],"disallowed"],[[6468,6469],"valid",[],"NV8"],[[6470,6509],"valid"],[[6510,6511],"disallowed"],[[6512,6516],"valid"],[[6517,6527],"disallowed"],[[6528,6569],"valid"],[[6570,6571],"valid"],[[6572,6575],"disallowed"],[[6576,6601],"valid"],[[6602,6607],"disallowed"],[[6608,6617],"valid"],[[6618,6618],"valid",[],"XV8"],[[6619,6621],"disallowed"],[[6622,6623],"valid",[],"NV8"],[[6624,6655],"valid",[],"NV8"],[[6656,6683],"valid"],[[6684,6685],"disallowed"],[[6686,6687],"valid",[],"NV8"],[[6688,6750],"valid"],[[6751,6751],"disallowed"],[[6752,6780],"valid"],[[6781,6782],"disallowed"],[[6783,6793],"valid"],[[6794,6799],"disallowed"],[[6800,6809],"valid"],[[6810,6815],"disallowed"],[[6816,6822],"valid",[],"NV8"],[[6823,6823],"valid"],[[6824,6829],"valid",[],"NV8"],[[6830,6831],"disallowed"],[[6832,6845],"valid"],[[6846,6846],"valid",[],"NV8"],[[6847,6911],"disallowed"],[[6912,6987],"valid"],[[6988,6991],"disallowed"],[[6992,7001],"valid"],[[7002,7018],"valid",[],"NV8"],[[7019,7027],"valid"],[[7028,7036],"valid",[],"NV8"],[[7037,7039],"disallowed"],[[7040,7082],"valid"],[[7083,7085],"valid"],[[7086,7097],"valid"],[[7098,7103],"valid"],[[7104,7155],"valid"],[[7156,7163],"disallowed"],[[7164,7167],"valid",[],"NV8"],[[7168,7223],"valid"],[[7224,7226],"disallowed"],[[7227,7231],"valid",[],"NV8"],[[7232,7241],"valid"],[[7242,7244],"disallowed"],[[7245,7293],"valid"],[[7294,7295],"valid",[],"NV8"],[[7296,7359],"disallowed"],[[7360,7367],"valid",[],"NV8"],[[7368,7375],"disallowed"],[[7376,7378],"valid"],[[7379,7379],"valid",[],"NV8"],[[7380,7410],"valid"],[[7411,7414],"valid"],[[7415,7415],"disallowed"],[[7416,7417],"valid"],[[7418,7423],"disallowed"],[[7424,7467],"valid"],[[7468,7468],"mapped",[97]],[[7469,7469],"mapped",[230]],[[7470,7470],"mapped",[98]],[[7471,7471],"valid"],[[7472,7472],"mapped",[100]],[[7473,7473],"mapped",[101]],[[7474,7474],"mapped",[477]],[[7475,7475],"mapped",[103]],[[7476,7476],"mapped",[104]],[[7477,7477],"mapped",[105]],[[7478,7478],"mapped",[106]],[[7479,7479],"mapped",[107]],[[7480,7480],"mapped",[108]],[[7481,7481],"mapped",[109]],[[7482,7482],"mapped",[110]],[[7483,7483],"valid"],[[7484,7484],"mapped",[111]],[[7485,7485],"mapped",[547]],[[7486,7486],"mapped",[112]],[[7487,7487],"mapped",[114]],[[7488,7488],"mapped",[116]],[[7489,7489],"mapped",[117]],[[7490,7490],"mapped",[119]],[[7491,7491],"mapped",[97]],[[7492,7492],"mapped",[592]],[[7493,7493],"mapped",[593]],[[7494,7494],"mapped",[7426]],[[7495,7495],"mapped",[98]],[[7496,7496],"mapped",[100]],[[7497,7497],"mapped",[101]],[[7498,7498],"mapped",[601]],[[7499,7499],"mapped",[603]],[[7500,7500],"mapped",[604]],[[7501,7501],"mapped",[103]],[[7502,7502],"valid"],[[7503,7503],"mapped",[107]],[[7504,7504],"mapped",[109]],[[7505,7505],"mapped",[331]],[[7506,7506],"mapped",[111]],[[7507,7507],"mapped",[596]],[[7508,7508],"mapped",[7446]],[[7509,7509],"mapped",[7447]],[[7510,7510],"mapped",[112]],[[7511,7511],"mapped",[116]],[[7512,7512],"mapped",[117]],[[7513,7513],"mapped",[7453]],[[7514,7514],"mapped",[623]],[[7515,7515],"mapped",[118]],[[7516,7516],"mapped",[7461]],[[7517,7517],"mapped",[946]],[[7518,7518],"mapped",[947]],[[7519,7519],"mapped",[948]],[[7520,7520],"mapped",[966]],[[7521,7521],"mapped",[967]],[[7522,7522],"mapped",[105]],[[7523,7523],"mapped",[114]],[[7524,7524],"mapped",[117]],[[7525,7525],"mapped",[118]],[[7526,7526],"mapped",[946]],[[7527,7527],"mapped",[947]],[[7528,7528],"mapped",[961]],[[7529,7529],"mapped",[966]],[[7530,7530],"mapped",[967]],[[7531,7531],"valid"],[[7532,7543],"valid"],[[7544,7544],"mapped",[1085]],[[7545,7578],"valid"],[[7579,7579],"mapped",[594]],[[7580,7580],"mapped",[99]],[[7581,7581],"mapped",[597]],[[7582,7582],"mapped",[240]],[[7583,7583],"mapped",[604]],[[7584,7584],"mapped",[102]],[[7585,7585],"mapped",[607]],[[7586,7586],"mapped",[609]],[[7587,7587],"mapped",[613]],[[7588,7588],"mapped",[616]],[[7589,7589],"mapped",[617]],[[7590,7590],"mapped",[618]],[[7591,7591],"mapped",[7547]],[[7592,7592],"mapped",[669]],[[7593,7593],"mapped",[621]],[[7594,7594],"mapped",[7557]],[[7595,7595],"mapped",[671]],[[7596,7596],"mapped",[625]],[[7597,7597],"mapped",[624]],[[7598,7598],"mapped",[626]],[[7599,7599],"mapped",[627]],[[7600,7600],"mapped",[628]],[[7601,7601],"mapped",[629]],[[7602,7602],"mapped",[632]],[[7603,7603],"mapped",[642]],[[7604,7604],"mapped",[643]],[[7605,7605],"mapped",[427]],[[7606,7606],"mapped",[649]],[[7607,7607],"mapped",[650]],[[7608,7608],"mapped",[7452]],[[7609,7609],"mapped",[651]],[[7610,7610],"mapped",[652]],[[7611,7611],"mapped",[122]],[[7612,7612],"mapped",[656]],[[7613,7613],"mapped",[657]],[[7614,7614],"mapped",[658]],[[7615,7615],"mapped",[952]],[[7616,7619],"valid"],[[7620,7626],"valid"],[[7627,7654],"valid"],[[7655,7669],"valid"],[[7670,7675],"disallowed"],[[7676,7676],"valid"],[[7677,7677],"valid"],[[7678,7679],"valid"],[[7680,7680],"mapped",[7681]],[[7681,7681],"valid"],[[7682,7682],"mapped",[7683]],[[7683,7683],"valid"],[[7684,7684],"mapped",[7685]],[[7685,7685],"valid"],[[7686,7686],"mapped",[7687]],[[7687,7687],"valid"],[[7688,7688],"mapped",[7689]],[[7689,7689],"valid"],[[7690,7690],"mapped",[7691]],[[7691,7691],"valid"],[[7692,7692],"mapped",[7693]],[[7693,7693],"valid"],[[7694,7694],"mapped",[7695]],[[7695,7695],"valid"],[[7696,7696],"mapped",[7697]],[[7697,7697],"valid"],[[7698,7698],"mapped",[7699]],[[7699,7699],"valid"],[[7700,7700],"mapped",[7701]],[[7701,7701],"valid"],[[7702,7702],"mapped",[7703]],[[7703,7703],"valid"],[[7704,7704],"mapped",[7705]],[[7705,7705],"valid"],[[7706,7706],"mapped",[7707]],[[7707,7707],"valid"],[[7708,7708],"mapped",[7709]],[[7709,7709],"valid"],[[7710,7710],"mapped",[7711]],[[7711,7711],"valid"],[[7712,7712],"mapped",[7713]],[[7713,7713],"valid"],[[7714,7714],"mapped",[7715]],[[7715,7715],"valid"],[[7716,7716],"mapped",[7717]],[[7717,7717],"valid"],[[7718,7718],"mapped",[7719]],[[7719,7719],"valid"],[[7720,7720],"mapped",[7721]],[[7721,7721],"valid"],[[7722,7722],"mapped",[7723]],[[7723,7723],"valid"],[[7724,7724],"mapped",[7725]],[[7725,7725],"valid"],[[7726,7726],"mapped",[7727]],[[7727,7727],"valid"],[[7728,7728],"mapped",[7729]],[[7729,7729],"valid"],[[7730,7730],"mapped",[7731]],[[7731,7731],"valid"],[[7732,7732],"mapped",[7733]],[[7733,7733],"valid"],[[7734,7734],"mapped",[7735]],[[7735,7735],"valid"],[[7736,7736],"mapped",[7737]],[[7737,7737],"valid"],[[7738,7738],"mapped",[7739]],[[7739,7739],"valid"],[[7740,7740],"mapped",[7741]],[[7741,7741],"valid"],[[7742,7742],"mapped",[7743]],[[7743,7743],"valid"],[[7744,7744],"mapped",[7745]],[[7745,7745],"valid"],[[7746,7746],"mapped",[7747]],[[7747,7747],"valid"],[[7748,7748],"mapped",[7749]],[[7749,7749],"valid"],[[7750,7750],"mapped",[7751]],[[7751,7751],"valid"],[[7752,7752],"mapped",[7753]],[[7753,7753],"valid"],[[7754,7754],"mapped",[7755]],[[7755,7755],"valid"],[[7756,7756],"mapped",[7757]],[[7757,7757],"valid"],[[7758,7758],"mapped",[7759]],[[7759,7759],"valid"],[[7760,7760],"mapped",[7761]],[[7761,7761],"valid"],[[7762,7762],"mapped",[7763]],[[7763,7763],"valid"],[[7764,7764],"mapped",[7765]],[[7765,7765],"valid"],[[7766,7766],"mapped",[7767]],[[7767,7767],"valid"],[[7768,7768],"mapped",[7769]],[[7769,7769],"valid"],[[7770,7770],"mapped",[7771]],[[7771,7771],"valid"],[[7772,7772],"mapped",[7773]],[[7773,7773],"valid"],[[7774,7774],"mapped",[7775]],[[7775,7775],"valid"],[[7776,7776],"mapped",[7777]],[[7777,7777],"valid"],[[7778,7778],"mapped",[7779]],[[7779,7779],"valid"],[[7780,7780],"mapped",[7781]],[[7781,7781],"valid"],[[7782,7782],"mapped",[7783]],[[7783,7783],"valid"],[[7784,7784],"mapped",[7785]],[[7785,7785],"valid"],[[7786,7786],"mapped",[7787]],[[7787,7787],"valid"],[[7788,7788],"mapped",[7789]],[[7789,7789],"valid"],[[7790,7790],"mapped",[7791]],[[7791,7791],"valid"],[[7792,7792],"mapped",[7793]],[[7793,7793],"valid"],[[7794,7794],"mapped",[7795]],[[7795,7795],"valid"],[[7796,7796],"mapped",[7797]],[[7797,7797],"valid"],[[7798,7798],"mapped",[7799]],[[7799,7799],"valid"],[[7800,7800],"mapped",[7801]],[[7801,7801],"valid"],[[7802,7802],"mapped",[7803]],[[7803,7803],"valid"],[[7804,7804],"mapped",[7805]],[[7805,7805],"valid"],[[7806,7806],"mapped",[7807]],[[7807,7807],"valid"],[[7808,7808],"mapped",[7809]],[[7809,7809],"valid"],[[7810,7810],"mapped",[7811]],[[7811,7811],"valid"],[[7812,7812],"mapped",[7813]],[[7813,7813],"valid"],[[7814,7814],"mapped",[7815]],[[7815,7815],"valid"],[[7816,7816],"mapped",[7817]],[[7817,7817],"valid"],[[7818,7818],"mapped",[7819]],[[7819,7819],"valid"],[[7820,7820],"mapped",[7821]],[[7821,7821],"valid"],[[7822,7822],"mapped",[7823]],[[7823,7823],"valid"],[[7824,7824],"mapped",[7825]],[[7825,7825],"valid"],[[7826,7826],"mapped",[7827]],[[7827,7827],"valid"],[[7828,7828],"mapped",[7829]],[[7829,7833],"valid"],[[7834,7834],"mapped",[97,702]],[[7835,7835],"mapped",[7777]],[[7836,7837],"valid"],[[7838,7838],"mapped",[115,115]],[[7839,7839],"valid"],[[7840,7840],"mapped",[7841]],[[7841,7841],"valid"],[[7842,7842],"mapped",[7843]],[[7843,7843],"valid"],[[7844,7844],"mapped",[7845]],[[7845,7845],"valid"],[[7846,7846],"mapped",[7847]],[[7847,7847],"valid"],[[7848,7848],"mapped",[7849]],[[7849,7849],"valid"],[[7850,7850],"mapped",[7851]],[[7851,7851],"valid"],[[7852,7852],"mapped",[7853]],[[7853,7853],"valid"],[[7854,7854],"mapped",[7855]],[[7855,7855],"valid"],[[7856,7856],"mapped",[7857]],[[7857,7857],"valid"],[[7858,7858],"mapped",[7859]],[[7859,7859],"valid"],[[7860,7860],"mapped",[7861]],[[7861,7861],"valid"],[[7862,7862],"mapped",[7863]],[[7863,7863],"valid"],[[7864,7864],"mapped",[7865]],[[7865,7865],"valid"],[[7866,7866],"mapped",[7867]],[[7867,7867],"valid"],[[7868,7868],"mapped",[7869]],[[7869,7869],"valid"],[[7870,7870],"mapped",[7871]],[[7871,7871],"valid"],[[7872,7872],"mapped",[7873]],[[7873,7873],"valid"],[[7874,7874],"mapped",[7875]],[[7875,7875],"valid"],[[7876,7876],"mapped",[7877]],[[7877,7877],"valid"],[[7878,7878],"mapped",[7879]],[[7879,7879],"valid"],[[7880,7880],"mapped",[7881]],[[7881,7881],"valid"],[[7882,7882],"mapped",[7883]],[[7883,7883],"valid"],[[7884,7884],"mapped",[7885]],[[7885,7885],"valid"],[[7886,7886],"mapped",[7887]],[[7887,7887],"valid"],[[7888,7888],"mapped",[7889]],[[7889,7889],"valid"],[[7890,7890],"mapped",[7891]],[[7891,7891],"valid"],[[7892,7892],"mapped",[7893]],[[7893,7893],"valid"],[[7894,7894],"mapped",[7895]],[[7895,7895],"valid"],[[7896,7896],"mapped",[7897]],[[7897,7897],"valid"],[[7898,7898],"mapped",[7899]],[[7899,7899],"valid"],[[7900,7900],"mapped",[7901]],[[7901,7901],"valid"],[[7902,7902],"mapped",[7903]],[[7903,7903],"valid"],[[7904,7904],"mapped",[7905]],[[7905,7905],"valid"],[[7906,7906],"mapped",[7907]],[[7907,7907],"valid"],[[7908,7908],"mapped",[7909]],[[7909,7909],"valid"],[[7910,7910],"mapped",[7911]],[[7911,7911],"valid"],[[7912,7912],"mapped",[7913]],[[7913,7913],"valid"],[[7914,7914],"mapped",[7915]],[[7915,7915],"valid"],[[7916,7916],"mapped",[7917]],[[7917,7917],"valid"],[[7918,7918],"mapped",[7919]],[[7919,7919],"valid"],[[7920,7920],"mapped",[7921]],[[7921,7921],"valid"],[[7922,7922],"mapped",[7923]],[[7923,7923],"valid"],[[7924,7924],"mapped",[7925]],[[7925,7925],"valid"],[[7926,7926],"mapped",[7927]],[[7927,7927],"valid"],[[7928,7928],"mapped",[7929]],[[7929,7929],"valid"],[[7930,7930],"mapped",[7931]],[[7931,7931],"valid"],[[7932,7932],"mapped",[7933]],[[7933,7933],"valid"],[[7934,7934],"mapped",[7935]],[[7935,7935],"valid"],[[7936,7943],"valid"],[[7944,7944],"mapped",[7936]],[[7945,7945],"mapped",[7937]],[[7946,7946],"mapped",[7938]],[[7947,7947],"mapped",[7939]],[[7948,7948],"mapped",[7940]],[[7949,7949],"mapped",[7941]],[[7950,7950],"mapped",[7942]],[[7951,7951],"mapped",[7943]],[[7952,7957],"valid"],[[7958,7959],"disallowed"],[[7960,7960],"mapped",[7952]],[[7961,7961],"mapped",[7953]],[[7962,7962],"mapped",[7954]],[[7963,7963],"mapped",[7955]],[[7964,7964],"mapped",[7956]],[[7965,7965],"mapped",[7957]],[[7966,7967],"disallowed"],[[7968,7975],"valid"],[[7976,7976],"mapped",[7968]],[[7977,7977],"mapped",[7969]],[[7978,7978],"mapped",[7970]],[[7979,7979],"mapped",[7971]],[[7980,7980],"mapped",[7972]],[[7981,7981],"mapped",[7973]],[[7982,7982],"mapped",[7974]],[[7983,7983],"mapped",[7975]],[[7984,7991],"valid"],[[7992,7992],"mapped",[7984]],[[7993,7993],"mapped",[7985]],[[7994,7994],"mapped",[7986]],[[7995,7995],"mapped",[7987]],[[7996,7996],"mapped",[7988]],[[7997,7997],"mapped",[7989]],[[7998,7998],"mapped",[7990]],[[7999,7999],"mapped",[7991]],[[8000,8005],"valid"],[[8006,8007],"disallowed"],[[8008,8008],"mapped",[8000]],[[8009,8009],"mapped",[8001]],[[8010,8010],"mapped",[8002]],[[8011,8011],"mapped",[8003]],[[8012,8012],"mapped",[8004]],[[8013,8013],"mapped",[8005]],[[8014,8015],"disallowed"],[[8016,8023],"valid"],[[8024,8024],"disallowed"],[[8025,8025],"mapped",[8017]],[[8026,8026],"disallowed"],[[8027,8027],"mapped",[8019]],[[8028,8028],"disallowed"],[[8029,8029],"mapped",[8021]],[[8030,8030],"disallowed"],[[8031,8031],"mapped",[8023]],[[8032,8039],"valid"],[[8040,8040],"mapped",[8032]],[[8041,8041],"mapped",[8033]],[[8042,8042],"mapped",[8034]],[[8043,8043],"mapped",[8035]],[[8044,8044],"mapped",[8036]],[[8045,8045],"mapped",[8037]],[[8046,8046],"mapped",[8038]],[[8047,8047],"mapped",[8039]],[[8048,8048],"valid"],[[8049,8049],"mapped",[940]],[[8050,8050],"valid"],[[8051,8051],"mapped",[941]],[[8052,8052],"valid"],[[8053,8053],"mapped",[942]],[[8054,8054],"valid"],[[8055,8055],"mapped",[943]],[[8056,8056],"valid"],[[8057,8057],"mapped",[972]],[[8058,8058],"valid"],[[8059,8059],"mapped",[973]],[[8060,8060],"valid"],[[8061,8061],"mapped",[974]],[[8062,8063],"disallowed"],[[8064,8064],"mapped",[7936,953]],[[8065,8065],"mapped",[7937,953]],[[8066,8066],"mapped",[7938,953]],[[8067,8067],"mapped",[7939,953]],[[8068,8068],"mapped",[7940,953]],[[8069,8069],"mapped",[7941,953]],[[8070,8070],"mapped",[7942,953]],[[8071,8071],"mapped",[7943,953]],[[8072,8072],"mapped",[7936,953]],[[8073,8073],"mapped",[7937,953]],[[8074,8074],"mapped",[7938,953]],[[8075,8075],"mapped",[7939,953]],[[8076,8076],"mapped",[7940,953]],[[8077,8077],"mapped",[7941,953]],[[8078,8078],"mapped",[7942,953]],[[8079,8079],"mapped",[7943,953]],[[8080,8080],"mapped",[7968,953]],[[8081,8081],"mapped",[7969,953]],[[8082,8082],"mapped",[7970,953]],[[8083,8083],"mapped",[7971,953]],[[8084,8084],"mapped",[7972,953]],[[8085,8085],"mapped",[7973,953]],[[8086,8086],"mapped",[7974,953]],[[8087,8087],"mapped",[7975,953]],[[8088,8088],"mapped",[7968,953]],[[8089,8089],"mapped",[7969,953]],[[8090,8090],"mapped",[7970,953]],[[8091,8091],"mapped",[7971,953]],[[8092,8092],"mapped",[7972,953]],[[8093,8093],"mapped",[7973,953]],[[8094,8094],"mapped",[7974,953]],[[8095,8095],"mapped",[7975,953]],[[8096,8096],"mapped",[8032,953]],[[8097,8097],"mapped",[8033,953]],[[8098,8098],"mapped",[8034,953]],[[8099,8099],"mapped",[8035,953]],[[8100,8100],"mapped",[8036,953]],[[8101,8101],"mapped",[8037,953]],[[8102,8102],"mapped",[8038,953]],[[8103,8103],"mapped",[8039,953]],[[8104,8104],"mapped",[8032,953]],[[8105,8105],"mapped",[8033,953]],[[8106,8106],"mapped",[8034,953]],[[8107,8107],"mapped",[8035,953]],[[8108,8108],"mapped",[8036,953]],[[8109,8109],"mapped",[8037,953]],[[8110,8110],"mapped",[8038,953]],[[8111,8111],"mapped",[8039,953]],[[8112,8113],"valid"],[[8114,8114],"mapped",[8048,953]],[[8115,8115],"mapped",[945,953]],[[8116,8116],"mapped",[940,953]],[[8117,8117],"disallowed"],[[8118,8118],"valid"],[[8119,8119],"mapped",[8118,953]],[[8120,8120],"mapped",[8112]],[[8121,8121],"mapped",[8113]],[[8122,8122],"mapped",[8048]],[[8123,8123],"mapped",[940]],[[8124,8124],"mapped",[945,953]],[[8125,8125],"disallowed_STD3_mapped",[32,787]],[[8126,8126],"mapped",[953]],[[8127,8127],"disallowed_STD3_mapped",[32,787]],[[8128,8128],"disallowed_STD3_mapped",[32,834]],[[8129,8129],"disallowed_STD3_mapped",[32,776,834]],[[8130,8130],"mapped",[8052,953]],[[8131,8131],"mapped",[951,953]],[[8132,8132],"mapped",[942,953]],[[8133,8133],"disallowed"],[[8134,8134],"valid"],[[8135,8135],"mapped",[8134,953]],[[8136,8136],"mapped",[8050]],[[8137,8137],"mapped",[941]],[[8138,8138],"mapped",[8052]],[[8139,8139],"mapped",[942]],[[8140,8140],"mapped",[951,953]],[[8141,8141],"disallowed_STD3_mapped",[32,787,768]],[[8142,8142],"disallowed_STD3_mapped",[32,787,769]],[[8143,8143],"disallowed_STD3_mapped",[32,787,834]],[[8144,8146],"valid"],[[8147,8147],"mapped",[912]],[[8148,8149],"disallowed"],[[8150,8151],"valid"],[[8152,8152],"mapped",[8144]],[[8153,8153],"mapped",[8145]],[[8154,8154],"mapped",[8054]],[[8155,8155],"mapped",[943]],[[8156,8156],"disallowed"],[[8157,8157],"disallowed_STD3_mapped",[32,788,768]],[[8158,8158],"disallowed_STD3_mapped",[32,788,769]],[[8159,8159],"disallowed_STD3_mapped",[32,788,834]],[[8160,8162],"valid"],[[8163,8163],"mapped",[944]],[[8164,8167],"valid"],[[8168,8168],"mapped",[8160]],[[8169,8169],"mapped",[8161]],[[8170,8170],"mapped",[8058]],[[8171,8171],"mapped",[973]],[[8172,8172],"mapped",[8165]],[[8173,8173],"disallowed_STD3_mapped",[32,776,768]],[[8174,8174],"disallowed_STD3_mapped",[32,776,769]],[[8175,8175],"disallowed_STD3_mapped",[96]],[[8176,8177],"disallowed"],[[8178,8178],"mapped",[8060,953]],[[8179,8179],"mapped",[969,953]],[[8180,8180],"mapped",[974,953]],[[8181,8181],"disallowed"],[[8182,8182],"valid"],[[8183,8183],"mapped",[8182,953]],[[8184,8184],"mapped",[8056]],[[8185,8185],"mapped",[972]],[[8186,8186],"mapped",[8060]],[[8187,8187],"mapped",[974]],[[8188,8188],"mapped",[969,953]],[[8189,8189],"disallowed_STD3_mapped",[32,769]],[[8190,8190],"disallowed_STD3_mapped",[32,788]],[[8191,8191],"disallowed"],[[8192,8202],"disallowed_STD3_mapped",[32]],[[8203,8203],"ignored"],[[8204,8205],"deviation",[]],[[8206,8207],"disallowed"],[[8208,8208],"valid",[],"NV8"],[[8209,8209],"mapped",[8208]],[[8210,8214],"valid",[],"NV8"],[[8215,8215],"disallowed_STD3_mapped",[32,819]],[[8216,8227],"valid",[],"NV8"],[[8228,8230],"disallowed"],[[8231,8231],"valid",[],"NV8"],[[8232,8238],"disallowed"],[[8239,8239],"disallowed_STD3_mapped",[32]],[[8240,8242],"valid",[],"NV8"],[[8243,8243],"mapped",[8242,8242]],[[8244,8244],"mapped",[8242,8242,8242]],[[8245,8245],"valid",[],"NV8"],[[8246,8246],"mapped",[8245,8245]],[[8247,8247],"mapped",[8245,8245,8245]],[[8248,8251],"valid",[],"NV8"],[[8252,8252],"disallowed_STD3_mapped",[33,33]],[[8253,8253],"valid",[],"NV8"],[[8254,8254],"disallowed_STD3_mapped",[32,773]],[[8255,8262],"valid",[],"NV8"],[[8263,8263],"disallowed_STD3_mapped",[63,63]],[[8264,8264],"disallowed_STD3_mapped",[63,33]],[[8265,8265],"disallowed_STD3_mapped",[33,63]],[[8266,8269],"valid",[],"NV8"],[[8270,8274],"valid",[],"NV8"],[[8275,8276],"valid",[],"NV8"],[[8277,8278],"valid",[],"NV8"],[[8279,8279],"mapped",[8242,8242,8242,8242]],[[8280,8286],"valid",[],"NV8"],[[8287,8287],"disallowed_STD3_mapped",[32]],[[8288,8288],"ignored"],[[8289,8291],"disallowed"],[[8292,8292],"ignored"],[[8293,8293],"disallowed"],[[8294,8297],"disallowed"],[[8298,8303],"disallowed"],[[8304,8304],"mapped",[48]],[[8305,8305],"mapped",[105]],[[8306,8307],"disallowed"],[[8308,8308],"mapped",[52]],[[8309,8309],"mapped",[53]],[[8310,8310],"mapped",[54]],[[8311,8311],"mapped",[55]],[[8312,8312],"mapped",[56]],[[8313,8313],"mapped",[57]],[[8314,8314],"disallowed_STD3_mapped",[43]],[[8315,8315],"mapped",[8722]],[[8316,8316],"disallowed_STD3_mapped",[61]],[[8317,8317],"disallowed_STD3_mapped",[40]],[[8318,8318],"disallowed_STD3_mapped",[41]],[[8319,8319],"mapped",[110]],[[8320,8320],"mapped",[48]],[[8321,8321],"mapped",[49]],[[8322,8322],"mapped",[50]],[[8323,8323],"mapped",[51]],[[8324,8324],"mapped",[52]],[[8325,8325],"mapped",[53]],[[8326,8326],"mapped",[54]],[[8327,8327],"mapped",[55]],[[8328,8328],"mapped",[56]],[[8329,8329],"mapped",[57]],[[8330,8330],"disallowed_STD3_mapped",[43]],[[8331,8331],"mapped",[8722]],[[8332,8332],"disallowed_STD3_mapped",[61]],[[8333,8333],"disallowed_STD3_mapped",[40]],[[8334,8334],"disallowed_STD3_mapped",[41]],[[8335,8335],"disallowed"],[[8336,8336],"mapped",[97]],[[8337,8337],"mapped",[101]],[[8338,8338],"mapped",[111]],[[8339,8339],"mapped",[120]],[[8340,8340],"mapped",[601]],[[8341,8341],"mapped",[104]],[[8342,8342],"mapped",[107]],[[8343,8343],"mapped",[108]],[[8344,8344],"mapped",[109]],[[8345,8345],"mapped",[110]],[[8346,8346],"mapped",[112]],[[8347,8347],"mapped",[115]],[[8348,8348],"mapped",[116]],[[8349,8351],"disallowed"],[[8352,8359],"valid",[],"NV8"],[[8360,8360],"mapped",[114,115]],[[8361,8362],"valid",[],"NV8"],[[8363,8363],"valid",[],"NV8"],[[8364,8364],"valid",[],"NV8"],[[8365,8367],"valid",[],"NV8"],[[8368,8369],"valid",[],"NV8"],[[8370,8373],"valid",[],"NV8"],[[8374,8376],"valid",[],"NV8"],[[8377,8377],"valid",[],"NV8"],[[8378,8378],"valid",[],"NV8"],[[8379,8381],"valid",[],"NV8"],[[8382,8382],"valid",[],"NV8"],[[8383,8399],"disallowed"],[[8400,8417],"valid",[],"NV8"],[[8418,8419],"valid",[],"NV8"],[[8420,8426],"valid",[],"NV8"],[[8427,8427],"valid",[],"NV8"],[[8428,8431],"valid",[],"NV8"],[[8432,8432],"valid",[],"NV8"],[[8433,8447],"disallowed"],[[8448,8448],"disallowed_STD3_mapped",[97,47,99]],[[8449,8449],"disallowed_STD3_mapped",[97,47,115]],[[8450,8450],"mapped",[99]],[[8451,8451],"mapped",[176,99]],[[8452,8452],"valid",[],"NV8"],[[8453,8453],"disallowed_STD3_mapped",[99,47,111]],[[8454,8454],"disallowed_STD3_mapped",[99,47,117]],[[8455,8455],"mapped",[603]],[[8456,8456],"valid",[],"NV8"],[[8457,8457],"mapped",[176,102]],[[8458,8458],"mapped",[103]],[[8459,8462],"mapped",[104]],[[8463,8463],"mapped",[295]],[[8464,8465],"mapped",[105]],[[8466,8467],"mapped",[108]],[[8468,8468],"valid",[],"NV8"],[[8469,8469],"mapped",[110]],[[8470,8470],"mapped",[110,111]],[[8471,8472],"valid",[],"NV8"],[[8473,8473],"mapped",[112]],[[8474,8474],"mapped",[113]],[[8475,8477],"mapped",[114]],[[8478,8479],"valid",[],"NV8"],[[8480,8480],"mapped",[115,109]],[[8481,8481],"mapped",[116,101,108]],[[8482,8482],"mapped",[116,109]],[[8483,8483],"valid",[],"NV8"],[[8484,8484],"mapped",[122]],[[8485,8485],"valid",[],"NV8"],[[8486,8486],"mapped",[969]],[[8487,8487],"valid",[],"NV8"],[[8488,8488],"mapped",[122]],[[8489,8489],"valid",[],"NV8"],[[8490,8490],"mapped",[107]],[[8491,8491],"mapped",[229]],[[8492,8492],"mapped",[98]],[[8493,8493],"mapped",[99]],[[8494,8494],"valid",[],"NV8"],[[8495,8496],"mapped",[101]],[[8497,8497],"mapped",[102]],[[8498,8498],"disallowed"],[[8499,8499],"mapped",[109]],[[8500,8500],"mapped",[111]],[[8501,8501],"mapped",[1488]],[[8502,8502],"mapped",[1489]],[[8503,8503],"mapped",[1490]],[[8504,8504],"mapped",[1491]],[[8505,8505],"mapped",[105]],[[8506,8506],"valid",[],"NV8"],[[8507,8507],"mapped",[102,97,120]],[[8508,8508],"mapped",[960]],[[8509,8510],"mapped",[947]],[[8511,8511],"mapped",[960]],[[8512,8512],"mapped",[8721]],[[8513,8516],"valid",[],"NV8"],[[8517,8518],"mapped",[100]],[[8519,8519],"mapped",[101]],[[8520,8520],"mapped",[105]],[[8521,8521],"mapped",[106]],[[8522,8523],"valid",[],"NV8"],[[8524,8524],"valid",[],"NV8"],[[8525,8525],"valid",[],"NV8"],[[8526,8526],"valid"],[[8527,8527],"valid",[],"NV8"],[[8528,8528],"mapped",[49,8260,55]],[[8529,8529],"mapped",[49,8260,57]],[[8530,8530],"mapped",[49,8260,49,48]],[[8531,8531],"mapped",[49,8260,51]],[[8532,8532],"mapped",[50,8260,51]],[[8533,8533],"mapped",[49,8260,53]],[[8534,8534],"mapped",[50,8260,53]],[[8535,8535],"mapped",[51,8260,53]],[[8536,8536],"mapped",[52,8260,53]],[[8537,8537],"mapped",[49,8260,54]],[[8538,8538],"mapped",[53,8260,54]],[[8539,8539],"mapped",[49,8260,56]],[[8540,8540],"mapped",[51,8260,56]],[[8541,8541],"mapped",[53,8260,56]],[[8542,8542],"mapped",[55,8260,56]],[[8543,8543],"mapped",[49,8260]],[[8544,8544],"mapped",[105]],[[8545,8545],"mapped",[105,105]],[[8546,8546],"mapped",[105,105,105]],[[8547,8547],"mapped",[105,118]],[[8548,8548],"mapped",[118]],[[8549,8549],"mapped",[118,105]],[[8550,8550],"mapped",[118,105,105]],[[8551,8551],"mapped",[118,105,105,105]],[[8552,8552],"mapped",[105,120]],[[8553,8553],"mapped",[120]],[[8554,8554],"mapped",[120,105]],[[8555,8555],"mapped",[120,105,105]],[[8556,8556],"mapped",[108]],[[8557,8557],"mapped",[99]],[[8558,8558],"mapped",[100]],[[8559,8559],"mapped",[109]],[[8560,8560],"mapped",[105]],[[8561,8561],"mapped",[105,105]],[[8562,8562],"mapped",[105,105,105]],[[8563,8563],"mapped",[105,118]],[[8564,8564],"mapped",[118]],[[8565,8565],"mapped",[118,105]],[[8566,8566],"mapped",[118,105,105]],[[8567,8567],"mapped",[118,105,105,105]],[[8568,8568],"mapped",[105,120]],[[8569,8569],"mapped",[120]],[[8570,8570],"mapped",[120,105]],[[8571,8571],"mapped",[120,105,105]],[[8572,8572],"mapped",[108]],[[8573,8573],"mapped",[99]],[[8574,8574],"mapped",[100]],[[8575,8575],"mapped",[109]],[[8576,8578],"valid",[],"NV8"],[[8579,8579],"disallowed"],[[8580,8580],"valid"],[[8581,8584],"valid",[],"NV8"],[[8585,8585],"mapped",[48,8260,51]],[[8586,8587],"valid",[],"NV8"],[[8588,8591],"disallowed"],[[8592,8682],"valid",[],"NV8"],[[8683,8691],"valid",[],"NV8"],[[8692,8703],"valid",[],"NV8"],[[8704,8747],"valid",[],"NV8"],[[8748,8748],"mapped",[8747,8747]],[[8749,8749],"mapped",[8747,8747,8747]],[[8750,8750],"valid",[],"NV8"],[[8751,8751],"mapped",[8750,8750]],[[8752,8752],"mapped",[8750,8750,8750]],[[8753,8799],"valid",[],"NV8"],[[8800,8800],"disallowed_STD3_valid"],[[8801,8813],"valid",[],"NV8"],[[8814,8815],"disallowed_STD3_valid"],[[8816,8945],"valid",[],"NV8"],[[8946,8959],"valid",[],"NV8"],[[8960,8960],"valid",[],"NV8"],[[8961,8961],"valid",[],"NV8"],[[8962,9000],"valid",[],"NV8"],[[9001,9001],"mapped",[12296]],[[9002,9002],"mapped",[12297]],[[9003,9082],"valid",[],"NV8"],[[9083,9083],"valid",[],"NV8"],[[9084,9084],"valid",[],"NV8"],[[9085,9114],"valid",[],"NV8"],[[9115,9166],"valid",[],"NV8"],[[9167,9168],"valid",[],"NV8"],[[9169,9179],"valid",[],"NV8"],[[9180,9191],"valid",[],"NV8"],[[9192,9192],"valid",[],"NV8"],[[9193,9203],"valid",[],"NV8"],[[9204,9210],"valid",[],"NV8"],[[9211,9215],"disallowed"],[[9216,9252],"valid",[],"NV8"],[[9253,9254],"valid",[],"NV8"],[[9255,9279],"disallowed"],[[9280,9290],"valid",[],"NV8"],[[9291,9311],"disallowed"],[[9312,9312],"mapped",[49]],[[9313,9313],"mapped",[50]],[[9314,9314],"mapped",[51]],[[9315,9315],"mapped",[52]],[[9316,9316],"mapped",[53]],[[9317,9317],"mapped",[54]],[[9318,9318],"mapped",[55]],[[9319,9319],"mapped",[56]],[[9320,9320],"mapped",[57]],[[9321,9321],"mapped",[49,48]],[[9322,9322],"mapped",[49,49]],[[9323,9323],"mapped",[49,50]],[[9324,9324],"mapped",[49,51]],[[9325,9325],"mapped",[49,52]],[[9326,9326],"mapped",[49,53]],[[9327,9327],"mapped",[49,54]],[[9328,9328],"mapped",[49,55]],[[9329,9329],"mapped",[49,56]],[[9330,9330],"mapped",[49,57]],[[9331,9331],"mapped",[50,48]],[[9332,9332],"disallowed_STD3_mapped",[40,49,41]],[[9333,9333],"disallowed_STD3_mapped",[40,50,41]],[[9334,9334],"disallowed_STD3_mapped",[40,51,41]],[[9335,9335],"disallowed_STD3_mapped",[40,52,41]],[[9336,9336],"disallowed_STD3_mapped",[40,53,41]],[[9337,9337],"disallowed_STD3_mapped",[40,54,41]],[[9338,9338],"disallowed_STD3_mapped",[40,55,41]],[[9339,9339],"disallowed_STD3_mapped",[40,56,41]],[[9340,9340],"disallowed_STD3_mapped",[40,57,41]],[[9341,9341],"disallowed_STD3_mapped",[40,49,48,41]],[[9342,9342],"disallowed_STD3_mapped",[40,49,49,41]],[[9343,9343],"disallowed_STD3_mapped",[40,49,50,41]],[[9344,9344],"disallowed_STD3_mapped",[40,49,51,41]],[[9345,9345],"disallowed_STD3_mapped",[40,49,52,41]],[[9346,9346],"disallowed_STD3_mapped",[40,49,53,41]],[[9347,9347],"disallowed_STD3_mapped",[40,49,54,41]],[[9348,9348],"disallowed_STD3_mapped",[40,49,55,41]],[[9349,9349],"disallowed_STD3_mapped",[40,49,56,41]],[[9350,9350],"disallowed_STD3_mapped",[40,49,57,41]],[[9351,9351],"disallowed_STD3_mapped",[40,50,48,41]],[[9352,9371],"disallowed"],[[9372,9372],"disallowed_STD3_mapped",[40,97,41]],[[9373,9373],"disallowed_STD3_mapped",[40,98,41]],[[9374,9374],"disallowed_STD3_mapped",[40,99,41]],[[9375,9375],"disallowed_STD3_mapped",[40,100,41]],[[9376,9376],"disallowed_STD3_mapped",[40,101,41]],[[9377,9377],"disallowed_STD3_mapped",[40,102,41]],[[9378,9378],"disallowed_STD3_mapped",[40,103,41]],[[9379,9379],"disallowed_STD3_mapped",[40,104,41]],[[9380,9380],"disallowed_STD3_mapped",[40,105,41]],[[9381,9381],"disallowed_STD3_mapped",[40,106,41]],[[9382,9382],"disallowed_STD3_mapped",[40,107,41]],[[9383,9383],"disallowed_STD3_mapped",[40,108,41]],[[9384,9384],"disallowed_STD3_mapped",[40,109,41]],[[9385,9385],"disallowed_STD3_mapped",[40,110,41]],[[9386,9386],"disallowed_STD3_mapped",[40,111,41]],[[9387,9387],"disallowed_STD3_mapped",[40,112,41]],[[9388,9388],"disallowed_STD3_mapped",[40,113,41]],[[9389,9389],"disallowed_STD3_mapped",[40,114,41]],[[9390,9390],"disallowed_STD3_mapped",[40,115,41]],[[9391,9391],"disallowed_STD3_mapped",[40,116,41]],[[9392,9392],"disallowed_STD3_mapped",[40,117,41]],[[9393,9393],"disallowed_STD3_mapped",[40,118,41]],[[9394,9394],"disallowed_STD3_mapped",[40,119,41]],[[9395,9395],"disallowed_STD3_mapped",[40,120,41]],[[9396,9396],"disallowed_STD3_mapped",[40,121,41]],[[9397,9397],"disallowed_STD3_mapped",[40,122,41]],[[9398,9398],"mapped",[97]],[[9399,9399],"mapped",[98]],[[9400,9400],"mapped",[99]],[[9401,9401],"mapped",[100]],[[9402,9402],"mapped",[101]],[[9403,9403],"mapped",[102]],[[9404,9404],"mapped",[103]],[[9405,9405],"mapped",[104]],[[9406,9406],"mapped",[105]],[[9407,9407],"mapped",[106]],[[9408,9408],"mapped",[107]],[[9409,9409],"mapped",[108]],[[9410,9410],"mapped",[109]],[[9411,9411],"mapped",[110]],[[9412,9412],"mapped",[111]],[[9413,9413],"mapped",[112]],[[9414,9414],"mapped",[113]],[[9415,9415],"mapped",[114]],[[9416,9416],"mapped",[115]],[[9417,9417],"mapped",[116]],[[9418,9418],"mapped",[117]],[[9419,9419],"mapped",[118]],[[9420,9420],"mapped",[119]],[[9421,9421],"mapped",[120]],[[9422,9422],"mapped",[121]],[[9423,9423],"mapped",[122]],[[9424,9424],"mapped",[97]],[[9425,9425],"mapped",[98]],[[9426,9426],"mapped",[99]],[[9427,9427],"mapped",[100]],[[9428,9428],"mapped",[101]],[[9429,9429],"mapped",[102]],[[9430,9430],"mapped",[103]],[[9431,9431],"mapped",[104]],[[9432,9432],"mapped",[105]],[[9433,9433],"mapped",[106]],[[9434,9434],"mapped",[107]],[[9435,9435],"mapped",[108]],[[9436,9436],"mapped",[109]],[[9437,9437],"mapped",[110]],[[9438,9438],"mapped",[111]],[[9439,9439],"mapped",[112]],[[9440,9440],"mapped",[113]],[[9441,9441],"mapped",[114]],[[9442,9442],"mapped",[115]],[[9443,9443],"mapped",[116]],[[9444,9444],"mapped",[117]],[[9445,9445],"mapped",[118]],[[9446,9446],"mapped",[119]],[[9447,9447],"mapped",[120]],[[9448,9448],"mapped",[121]],[[9449,9449],"mapped",[122]],[[9450,9450],"mapped",[48]],[[9451,9470],"valid",[],"NV8"],[[9471,9471],"valid",[],"NV8"],[[9472,9621],"valid",[],"NV8"],[[9622,9631],"valid",[],"NV8"],[[9632,9711],"valid",[],"NV8"],[[9712,9719],"valid",[],"NV8"],[[9720,9727],"valid",[],"NV8"],[[9728,9747],"valid",[],"NV8"],[[9748,9749],"valid",[],"NV8"],[[9750,9751],"valid",[],"NV8"],[[9752,9752],"valid",[],"NV8"],[[9753,9753],"valid",[],"NV8"],[[9754,9839],"valid",[],"NV8"],[[9840,9841],"valid",[],"NV8"],[[9842,9853],"valid",[],"NV8"],[[9854,9855],"valid",[],"NV8"],[[9856,9865],"valid",[],"NV8"],[[9866,9873],"valid",[],"NV8"],[[9874,9884],"valid",[],"NV8"],[[9885,9885],"valid",[],"NV8"],[[9886,9887],"valid",[],"NV8"],[[9888,9889],"valid",[],"NV8"],[[9890,9905],"valid",[],"NV8"],[[9906,9906],"valid",[],"NV8"],[[9907,9916],"valid",[],"NV8"],[[9917,9919],"valid",[],"NV8"],[[9920,9923],"valid",[],"NV8"],[[9924,9933],"valid",[],"NV8"],[[9934,9934],"valid",[],"NV8"],[[9935,9953],"valid",[],"NV8"],[[9954,9954],"valid",[],"NV8"],[[9955,9955],"valid",[],"NV8"],[[9956,9959],"valid",[],"NV8"],[[9960,9983],"valid",[],"NV8"],[[9984,9984],"valid",[],"NV8"],[[9985,9988],"valid",[],"NV8"],[[9989,9989],"valid",[],"NV8"],[[9990,9993],"valid",[],"NV8"],[[9994,9995],"valid",[],"NV8"],[[9996,10023],"valid",[],"NV8"],[[10024,10024],"valid",[],"NV8"],[[10025,10059],"valid",[],"NV8"],[[10060,10060],"valid",[],"NV8"],[[10061,10061],"valid",[],"NV8"],[[10062,10062],"valid",[],"NV8"],[[10063,10066],"valid",[],"NV8"],[[10067,10069],"valid",[],"NV8"],[[10070,10070],"valid",[],"NV8"],[[10071,10071],"valid",[],"NV8"],[[10072,10078],"valid",[],"NV8"],[[10079,10080],"valid",[],"NV8"],[[10081,10087],"valid",[],"NV8"],[[10088,10101],"valid",[],"NV8"],[[10102,10132],"valid",[],"NV8"],[[10133,10135],"valid",[],"NV8"],[[10136,10159],"valid",[],"NV8"],[[10160,10160],"valid",[],"NV8"],[[10161,10174],"valid",[],"NV8"],[[10175,10175],"valid",[],"NV8"],[[10176,10182],"valid",[],"NV8"],[[10183,10186],"valid",[],"NV8"],[[10187,10187],"valid",[],"NV8"],[[10188,10188],"valid",[],"NV8"],[[10189,10189],"valid",[],"NV8"],[[10190,10191],"valid",[],"NV8"],[[10192,10219],"valid",[],"NV8"],[[10220,10223],"valid",[],"NV8"],[[10224,10239],"valid",[],"NV8"],[[10240,10495],"valid",[],"NV8"],[[10496,10763],"valid",[],"NV8"],[[10764,10764],"mapped",[8747,8747,8747,8747]],[[10765,10867],"valid",[],"NV8"],[[10868,10868],"disallowed_STD3_mapped",[58,58,61]],[[10869,10869],"disallowed_STD3_mapped",[61,61]],[[10870,10870],"disallowed_STD3_mapped",[61,61,61]],[[10871,10971],"valid",[],"NV8"],[[10972,10972],"mapped",[10973,824]],[[10973,11007],"valid",[],"NV8"],[[11008,11021],"valid",[],"NV8"],[[11022,11027],"valid",[],"NV8"],[[11028,11034],"valid",[],"NV8"],[[11035,11039],"valid",[],"NV8"],[[11040,11043],"valid",[],"NV8"],[[11044,11084],"valid",[],"NV8"],[[11085,11087],"valid",[],"NV8"],[[11088,11092],"valid",[],"NV8"],[[11093,11097],"valid",[],"NV8"],[[11098,11123],"valid",[],"NV8"],[[11124,11125],"disallowed"],[[11126,11157],"valid",[],"NV8"],[[11158,11159],"disallowed"],[[11160,11193],"valid",[],"NV8"],[[11194,11196],"disallowed"],[[11197,11208],"valid",[],"NV8"],[[11209,11209],"disallowed"],[[11210,11217],"valid",[],"NV8"],[[11218,11243],"disallowed"],[[11244,11247],"valid",[],"NV8"],[[11248,11263],"disallowed"],[[11264,11264],"mapped",[11312]],[[11265,11265],"mapped",[11313]],[[11266,11266],"mapped",[11314]],[[11267,11267],"mapped",[11315]],[[11268,11268],"mapped",[11316]],[[11269,11269],"mapped",[11317]],[[11270,11270],"mapped",[11318]],[[11271,11271],"mapped",[11319]],[[11272,11272],"mapped",[11320]],[[11273,11273],"mapped",[11321]],[[11274,11274],"mapped",[11322]],[[11275,11275],"mapped",[11323]],[[11276,11276],"mapped",[11324]],[[11277,11277],"mapped",[11325]],[[11278,11278],"mapped",[11326]],[[11279,11279],"mapped",[11327]],[[11280,11280],"mapped",[11328]],[[11281,11281],"mapped",[11329]],[[11282,11282],"mapped",[11330]],[[11283,11283],"mapped",[11331]],[[11284,11284],"mapped",[11332]],[[11285,11285],"mapped",[11333]],[[11286,11286],"mapped",[11334]],[[11287,11287],"mapped",[11335]],[[11288,11288],"mapped",[11336]],[[11289,11289],"mapped",[11337]],[[11290,11290],"mapped",[11338]],[[11291,11291],"mapped",[11339]],[[11292,11292],"mapped",[11340]],[[11293,11293],"mapped",[11341]],[[11294,11294],"mapped",[11342]],[[11295,11295],"mapped",[11343]],[[11296,11296],"mapped",[11344]],[[11297,11297],"mapped",[11345]],[[11298,11298],"mapped",[11346]],[[11299,11299],"mapped",[11347]],[[11300,11300],"mapped",[11348]],[[11301,11301],"mapped",[11349]],[[11302,11302],"mapped",[11350]],[[11303,11303],"mapped",[11351]],[[11304,11304],"mapped",[11352]],[[11305,11305],"mapped",[11353]],[[11306,11306],"mapped",[11354]],[[11307,11307],"mapped",[11355]],[[11308,11308],"mapped",[11356]],[[11309,11309],"mapped",[11357]],[[11310,11310],"mapped",[11358]],[[11311,11311],"disallowed"],[[11312,11358],"valid"],[[11359,11359],"disallowed"],[[11360,11360],"mapped",[11361]],[[11361,11361],"valid"],[[11362,11362],"mapped",[619]],[[11363,11363],"mapped",[7549]],[[11364,11364],"mapped",[637]],[[11365,11366],"valid"],[[11367,11367],"mapped",[11368]],[[11368,11368],"valid"],[[11369,11369],"mapped",[11370]],[[11370,11370],"valid"],[[11371,11371],"mapped",[11372]],[[11372,11372],"valid"],[[11373,11373],"mapped",[593]],[[11374,11374],"mapped",[625]],[[11375,11375],"mapped",[592]],[[11376,11376],"mapped",[594]],[[11377,11377],"valid"],[[11378,11378],"mapped",[11379]],[[11379,11379],"valid"],[[11380,11380],"valid"],[[11381,11381],"mapped",[11382]],[[11382,11383],"valid"],[[11384,11387],"valid"],[[11388,11388],"mapped",[106]],[[11389,11389],"mapped",[118]],[[11390,11390],"mapped",[575]],[[11391,11391],"mapped",[576]],[[11392,11392],"mapped",[11393]],[[11393,11393],"valid"],[[11394,11394],"mapped",[11395]],[[11395,11395],"valid"],[[11396,11396],"mapped",[11397]],[[11397,11397],"valid"],[[11398,11398],"mapped",[11399]],[[11399,11399],"valid"],[[11400,11400],"mapped",[11401]],[[11401,11401],"valid"],[[11402,11402],"mapped",[11403]],[[11403,11403],"valid"],[[11404,11404],"mapped",[11405]],[[11405,11405],"valid"],[[11406,11406],"mapped",[11407]],[[11407,11407],"valid"],[[11408,11408],"mapped",[11409]],[[11409,11409],"valid"],[[11410,11410],"mapped",[11411]],[[11411,11411],"valid"],[[11412,11412],"mapped",[11413]],[[11413,11413],"valid"],[[11414,11414],"mapped",[11415]],[[11415,11415],"valid"],[[11416,11416],"mapped",[11417]],[[11417,11417],"valid"],[[11418,11418],"mapped",[11419]],[[11419,11419],"valid"],[[11420,11420],"mapped",[11421]],[[11421,11421],"valid"],[[11422,11422],"mapped",[11423]],[[11423,11423],"valid"],[[11424,11424],"mapped",[11425]],[[11425,11425],"valid"],[[11426,11426],"mapped",[11427]],[[11427,11427],"valid"],[[11428,11428],"mapped",[11429]],[[11429,11429],"valid"],[[11430,11430],"mapped",[11431]],[[11431,11431],"valid"],[[11432,11432],"mapped",[11433]],[[11433,11433],"valid"],[[11434,11434],"mapped",[11435]],[[11435,11435],"valid"],[[11436,11436],"mapped",[11437]],[[11437,11437],"valid"],[[11438,11438],"mapped",[11439]],[[11439,11439],"valid"],[[11440,11440],"mapped",[11441]],[[11441,11441],"valid"],[[11442,11442],"mapped",[11443]],[[11443,11443],"valid"],[[11444,11444],"mapped",[11445]],[[11445,11445],"valid"],[[11446,11446],"mapped",[11447]],[[11447,11447],"valid"],[[11448,11448],"mapped",[11449]],[[11449,11449],"valid"],[[11450,11450],"mapped",[11451]],[[11451,11451],"valid"],[[11452,11452],"mapped",[11453]],[[11453,11453],"valid"],[[11454,11454],"mapped",[11455]],[[11455,11455],"valid"],[[11456,11456],"mapped",[11457]],[[11457,11457],"valid"],[[11458,11458],"mapped",[11459]],[[11459,11459],"valid"],[[11460,11460],"mapped",[11461]],[[11461,11461],"valid"],[[11462,11462],"mapped",[11463]],[[11463,11463],"valid"],[[11464,11464],"mapped",[11465]],[[11465,11465],"valid"],[[11466,11466],"mapped",[11467]],[[11467,11467],"valid"],[[11468,11468],"mapped",[11469]],[[11469,11469],"valid"],[[11470,11470],"mapped",[11471]],[[11471,11471],"valid"],[[11472,11472],"mapped",[11473]],[[11473,11473],"valid"],[[11474,11474],"mapped",[11475]],[[11475,11475],"valid"],[[11476,11476],"mapped",[11477]],[[11477,11477],"valid"],[[11478,11478],"mapped",[11479]],[[11479,11479],"valid"],[[11480,11480],"mapped",[11481]],[[11481,11481],"valid"],[[11482,11482],"mapped",[11483]],[[11483,11483],"valid"],[[11484,11484],"mapped",[11485]],[[11485,11485],"valid"],[[11486,11486],"mapped",[11487]],[[11487,11487],"valid"],[[11488,11488],"mapped",[11489]],[[11489,11489],"valid"],[[11490,11490],"mapped",[11491]],[[11491,11492],"valid"],[[11493,11498],"valid",[],"NV8"],[[11499,11499],"mapped",[11500]],[[11500,11500],"valid"],[[11501,11501],"mapped",[11502]],[[11502,11505],"valid"],[[11506,11506],"mapped",[11507]],[[11507,11507],"valid"],[[11508,11512],"disallowed"],[[11513,11519],"valid",[],"NV8"],[[11520,11557],"valid"],[[11558,11558],"disallowed"],[[11559,11559],"valid"],[[11560,11564],"disallowed"],[[11565,11565],"valid"],[[11566,11567],"disallowed"],[[11568,11621],"valid"],[[11622,11623],"valid"],[[11624,11630],"disallowed"],[[11631,11631],"mapped",[11617]],[[11632,11632],"valid",[],"NV8"],[[11633,11646],"disallowed"],[[11647,11647],"valid"],[[11648,11670],"valid"],[[11671,11679],"disallowed"],[[11680,11686],"valid"],[[11687,11687],"disallowed"],[[11688,11694],"valid"],[[11695,11695],"disallowed"],[[11696,11702],"valid"],[[11703,11703],"disallowed"],[[11704,11710],"valid"],[[11711,11711],"disallowed"],[[11712,11718],"valid"],[[11719,11719],"disallowed"],[[11720,11726],"valid"],[[11727,11727],"disallowed"],[[11728,11734],"valid"],[[11735,11735],"disallowed"],[[11736,11742],"valid"],[[11743,11743],"disallowed"],[[11744,11775],"valid"],[[11776,11799],"valid",[],"NV8"],[[11800,11803],"valid",[],"NV8"],[[11804,11805],"valid",[],"NV8"],[[11806,11822],"valid",[],"NV8"],[[11823,11823],"valid"],[[11824,11824],"valid",[],"NV8"],[[11825,11825],"valid",[],"NV8"],[[11826,11835],"valid",[],"NV8"],[[11836,11842],"valid",[],"NV8"],[[11843,11903],"disallowed"],[[11904,11929],"valid",[],"NV8"],[[11930,11930],"disallowed"],[[11931,11934],"valid",[],"NV8"],[[11935,11935],"mapped",[27597]],[[11936,12018],"valid",[],"NV8"],[[12019,12019],"mapped",[40863]],[[12020,12031],"disallowed"],[[12032,12032],"mapped",[19968]],[[12033,12033],"mapped",[20008]],[[12034,12034],"mapped",[20022]],[[12035,12035],"mapped",[20031]],[[12036,12036],"mapped",[20057]],[[12037,12037],"mapped",[20101]],[[12038,12038],"mapped",[20108]],[[12039,12039],"mapped",[20128]],[[12040,12040],"mapped",[20154]],[[12041,12041],"mapped",[20799]],[[12042,12042],"mapped",[20837]],[[12043,12043],"mapped",[20843]],[[12044,12044],"mapped",[20866]],[[12045,12045],"mapped",[20886]],[[12046,12046],"mapped",[20907]],[[12047,12047],"mapped",[20960]],[[12048,12048],"mapped",[20981]],[[12049,12049],"mapped",[20992]],[[12050,12050],"mapped",[21147]],[[12051,12051],"mapped",[21241]],[[12052,12052],"mapped",[21269]],[[12053,12053],"mapped",[21274]],[[12054,12054],"mapped",[21304]],[[12055,12055],"mapped",[21313]],[[12056,12056],"mapped",[21340]],[[12057,12057],"mapped",[21353]],[[12058,12058],"mapped",[21378]],[[12059,12059],"mapped",[21430]],[[12060,12060],"mapped",[21448]],[[12061,12061],"mapped",[21475]],[[12062,12062],"mapped",[22231]],[[12063,12063],"mapped",[22303]],[[12064,12064],"mapped",[22763]],[[12065,12065],"mapped",[22786]],[[12066,12066],"mapped",[22794]],[[12067,12067],"mapped",[22805]],[[12068,12068],"mapped",[22823]],[[12069,12069],"mapped",[22899]],[[12070,12070],"mapped",[23376]],[[12071,12071],"mapped",[23424]],[[12072,12072],"mapped",[23544]],[[12073,12073],"mapped",[23567]],[[12074,12074],"mapped",[23586]],[[12075,12075],"mapped",[23608]],[[12076,12076],"mapped",[23662]],[[12077,12077],"mapped",[23665]],[[12078,12078],"mapped",[24027]],[[12079,12079],"mapped",[24037]],[[12080,12080],"mapped",[24049]],[[12081,12081],"mapped",[24062]],[[12082,12082],"mapped",[24178]],[[12083,12083],"mapped",[24186]],[[12084,12084],"mapped",[24191]],[[12085,12085],"mapped",[24308]],[[12086,12086],"mapped",[24318]],[[12087,12087],"mapped",[24331]],[[12088,12088],"mapped",[24339]],[[12089,12089],"mapped",[24400]],[[12090,12090],"mapped",[24417]],[[12091,12091],"mapped",[24435]],[[12092,12092],"mapped",[24515]],[[12093,12093],"mapped",[25096]],[[12094,12094],"mapped",[25142]],[[12095,12095],"mapped",[25163]],[[12096,12096],"mapped",[25903]],[[12097,12097],"mapped",[25908]],[[12098,12098],"mapped",[25991]],[[12099,12099],"mapped",[26007]],[[12100,12100],"mapped",[26020]],[[12101,12101],"mapped",[26041]],[[12102,12102],"mapped",[26080]],[[12103,12103],"mapped",[26085]],[[12104,12104],"mapped",[26352]],[[12105,12105],"mapped",[26376]],[[12106,12106],"mapped",[26408]],[[12107,12107],"mapped",[27424]],[[12108,12108],"mapped",[27490]],[[12109,12109],"mapped",[27513]],[[12110,12110],"mapped",[27571]],[[12111,12111],"mapped",[27595]],[[12112,12112],"mapped",[27604]],[[12113,12113],"mapped",[27611]],[[12114,12114],"mapped",[27663]],[[12115,12115],"mapped",[27668]],[[12116,12116],"mapped",[27700]],[[12117,12117],"mapped",[28779]],[[12118,12118],"mapped",[29226]],[[12119,12119],"mapped",[29238]],[[12120,12120],"mapped",[29243]],[[12121,12121],"mapped",[29247]],[[12122,12122],"mapped",[29255]],[[12123,12123],"mapped",[29273]],[[12124,12124],"mapped",[29275]],[[12125,12125],"mapped",[29356]],[[12126,12126],"mapped",[29572]],[[12127,12127],"mapped",[29577]],[[12128,12128],"mapped",[29916]],[[12129,12129],"mapped",[29926]],[[12130,12130],"mapped",[29976]],[[12131,12131],"mapped",[29983]],[[12132,12132],"mapped",[29992]],[[12133,12133],"mapped",[30000]],[[12134,12134],"mapped",[30091]],[[12135,12135],"mapped",[30098]],[[12136,12136],"mapped",[30326]],[[12137,12137],"mapped",[30333]],[[12138,12138],"mapped",[30382]],[[12139,12139],"mapped",[30399]],[[12140,12140],"mapped",[30446]],[[12141,12141],"mapped",[30683]],[[12142,12142],"mapped",[30690]],[[12143,12143],"mapped",[30707]],[[12144,12144],"mapped",[31034]],[[12145,12145],"mapped",[31160]],[[12146,12146],"mapped",[31166]],[[12147,12147],"mapped",[31348]],[[12148,12148],"mapped",[31435]],[[12149,12149],"mapped",[31481]],[[12150,12150],"mapped",[31859]],[[12151,12151],"mapped",[31992]],[[12152,12152],"mapped",[32566]],[[12153,12153],"mapped",[32593]],[[12154,12154],"mapped",[32650]],[[12155,12155],"mapped",[32701]],[[12156,12156],"mapped",[32769]],[[12157,12157],"mapped",[32780]],[[12158,12158],"mapped",[32786]],[[12159,12159],"mapped",[32819]],[[12160,12160],"mapped",[32895]],[[12161,12161],"mapped",[32905]],[[12162,12162],"mapped",[33251]],[[12163,12163],"mapped",[33258]],[[12164,12164],"mapped",[33267]],[[12165,12165],"mapped",[33276]],[[12166,12166],"mapped",[33292]],[[12167,12167],"mapped",[33307]],[[12168,12168],"mapped",[33311]],[[12169,12169],"mapped",[33390]],[[12170,12170],"mapped",[33394]],[[12171,12171],"mapped",[33400]],[[12172,12172],"mapped",[34381]],[[12173,12173],"mapped",[34411]],[[12174,12174],"mapped",[34880]],[[12175,12175],"mapped",[34892]],[[12176,12176],"mapped",[34915]],[[12177,12177],"mapped",[35198]],[[12178,12178],"mapped",[35211]],[[12179,12179],"mapped",[35282]],[[12180,12180],"mapped",[35328]],[[12181,12181],"mapped",[35895]],[[12182,12182],"mapped",[35910]],[[12183,12183],"mapped",[35925]],[[12184,12184],"mapped",[35960]],[[12185,12185],"mapped",[35997]],[[12186,12186],"mapped",[36196]],[[12187,12187],"mapped",[36208]],[[12188,12188],"mapped",[36275]],[[12189,12189],"mapped",[36523]],[[12190,12190],"mapped",[36554]],[[12191,12191],"mapped",[36763]],[[12192,12192],"mapped",[36784]],[[12193,12193],"mapped",[36789]],[[12194,12194],"mapped",[37009]],[[12195,12195],"mapped",[37193]],[[12196,12196],"mapped",[37318]],[[12197,12197],"mapped",[37324]],[[12198,12198],"mapped",[37329]],[[12199,12199],"mapped",[38263]],[[12200,12200],"mapped",[38272]],[[12201,12201],"mapped",[38428]],[[12202,12202],"mapped",[38582]],[[12203,12203],"mapped",[38585]],[[12204,12204],"mapped",[38632]],[[12205,12205],"mapped",[38737]],[[12206,12206],"mapped",[38750]],[[12207,12207],"mapped",[38754]],[[12208,12208],"mapped",[38761]],[[12209,12209],"mapped",[38859]],[[12210,12210],"mapped",[38893]],[[12211,12211],"mapped",[38899]],[[12212,12212],"mapped",[38913]],[[12213,12213],"mapped",[39080]],[[12214,12214],"mapped",[39131]],[[12215,12215],"mapped",[39135]],[[12216,12216],"mapped",[39318]],[[12217,12217],"mapped",[39321]],[[12218,12218],"mapped",[39340]],[[12219,12219],"mapped",[39592]],[[12220,12220],"mapped",[39640]],[[12221,12221],"mapped",[39647]],[[12222,12222],"mapped",[39717]],[[12223,12223],"mapped",[39727]],[[12224,12224],"mapped",[39730]],[[12225,12225],"mapped",[39740]],[[12226,12226],"mapped",[39770]],[[12227,12227],"mapped",[40165]],[[12228,12228],"mapped",[40565]],[[12229,12229],"mapped",[40575]],[[12230,12230],"mapped",[40613]],[[12231,12231],"mapped",[40635]],[[12232,12232],"mapped",[40643]],[[12233,12233],"mapped",[40653]],[[12234,12234],"mapped",[40657]],[[12235,12235],"mapped",[40697]],[[12236,12236],"mapped",[40701]],[[12237,12237],"mapped",[40718]],[[12238,12238],"mapped",[40723]],[[12239,12239],"mapped",[40736]],[[12240,12240],"mapped",[40763]],[[12241,12241],"mapped",[40778]],[[12242,12242],"mapped",[40786]],[[12243,12243],"mapped",[40845]],[[12244,12244],"mapped",[40860]],[[12245,12245],"mapped",[40864]],[[12246,12271],"disallowed"],[[12272,12283],"disallowed"],[[12284,12287],"disallowed"],[[12288,12288],"disallowed_STD3_mapped",[32]],[[12289,12289],"valid",[],"NV8"],[[12290,12290],"mapped",[46]],[[12291,12292],"valid",[],"NV8"],[[12293,12295],"valid"],[[12296,12329],"valid",[],"NV8"],[[12330,12333],"valid"],[[12334,12341],"valid",[],"NV8"],[[12342,12342],"mapped",[12306]],[[12343,12343],"valid",[],"NV8"],[[12344,12344],"mapped",[21313]],[[12345,12345],"mapped",[21316]],[[12346,12346],"mapped",[21317]],[[12347,12347],"valid",[],"NV8"],[[12348,12348],"valid"],[[12349,12349],"valid",[],"NV8"],[[12350,12350],"valid",[],"NV8"],[[12351,12351],"valid",[],"NV8"],[[12352,12352],"disallowed"],[[12353,12436],"valid"],[[12437,12438],"valid"],[[12439,12440],"disallowed"],[[12441,12442],"valid"],[[12443,12443],"disallowed_STD3_mapped",[32,12441]],[[12444,12444],"disallowed_STD3_mapped",[32,12442]],[[12445,12446],"valid"],[[12447,12447],"mapped",[12424,12426]],[[12448,12448],"valid",[],"NV8"],[[12449,12542],"valid"],[[12543,12543],"mapped",[12467,12488]],[[12544,12548],"disallowed"],[[12549,12588],"valid"],[[12589,12589],"valid"],[[12590,12592],"disallowed"],[[12593,12593],"mapped",[4352]],[[12594,12594],"mapped",[4353]],[[12595,12595],"mapped",[4522]],[[12596,12596],"mapped",[4354]],[[12597,12597],"mapped",[4524]],[[12598,12598],"mapped",[4525]],[[12599,12599],"mapped",[4355]],[[12600,12600],"mapped",[4356]],[[12601,12601],"mapped",[4357]],[[12602,12602],"mapped",[4528]],[[12603,12603],"mapped",[4529]],[[12604,12604],"mapped",[4530]],[[12605,12605],"mapped",[4531]],[[12606,12606],"mapped",[4532]],[[12607,12607],"mapped",[4533]],[[12608,12608],"mapped",[4378]],[[12609,12609],"mapped",[4358]],[[12610,12610],"mapped",[4359]],[[12611,12611],"mapped",[4360]],[[12612,12612],"mapped",[4385]],[[12613,12613],"mapped",[4361]],[[12614,12614],"mapped",[4362]],[[12615,12615],"mapped",[4363]],[[12616,12616],"mapped",[4364]],[[12617,12617],"mapped",[4365]],[[12618,12618],"mapped",[4366]],[[12619,12619],"mapped",[4367]],[[12620,12620],"mapped",[4368]],[[12621,12621],"mapped",[4369]],[[12622,12622],"mapped",[4370]],[[12623,12623],"mapped",[4449]],[[12624,12624],"mapped",[4450]],[[12625,12625],"mapped",[4451]],[[12626,12626],"mapped",[4452]],[[12627,12627],"mapped",[4453]],[[12628,12628],"mapped",[4454]],[[12629,12629],"mapped",[4455]],[[12630,12630],"mapped",[4456]],[[12631,12631],"mapped",[4457]],[[12632,12632],"mapped",[4458]],[[12633,12633],"mapped",[4459]],[[12634,12634],"mapped",[4460]],[[12635,12635],"mapped",[4461]],[[12636,12636],"mapped",[4462]],[[12637,12637],"mapped",[4463]],[[12638,12638],"mapped",[4464]],[[12639,12639],"mapped",[4465]],[[12640,12640],"mapped",[4466]],[[12641,12641],"mapped",[4467]],[[12642,12642],"mapped",[4468]],[[12643,12643],"mapped",[4469]],[[12644,12644],"disallowed"],[[12645,12645],"mapped",[4372]],[[12646,12646],"mapped",[4373]],[[12647,12647],"mapped",[4551]],[[12648,12648],"mapped",[4552]],[[12649,12649],"mapped",[4556]],[[12650,12650],"mapped",[4558]],[[12651,12651],"mapped",[4563]],[[12652,12652],"mapped",[4567]],[[12653,12653],"mapped",[4569]],[[12654,12654],"mapped",[4380]],[[12655,12655],"mapped",[4573]],[[12656,12656],"mapped",[4575]],[[12657,12657],"mapped",[4381]],[[12658,12658],"mapped",[4382]],[[12659,12659],"mapped",[4384]],[[12660,12660],"mapped",[4386]],[[12661,12661],"mapped",[4387]],[[12662,12662],"mapped",[4391]],[[12663,12663],"mapped",[4393]],[[12664,12664],"mapped",[4395]],[[12665,12665],"mapped",[4396]],[[12666,12666],"mapped",[4397]],[[12667,12667],"mapped",[4398]],[[12668,12668],"mapped",[4399]],[[12669,12669],"mapped",[4402]],[[12670,12670],"mapped",[4406]],[[12671,12671],"mapped",[4416]],[[12672,12672],"mapped",[4423]],[[12673,12673],"mapped",[4428]],[[12674,12674],"mapped",[4593]],[[12675,12675],"mapped",[4594]],[[12676,12676],"mapped",[4439]],[[12677,12677],"mapped",[4440]],[[12678,12678],"mapped",[4441]],[[12679,12679],"mapped",[4484]],[[12680,12680],"mapped",[4485]],[[12681,12681],"mapped",[4488]],[[12682,12682],"mapped",[4497]],[[12683,12683],"mapped",[4498]],[[12684,12684],"mapped",[4500]],[[12685,12685],"mapped",[4510]],[[12686,12686],"mapped",[4513]],[[12687,12687],"disallowed"],[[12688,12689],"valid",[],"NV8"],[[12690,12690],"mapped",[19968]],[[12691,12691],"mapped",[20108]],[[12692,12692],"mapped",[19977]],[[12693,12693],"mapped",[22235]],[[12694,12694],"mapped",[19978]],[[12695,12695],"mapped",[20013]],[[12696,12696],"mapped",[19979]],[[12697,12697],"mapped",[30002]],[[12698,12698],"mapped",[20057]],[[12699,12699],"mapped",[19993]],[[12700,12700],"mapped",[19969]],[[12701,12701],"mapped",[22825]],[[12702,12702],"mapped",[22320]],[[12703,12703],"mapped",[20154]],[[12704,12727],"valid"],[[12728,12730],"valid"],[[12731,12735],"disallowed"],[[12736,12751],"valid",[],"NV8"],[[12752,12771],"valid",[],"NV8"],[[12772,12783],"disallowed"],[[12784,12799],"valid"],[[12800,12800],"disallowed_STD3_mapped",[40,4352,41]],[[12801,12801],"disallowed_STD3_mapped",[40,4354,41]],[[12802,12802],"disallowed_STD3_mapped",[40,4355,41]],[[12803,12803],"disallowed_STD3_mapped",[40,4357,41]],[[12804,12804],"disallowed_STD3_mapped",[40,4358,41]],[[12805,12805],"disallowed_STD3_mapped",[40,4359,41]],[[12806,12806],"disallowed_STD3_mapped",[40,4361,41]],[[12807,12807],"disallowed_STD3_mapped",[40,4363,41]],[[12808,12808],"disallowed_STD3_mapped",[40,4364,41]],[[12809,12809],"disallowed_STD3_mapped",[40,4366,41]],[[12810,12810],"disallowed_STD3_mapped",[40,4367,41]],[[12811,12811],"disallowed_STD3_mapped",[40,4368,41]],[[12812,12812],"disallowed_STD3_mapped",[40,4369,41]],[[12813,12813],"disallowed_STD3_mapped",[40,4370,41]],[[12814,12814],"disallowed_STD3_mapped",[40,44032,41]],[[12815,12815],"disallowed_STD3_mapped",[40,45208,41]],[[12816,12816],"disallowed_STD3_mapped",[40,45796,41]],[[12817,12817],"disallowed_STD3_mapped",[40,46972,41]],[[12818,12818],"disallowed_STD3_mapped",[40,47560,41]],[[12819,12819],"disallowed_STD3_mapped",[40,48148,41]],[[12820,12820],"disallowed_STD3_mapped",[40,49324,41]],[[12821,12821],"disallowed_STD3_mapped",[40,50500,41]],[[12822,12822],"disallowed_STD3_mapped",[40,51088,41]],[[12823,12823],"disallowed_STD3_mapped",[40,52264,41]],[[12824,12824],"disallowed_STD3_mapped",[40,52852,41]],[[12825,12825],"disallowed_STD3_mapped",[40,53440,41]],[[12826,12826],"disallowed_STD3_mapped",[40,54028,41]],[[12827,12827],"disallowed_STD3_mapped",[40,54616,41]],[[12828,12828],"disallowed_STD3_mapped",[40,51452,41]],[[12829,12829],"disallowed_STD3_mapped",[40,50724,51204,41]],[[12830,12830],"disallowed_STD3_mapped",[40,50724,54980,41]],[[12831,12831],"disallowed"],[[12832,12832],"disallowed_STD3_mapped",[40,19968,41]],[[12833,12833],"disallowed_STD3_mapped",[40,20108,41]],[[12834,12834],"disallowed_STD3_mapped",[40,19977,41]],[[12835,12835],"disallowed_STD3_mapped",[40,22235,41]],[[12836,12836],"disallowed_STD3_mapped",[40,20116,41]],[[12837,12837],"disallowed_STD3_mapped",[40,20845,41]],[[12838,12838],"disallowed_STD3_mapped",[40,19971,41]],[[12839,12839],"disallowed_STD3_mapped",[40,20843,41]],[[12840,12840],"disallowed_STD3_mapped",[40,20061,41]],[[12841,12841],"disallowed_STD3_mapped",[40,21313,41]],[[12842,12842],"disallowed_STD3_mapped",[40,26376,41]],[[12843,12843],"disallowed_STD3_mapped",[40,28779,41]],[[12844,12844],"disallowed_STD3_mapped",[40,27700,41]],[[12845,12845],"disallowed_STD3_mapped",[40,26408,41]],[[12846,12846],"disallowed_STD3_mapped",[40,37329,41]],[[12847,12847],"disallowed_STD3_mapped",[40,22303,41]],[[12848,12848],"disallowed_STD3_mapped",[40,26085,41]],[[12849,12849],"disallowed_STD3_mapped",[40,26666,41]],[[12850,12850],"disallowed_STD3_mapped",[40,26377,41]],[[12851,12851],"disallowed_STD3_mapped",[40,31038,41]],[[12852,12852],"disallowed_STD3_mapped",[40,21517,41]],[[12853,12853],"disallowed_STD3_mapped",[40,29305,41]],[[12854,12854],"disallowed_STD3_mapped",[40,36001,41]],[[12855,12855],"disallowed_STD3_mapped",[40,31069,41]],[[12856,12856],"disallowed_STD3_mapped",[40,21172,41]],[[12857,12857],"disallowed_STD3_mapped",[40,20195,41]],[[12858,12858],"disallowed_STD3_mapped",[40,21628,41]],[[12859,12859],"disallowed_STD3_mapped",[40,23398,41]],[[12860,12860],"disallowed_STD3_mapped",[40,30435,41]],[[12861,12861],"disallowed_STD3_mapped",[40,20225,41]],[[12862,12862],"disallowed_STD3_mapped",[40,36039,41]],[[12863,12863],"disallowed_STD3_mapped",[40,21332,41]],[[12864,12864],"disallowed_STD3_mapped",[40,31085,41]],[[12865,12865],"disallowed_STD3_mapped",[40,20241,41]],[[12866,12866],"disallowed_STD3_mapped",[40,33258,41]],[[12867,12867],"disallowed_STD3_mapped",[40,33267,41]],[[12868,12868],"mapped",[21839]],[[12869,12869],"mapped",[24188]],[[12870,12870],"mapped",[25991]],[[12871,12871],"mapped",[31631]],[[12872,12879],"valid",[],"NV8"],[[12880,12880],"mapped",[112,116,101]],[[12881,12881],"mapped",[50,49]],[[12882,12882],"mapped",[50,50]],[[12883,12883],"mapped",[50,51]],[[12884,12884],"mapped",[50,52]],[[12885,12885],"mapped",[50,53]],[[12886,12886],"mapped",[50,54]],[[12887,12887],"mapped",[50,55]],[[12888,12888],"mapped",[50,56]],[[12889,12889],"mapped",[50,57]],[[12890,12890],"mapped",[51,48]],[[12891,12891],"mapped",[51,49]],[[12892,12892],"mapped",[51,50]],[[12893,12893],"mapped",[51,51]],[[12894,12894],"mapped",[51,52]],[[12895,12895],"mapped",[51,53]],[[12896,12896],"mapped",[4352]],[[12897,12897],"mapped",[4354]],[[12898,12898],"mapped",[4355]],[[12899,12899],"mapped",[4357]],[[12900,12900],"mapped",[4358]],[[12901,12901],"mapped",[4359]],[[12902,12902],"mapped",[4361]],[[12903,12903],"mapped",[4363]],[[12904,12904],"mapped",[4364]],[[12905,12905],"mapped",[4366]],[[12906,12906],"mapped",[4367]],[[12907,12907],"mapped",[4368]],[[12908,12908],"mapped",[4369]],[[12909,12909],"mapped",[4370]],[[12910,12910],"mapped",[44032]],[[12911,12911],"mapped",[45208]],[[12912,12912],"mapped",[45796]],[[12913,12913],"mapped",[46972]],[[12914,12914],"mapped",[47560]],[[12915,12915],"mapped",[48148]],[[12916,12916],"mapped",[49324]],[[12917,12917],"mapped",[50500]],[[12918,12918],"mapped",[51088]],[[12919,12919],"mapped",[52264]],[[12920,12920],"mapped",[52852]],[[12921,12921],"mapped",[53440]],[[12922,12922],"mapped",[54028]],[[12923,12923],"mapped",[54616]],[[12924,12924],"mapped",[52280,44256]],[[12925,12925],"mapped",[51452,51032]],[[12926,12926],"mapped",[50864]],[[12927,12927],"valid",[],"NV8"],[[12928,12928],"mapped",[19968]],[[12929,12929],"mapped",[20108]],[[12930,12930],"mapped",[19977]],[[12931,12931],"mapped",[22235]],[[12932,12932],"mapped",[20116]],[[12933,12933],"mapped",[20845]],[[12934,12934],"mapped",[19971]],[[12935,12935],"mapped",[20843]],[[12936,12936],"mapped",[20061]],[[12937,12937],"mapped",[21313]],[[12938,12938],"mapped",[26376]],[[12939,12939],"mapped",[28779]],[[12940,12940],"mapped",[27700]],[[12941,12941],"mapped",[26408]],[[12942,12942],"mapped",[37329]],[[12943,12943],"mapped",[22303]],[[12944,12944],"mapped",[26085]],[[12945,12945],"mapped",[26666]],[[12946,12946],"mapped",[26377]],[[12947,12947],"mapped",[31038]],[[12948,12948],"mapped",[21517]],[[12949,12949],"mapped",[29305]],[[12950,12950],"mapped",[36001]],[[12951,12951],"mapped",[31069]],[[12952,12952],"mapped",[21172]],[[12953,12953],"mapped",[31192]],[[12954,12954],"mapped",[30007]],[[12955,12955],"mapped",[22899]],[[12956,12956],"mapped",[36969]],[[12957,12957],"mapped",[20778]],[[12958,12958],"mapped",[21360]],[[12959,12959],"mapped",[27880]],[[12960,12960],"mapped",[38917]],[[12961,12961],"mapped",[20241]],[[12962,12962],"mapped",[20889]],[[12963,12963],"mapped",[27491]],[[12964,12964],"mapped",[19978]],[[12965,12965],"mapped",[20013]],[[12966,12966],"mapped",[19979]],[[12967,12967],"mapped",[24038]],[[12968,12968],"mapped",[21491]],[[12969,12969],"mapped",[21307]],[[12970,12970],"mapped",[23447]],[[12971,12971],"mapped",[23398]],[[12972,12972],"mapped",[30435]],[[12973,12973],"mapped",[20225]],[[12974,12974],"mapped",[36039]],[[12975,12975],"mapped",[21332]],[[12976,12976],"mapped",[22812]],[[12977,12977],"mapped",[51,54]],[[12978,12978],"mapped",[51,55]],[[12979,12979],"mapped",[51,56]],[[12980,12980],"mapped",[51,57]],[[12981,12981],"mapped",[52,48]],[[12982,12982],"mapped",[52,49]],[[12983,12983],"mapped",[52,50]],[[12984,12984],"mapped",[52,51]],[[12985,12985],"mapped",[52,52]],[[12986,12986],"mapped",[52,53]],[[12987,12987],"mapped",[52,54]],[[12988,12988],"mapped",[52,55]],[[12989,12989],"mapped",[52,56]],[[12990,12990],"mapped",[52,57]],[[12991,12991],"mapped",[53,48]],[[12992,12992],"mapped",[49,26376]],[[12993,12993],"mapped",[50,26376]],[[12994,12994],"mapped",[51,26376]],[[12995,12995],"mapped",[52,26376]],[[12996,12996],"mapped",[53,26376]],[[12997,12997],"mapped",[54,26376]],[[12998,12998],"mapped",[55,26376]],[[12999,12999],"mapped",[56,26376]],[[13000,13000],"mapped",[57,26376]],[[13001,13001],"mapped",[49,48,26376]],[[13002,13002],"mapped",[49,49,26376]],[[13003,13003],"mapped",[49,50,26376]],[[13004,13004],"mapped",[104,103]],[[13005,13005],"mapped",[101,114,103]],[[13006,13006],"mapped",[101,118]],[[13007,13007],"mapped",[108,116,100]],[[13008,13008],"mapped",[12450]],[[13009,13009],"mapped",[12452]],[[13010,13010],"mapped",[12454]],[[13011,13011],"mapped",[12456]],[[13012,13012],"mapped",[12458]],[[13013,13013],"mapped",[12459]],[[13014,13014],"mapped",[12461]],[[13015,13015],"mapped",[12463]],[[13016,13016],"mapped",[12465]],[[13017,13017],"mapped",[12467]],[[13018,13018],"mapped",[12469]],[[13019,13019],"mapped",[12471]],[[13020,13020],"mapped",[12473]],[[13021,13021],"mapped",[12475]],[[13022,13022],"mapped",[12477]],[[13023,13023],"mapped",[12479]],[[13024,13024],"mapped",[12481]],[[13025,13025],"mapped",[12484]],[[13026,13026],"mapped",[12486]],[[13027,13027],"mapped",[12488]],[[13028,13028],"mapped",[12490]],[[13029,13029],"mapped",[12491]],[[13030,13030],"mapped",[12492]],[[13031,13031],"mapped",[12493]],[[13032,13032],"mapped",[12494]],[[13033,13033],"mapped",[12495]],[[13034,13034],"mapped",[12498]],[[13035,13035],"mapped",[12501]],[[13036,13036],"mapped",[12504]],[[13037,13037],"mapped",[12507]],[[13038,13038],"mapped",[12510]],[[13039,13039],"mapped",[12511]],[[13040,13040],"mapped",[12512]],[[13041,13041],"mapped",[12513]],[[13042,13042],"mapped",[12514]],[[13043,13043],"mapped",[12516]],[[13044,13044],"mapped",[12518]],[[13045,13045],"mapped",[12520]],[[13046,13046],"mapped",[12521]],[[13047,13047],"mapped",[12522]],[[13048,13048],"mapped",[12523]],[[13049,13049],"mapped",[12524]],[[13050,13050],"mapped",[12525]],[[13051,13051],"mapped",[12527]],[[13052,13052],"mapped",[12528]],[[13053,13053],"mapped",[12529]],[[13054,13054],"mapped",[12530]],[[13055,13055],"disallowed"],[[13056,13056],"mapped",[12450,12497,12540,12488]],[[13057,13057],"mapped",[12450,12523,12501,12449]],[[13058,13058],"mapped",[12450,12531,12506,12450]],[[13059,13059],"mapped",[12450,12540,12523]],[[13060,13060],"mapped",[12452,12491,12531,12464]],[[13061,13061],"mapped",[12452,12531,12481]],[[13062,13062],"mapped",[12454,12457,12531]],[[13063,13063],"mapped",[12456,12473,12463,12540,12489]],[[13064,13064],"mapped",[12456,12540,12459,12540]],[[13065,13065],"mapped",[12458,12531,12473]],[[13066,13066],"mapped",[12458,12540,12512]],[[13067,13067],"mapped",[12459,12452,12522]],[[13068,13068],"mapped",[12459,12521,12483,12488]],[[13069,13069],"mapped",[12459,12525,12522,12540]],[[13070,13070],"mapped",[12460,12525,12531]],[[13071,13071],"mapped",[12460,12531,12510]],[[13072,13072],"mapped",[12462,12460]],[[13073,13073],"mapped",[12462,12491,12540]],[[13074,13074],"mapped",[12461,12517,12522,12540]],[[13075,13075],"mapped",[12462,12523,12480,12540]],[[13076,13076],"mapped",[12461,12525]],[[13077,13077],"mapped",[12461,12525,12464,12521,12512]],[[13078,13078],"mapped",[12461,12525,12513,12540,12488,12523]],[[13079,13079],"mapped",[12461,12525,12527,12483,12488]],[[13080,13080],"mapped",[12464,12521,12512]],[[13081,13081],"mapped",[12464,12521,12512,12488,12531]],[[13082,13082],"mapped",[12463,12523,12476,12452,12525]],[[13083,13083],"mapped",[12463,12525,12540,12493]],[[13084,13084],"mapped",[12465,12540,12473]],[[13085,13085],"mapped",[12467,12523,12490]],[[13086,13086],"mapped",[12467,12540,12509]],[[13087,13087],"mapped",[12469,12452,12463,12523]],[[13088,13088],"mapped",[12469,12531,12481,12540,12512]],[[13089,13089],"mapped",[12471,12522,12531,12464]],[[13090,13090],"mapped",[12475,12531,12481]],[[13091,13091],"mapped",[12475,12531,12488]],[[13092,13092],"mapped",[12480,12540,12473]],[[13093,13093],"mapped",[12487,12471]],[[13094,13094],"mapped",[12489,12523]],[[13095,13095],"mapped",[12488,12531]],[[13096,13096],"mapped",[12490,12494]],[[13097,13097],"mapped",[12494,12483,12488]],[[13098,13098],"mapped",[12495,12452,12484]],[[13099,13099],"mapped",[12497,12540,12475,12531,12488]],[[13100,13100],"mapped",[12497,12540,12484]],[[13101,13101],"mapped",[12496,12540,12524,12523]],[[13102,13102],"mapped",[12500,12450,12473,12488,12523]],[[13103,13103],"mapped",[12500,12463,12523]],[[13104,13104],"mapped",[12500,12467]],[[13105,13105],"mapped",[12499,12523]],[[13106,13106],"mapped",[12501,12449,12521,12483,12489]],[[13107,13107],"mapped",[12501,12451,12540,12488]],[[13108,13108],"mapped",[12502,12483,12471,12455,12523]],[[13109,13109],"mapped",[12501,12521,12531]],[[13110,13110],"mapped",[12504,12463,12479,12540,12523]],[[13111,13111],"mapped",[12506,12477]],[[13112,13112],"mapped",[12506,12491,12498]],[[13113,13113],"mapped",[12504,12523,12484]],[[13114,13114],"mapped",[12506,12531,12473]],[[13115,13115],"mapped",[12506,12540,12472]],[[13116,13116],"mapped",[12505,12540,12479]],[[13117,13117],"mapped",[12509,12452,12531,12488]],[[13118,13118],"mapped",[12508,12523,12488]],[[13119,13119],"mapped",[12507,12531]],[[13120,13120],"mapped",[12509,12531,12489]],[[13121,13121],"mapped",[12507,12540,12523]],[[13122,13122],"mapped",[12507,12540,12531]],[[13123,13123],"mapped",[12510,12452,12463,12525]],[[13124,13124],"mapped",[12510,12452,12523]],[[13125,13125],"mapped",[12510,12483,12495]],[[13126,13126],"mapped",[12510,12523,12463]],[[13127,13127],"mapped",[12510,12531,12471,12519,12531]],[[13128,13128],"mapped",[12511,12463,12525,12531]],[[13129,13129],"mapped",[12511,12522]],[[13130,13130],"mapped",[12511,12522,12496,12540,12523]],[[13131,13131],"mapped",[12513,12460]],[[13132,13132],"mapped",[12513,12460,12488,12531]],[[13133,13133],"mapped",[12513,12540,12488,12523]],[[13134,13134],"mapped",[12516,12540,12489]],[[13135,13135],"mapped",[12516,12540,12523]],[[13136,13136],"mapped",[12518,12450,12531]],[[13137,13137],"mapped",[12522,12483,12488,12523]],[[13138,13138],"mapped",[12522,12521]],[[13139,13139],"mapped",[12523,12500,12540]],[[13140,13140],"mapped",[12523,12540,12502,12523]],[[13141,13141],"mapped",[12524,12512]],[[13142,13142],"mapped",[12524,12531,12488,12466,12531]],[[13143,13143],"mapped",[12527,12483,12488]],[[13144,13144],"mapped",[48,28857]],[[13145,13145],"mapped",[49,28857]],[[13146,13146],"mapped",[50,28857]],[[13147,13147],"mapped",[51,28857]],[[13148,13148],"mapped",[52,28857]],[[13149,13149],"mapped",[53,28857]],[[13150,13150],"mapped",[54,28857]],[[13151,13151],"mapped",[55,28857]],[[13152,13152],"mapped",[56,28857]],[[13153,13153],"mapped",[57,28857]],[[13154,13154],"mapped",[49,48,28857]],[[13155,13155],"mapped",[49,49,28857]],[[13156,13156],"mapped",[49,50,28857]],[[13157,13157],"mapped",[49,51,28857]],[[13158,13158],"mapped",[49,52,28857]],[[13159,13159],"mapped",[49,53,28857]],[[13160,13160],"mapped",[49,54,28857]],[[13161,13161],"mapped",[49,55,28857]],[[13162,13162],"mapped",[49,56,28857]],[[13163,13163],"mapped",[49,57,28857]],[[13164,13164],"mapped",[50,48,28857]],[[13165,13165],"mapped",[50,49,28857]],[[13166,13166],"mapped",[50,50,28857]],[[13167,13167],"mapped",[50,51,28857]],[[13168,13168],"mapped",[50,52,28857]],[[13169,13169],"mapped",[104,112,97]],[[13170,13170],"mapped",[100,97]],[[13171,13171],"mapped",[97,117]],[[13172,13172],"mapped",[98,97,114]],[[13173,13173],"mapped",[111,118]],[[13174,13174],"mapped",[112,99]],[[13175,13175],"mapped",[100,109]],[[13176,13176],"mapped",[100,109,50]],[[13177,13177],"mapped",[100,109,51]],[[13178,13178],"mapped",[105,117]],[[13179,13179],"mapped",[24179,25104]],[[13180,13180],"mapped",[26157,21644]],[[13181,13181],"mapped",[22823,27491]],[[13182,13182],"mapped",[26126,27835]],[[13183,13183],"mapped",[26666,24335,20250,31038]],[[13184,13184],"mapped",[112,97]],[[13185,13185],"mapped",[110,97]],[[13186,13186],"mapped",[956,97]],[[13187,13187],"mapped",[109,97]],[[13188,13188],"mapped",[107,97]],[[13189,13189],"mapped",[107,98]],[[13190,13190],"mapped",[109,98]],[[13191,13191],"mapped",[103,98]],[[13192,13192],"mapped",[99,97,108]],[[13193,13193],"mapped",[107,99,97,108]],[[13194,13194],"mapped",[112,102]],[[13195,13195],"mapped",[110,102]],[[13196,13196],"mapped",[956,102]],[[13197,13197],"mapped",[956,103]],[[13198,13198],"mapped",[109,103]],[[13199,13199],"mapped",[107,103]],[[13200,13200],"mapped",[104,122]],[[13201,13201],"mapped",[107,104,122]],[[13202,13202],"mapped",[109,104,122]],[[13203,13203],"mapped",[103,104,122]],[[13204,13204],"mapped",[116,104,122]],[[13205,13205],"mapped",[956,108]],[[13206,13206],"mapped",[109,108]],[[13207,13207],"mapped",[100,108]],[[13208,13208],"mapped",[107,108]],[[13209,13209],"mapped",[102,109]],[[13210,13210],"mapped",[110,109]],[[13211,13211],"mapped",[956,109]],[[13212,13212],"mapped",[109,109]],[[13213,13213],"mapped",[99,109]],[[13214,13214],"mapped",[107,109]],[[13215,13215],"mapped",[109,109,50]],[[13216,13216],"mapped",[99,109,50]],[[13217,13217],"mapped",[109,50]],[[13218,13218],"mapped",[107,109,50]],[[13219,13219],"mapped",[109,109,51]],[[13220,13220],"mapped",[99,109,51]],[[13221,13221],"mapped",[109,51]],[[13222,13222],"mapped",[107,109,51]],[[13223,13223],"mapped",[109,8725,115]],[[13224,13224],"mapped",[109,8725,115,50]],[[13225,13225],"mapped",[112,97]],[[13226,13226],"mapped",[107,112,97]],[[13227,13227],"mapped",[109,112,97]],[[13228,13228],"mapped",[103,112,97]],[[13229,13229],"mapped",[114,97,100]],[[13230,13230],"mapped",[114,97,100,8725,115]],[[13231,13231],"mapped",[114,97,100,8725,115,50]],[[13232,13232],"mapped",[112,115]],[[13233,13233],"mapped",[110,115]],[[13234,13234],"mapped",[956,115]],[[13235,13235],"mapped",[109,115]],[[13236,13236],"mapped",[112,118]],[[13237,13237],"mapped",[110,118]],[[13238,13238],"mapped",[956,118]],[[13239,13239],"mapped",[109,118]],[[13240,13240],"mapped",[107,118]],[[13241,13241],"mapped",[109,118]],[[13242,13242],"mapped",[112,119]],[[13243,13243],"mapped",[110,119]],[[13244,13244],"mapped",[956,119]],[[13245,13245],"mapped",[109,119]],[[13246,13246],"mapped",[107,119]],[[13247,13247],"mapped",[109,119]],[[13248,13248],"mapped",[107,969]],[[13249,13249],"mapped",[109,969]],[[13250,13250],"disallowed"],[[13251,13251],"mapped",[98,113]],[[13252,13252],"mapped",[99,99]],[[13253,13253],"mapped",[99,100]],[[13254,13254],"mapped",[99,8725,107,103]],[[13255,13255],"disallowed"],[[13256,13256],"mapped",[100,98]],[[13257,13257],"mapped",[103,121]],[[13258,13258],"mapped",[104,97]],[[13259,13259],"mapped",[104,112]],[[13260,13260],"mapped",[105,110]],[[13261,13261],"mapped",[107,107]],[[13262,13262],"mapped",[107,109]],[[13263,13263],"mapped",[107,116]],[[13264,13264],"mapped",[108,109]],[[13265,13265],"mapped",[108,110]],[[13266,13266],"mapped",[108,111,103]],[[13267,13267],"mapped",[108,120]],[[13268,13268],"mapped",[109,98]],[[13269,13269],"mapped",[109,105,108]],[[13270,13270],"mapped",[109,111,108]],[[13271,13271],"mapped",[112,104]],[[13272,13272],"disallowed"],[[13273,13273],"mapped",[112,112,109]],[[13274,13274],"mapped",[112,114]],[[13275,13275],"mapped",[115,114]],[[13276,13276],"mapped",[115,118]],[[13277,13277],"mapped",[119,98]],[[13278,13278],"mapped",[118,8725,109]],[[13279,13279],"mapped",[97,8725,109]],[[13280,13280],"mapped",[49,26085]],[[13281,13281],"mapped",[50,26085]],[[13282,13282],"mapped",[51,26085]],[[13283,13283],"mapped",[52,26085]],[[13284,13284],"mapped",[53,26085]],[[13285,13285],"mapped",[54,26085]],[[13286,13286],"mapped",[55,26085]],[[13287,13287],"mapped",[56,26085]],[[13288,13288],"mapped",[57,26085]],[[13289,13289],"mapped",[49,48,26085]],[[13290,13290],"mapped",[49,49,26085]],[[13291,13291],"mapped",[49,50,26085]],[[13292,13292],"mapped",[49,51,26085]],[[13293,13293],"mapped",[49,52,26085]],[[13294,13294],"mapped",[49,53,26085]],[[13295,13295],"mapped",[49,54,26085]],[[13296,13296],"mapped",[49,55,26085]],[[13297,13297],"mapped",[49,56,26085]],[[13298,13298],"mapped",[49,57,26085]],[[13299,13299],"mapped",[50,48,26085]],[[13300,13300],"mapped",[50,49,26085]],[[13301,13301],"mapped",[50,50,26085]],[[13302,13302],"mapped",[50,51,26085]],[[13303,13303],"mapped",[50,52,26085]],[[13304,13304],"mapped",[50,53,26085]],[[13305,13305],"mapped",[50,54,26085]],[[13306,13306],"mapped",[50,55,26085]],[[13307,13307],"mapped",[50,56,26085]],[[13308,13308],"mapped",[50,57,26085]],[[13309,13309],"mapped",[51,48,26085]],[[13310,13310],"mapped",[51,49,26085]],[[13311,13311],"mapped",[103,97,108]],[[13312,19893],"valid"],[[19894,19903],"disallowed"],[[19904,19967],"valid",[],"NV8"],[[19968,40869],"valid"],[[40870,40891],"valid"],[[40892,40899],"valid"],[[40900,40907],"valid"],[[40908,40908],"valid"],[[40909,40917],"valid"],[[40918,40959],"disallowed"],[[40960,42124],"valid"],[[42125,42127],"disallowed"],[[42128,42145],"valid",[],"NV8"],[[42146,42147],"valid",[],"NV8"],[[42148,42163],"valid",[],"NV8"],[[42164,42164],"valid",[],"NV8"],[[42165,42176],"valid",[],"NV8"],[[42177,42177],"valid",[],"NV8"],[[42178,42180],"valid",[],"NV8"],[[42181,42181],"valid",[],"NV8"],[[42182,42182],"valid",[],"NV8"],[[42183,42191],"disallowed"],[[42192,42237],"valid"],[[42238,42239],"valid",[],"NV8"],[[42240,42508],"valid"],[[42509,42511],"valid",[],"NV8"],[[42512,42539],"valid"],[[42540,42559],"disallowed"],[[42560,42560],"mapped",[42561]],[[42561,42561],"valid"],[[42562,42562],"mapped",[42563]],[[42563,42563],"valid"],[[42564,42564],"mapped",[42565]],[[42565,42565],"valid"],[[42566,42566],"mapped",[42567]],[[42567,42567],"valid"],[[42568,42568],"mapped",[42569]],[[42569,42569],"valid"],[[42570,42570],"mapped",[42571]],[[42571,42571],"valid"],[[42572,42572],"mapped",[42573]],[[42573,42573],"valid"],[[42574,42574],"mapped",[42575]],[[42575,42575],"valid"],[[42576,42576],"mapped",[42577]],[[42577,42577],"valid"],[[42578,42578],"mapped",[42579]],[[42579,42579],"valid"],[[42580,42580],"mapped",[42581]],[[42581,42581],"valid"],[[42582,42582],"mapped",[42583]],[[42583,42583],"valid"],[[42584,42584],"mapped",[42585]],[[42585,42585],"valid"],[[42586,42586],"mapped",[42587]],[[42587,42587],"valid"],[[42588,42588],"mapped",[42589]],[[42589,42589],"valid"],[[42590,42590],"mapped",[42591]],[[42591,42591],"valid"],[[42592,42592],"mapped",[42593]],[[42593,42593],"valid"],[[42594,42594],"mapped",[42595]],[[42595,42595],"valid"],[[42596,42596],"mapped",[42597]],[[42597,42597],"valid"],[[42598,42598],"mapped",[42599]],[[42599,42599],"valid"],[[42600,42600],"mapped",[42601]],[[42601,42601],"valid"],[[42602,42602],"mapped",[42603]],[[42603,42603],"valid"],[[42604,42604],"mapped",[42605]],[[42605,42607],"valid"],[[42608,42611],"valid",[],"NV8"],[[42612,42619],"valid"],[[42620,42621],"valid"],[[42622,42622],"valid",[],"NV8"],[[42623,42623],"valid"],[[42624,42624],"mapped",[42625]],[[42625,42625],"valid"],[[42626,42626],"mapped",[42627]],[[42627,42627],"valid"],[[42628,42628],"mapped",[42629]],[[42629,42629],"valid"],[[42630,42630],"mapped",[42631]],[[42631,42631],"valid"],[[42632,42632],"mapped",[42633]],[[42633,42633],"valid"],[[42634,42634],"mapped",[42635]],[[42635,42635],"valid"],[[42636,42636],"mapped",[42637]],[[42637,42637],"valid"],[[42638,42638],"mapped",[42639]],[[42639,42639],"valid"],[[42640,42640],"mapped",[42641]],[[42641,42641],"valid"],[[42642,42642],"mapped",[42643]],[[42643,42643],"valid"],[[42644,42644],"mapped",[42645]],[[42645,42645],"valid"],[[42646,42646],"mapped",[42647]],[[42647,42647],"valid"],[[42648,42648],"mapped",[42649]],[[42649,42649],"valid"],[[42650,42650],"mapped",[42651]],[[42651,42651],"valid"],[[42652,42652],"mapped",[1098]],[[42653,42653],"mapped",[1100]],[[42654,42654],"valid"],[[42655,42655],"valid"],[[42656,42725],"valid"],[[42726,42735],"valid",[],"NV8"],[[42736,42737],"valid"],[[42738,42743],"valid",[],"NV8"],[[42744,42751],"disallowed"],[[42752,42774],"valid",[],"NV8"],[[42775,42778],"valid"],[[42779,42783],"valid"],[[42784,42785],"valid",[],"NV8"],[[42786,42786],"mapped",[42787]],[[42787,42787],"valid"],[[42788,42788],"mapped",[42789]],[[42789,42789],"valid"],[[42790,42790],"mapped",[42791]],[[42791,42791],"valid"],[[42792,42792],"mapped",[42793]],[[42793,42793],"valid"],[[42794,42794],"mapped",[42795]],[[42795,42795],"valid"],[[42796,42796],"mapped",[42797]],[[42797,42797],"valid"],[[42798,42798],"mapped",[42799]],[[42799,42801],"valid"],[[42802,42802],"mapped",[42803]],[[42803,42803],"valid"],[[42804,42804],"mapped",[42805]],[[42805,42805],"valid"],[[42806,42806],"mapped",[42807]],[[42807,42807],"valid"],[[42808,42808],"mapped",[42809]],[[42809,42809],"valid"],[[42810,42810],"mapped",[42811]],[[42811,42811],"valid"],[[42812,42812],"mapped",[42813]],[[42813,42813],"valid"],[[42814,42814],"mapped",[42815]],[[42815,42815],"valid"],[[42816,42816],"mapped",[42817]],[[42817,42817],"valid"],[[42818,42818],"mapped",[42819]],[[42819,42819],"valid"],[[42820,42820],"mapped",[42821]],[[42821,42821],"valid"],[[42822,42822],"mapped",[42823]],[[42823,42823],"valid"],[[42824,42824],"mapped",[42825]],[[42825,42825],"valid"],[[42826,42826],"mapped",[42827]],[[42827,42827],"valid"],[[42828,42828],"mapped",[42829]],[[42829,42829],"valid"],[[42830,42830],"mapped",[42831]],[[42831,42831],"valid"],[[42832,42832],"mapped",[42833]],[[42833,42833],"valid"],[[42834,42834],"mapped",[42835]],[[42835,42835],"valid"],[[42836,42836],"mapped",[42837]],[[42837,42837],"valid"],[[42838,42838],"mapped",[42839]],[[42839,42839],"valid"],[[42840,42840],"mapped",[42841]],[[42841,42841],"valid"],[[42842,42842],"mapped",[42843]],[[42843,42843],"valid"],[[42844,42844],"mapped",[42845]],[[42845,42845],"valid"],[[42846,42846],"mapped",[42847]],[[42847,42847],"valid"],[[42848,42848],"mapped",[42849]],[[42849,42849],"valid"],[[42850,42850],"mapped",[42851]],[[42851,42851],"valid"],[[42852,42852],"mapped",[42853]],[[42853,42853],"valid"],[[42854,42854],"mapped",[42855]],[[42855,42855],"valid"],[[42856,42856],"mapped",[42857]],[[42857,42857],"valid"],[[42858,42858],"mapped",[42859]],[[42859,42859],"valid"],[[42860,42860],"mapped",[42861]],[[42861,42861],"valid"],[[42862,42862],"mapped",[42863]],[[42863,42863],"valid"],[[42864,42864],"mapped",[42863]],[[42865,42872],"valid"],[[42873,42873],"mapped",[42874]],[[42874,42874],"valid"],[[42875,42875],"mapped",[42876]],[[42876,42876],"valid"],[[42877,42877],"mapped",[7545]],[[42878,42878],"mapped",[42879]],[[42879,42879],"valid"],[[42880,42880],"mapped",[42881]],[[42881,42881],"valid"],[[42882,42882],"mapped",[42883]],[[42883,42883],"valid"],[[42884,42884],"mapped",[42885]],[[42885,42885],"valid"],[[42886,42886],"mapped",[42887]],[[42887,42888],"valid"],[[42889,42890],"valid",[],"NV8"],[[42891,42891],"mapped",[42892]],[[42892,42892],"valid"],[[42893,42893],"mapped",[613]],[[42894,42894],"valid"],[[42895,42895],"valid"],[[42896,42896],"mapped",[42897]],[[42897,42897],"valid"],[[42898,42898],"mapped",[42899]],[[42899,42899],"valid"],[[42900,42901],"valid"],[[42902,42902],"mapped",[42903]],[[42903,42903],"valid"],[[42904,42904],"mapped",[42905]],[[42905,42905],"valid"],[[42906,42906],"mapped",[42907]],[[42907,42907],"valid"],[[42908,42908],"mapped",[42909]],[[42909,42909],"valid"],[[42910,42910],"mapped",[42911]],[[42911,42911],"valid"],[[42912,42912],"mapped",[42913]],[[42913,42913],"valid"],[[42914,42914],"mapped",[42915]],[[42915,42915],"valid"],[[42916,42916],"mapped",[42917]],[[42917,42917],"valid"],[[42918,42918],"mapped",[42919]],[[42919,42919],"valid"],[[42920,42920],"mapped",[42921]],[[42921,42921],"valid"],[[42922,42922],"mapped",[614]],[[42923,42923],"mapped",[604]],[[42924,42924],"mapped",[609]],[[42925,42925],"mapped",[620]],[[42926,42927],"disallowed"],[[42928,42928],"mapped",[670]],[[42929,42929],"mapped",[647]],[[42930,42930],"mapped",[669]],[[42931,42931],"mapped",[43859]],[[42932,42932],"mapped",[42933]],[[42933,42933],"valid"],[[42934,42934],"mapped",[42935]],[[42935,42935],"valid"],[[42936,42998],"disallowed"],[[42999,42999],"valid"],[[43000,43000],"mapped",[295]],[[43001,43001],"mapped",[339]],[[43002,43002],"valid"],[[43003,43007],"valid"],[[43008,43047],"valid"],[[43048,43051],"valid",[],"NV8"],[[43052,43055],"disallowed"],[[43056,43065],"valid",[],"NV8"],[[43066,43071],"disallowed"],[[43072,43123],"valid"],[[43124,43127],"valid",[],"NV8"],[[43128,43135],"disallowed"],[[43136,43204],"valid"],[[43205,43213],"disallowed"],[[43214,43215],"valid",[],"NV8"],[[43216,43225],"valid"],[[43226,43231],"disallowed"],[[43232,43255],"valid"],[[43256,43258],"valid",[],"NV8"],[[43259,43259],"valid"],[[43260,43260],"valid",[],"NV8"],[[43261,43261],"valid"],[[43262,43263],"disallowed"],[[43264,43309],"valid"],[[43310,43311],"valid",[],"NV8"],[[43312,43347],"valid"],[[43348,43358],"disallowed"],[[43359,43359],"valid",[],"NV8"],[[43360,43388],"valid",[],"NV8"],[[43389,43391],"disallowed"],[[43392,43456],"valid"],[[43457,43469],"valid",[],"NV8"],[[43470,43470],"disallowed"],[[43471,43481],"valid"],[[43482,43485],"disallowed"],[[43486,43487],"valid",[],"NV8"],[[43488,43518],"valid"],[[43519,43519],"disallowed"],[[43520,43574],"valid"],[[43575,43583],"disallowed"],[[43584,43597],"valid"],[[43598,43599],"disallowed"],[[43600,43609],"valid"],[[43610,43611],"disallowed"],[[43612,43615],"valid",[],"NV8"],[[43616,43638],"valid"],[[43639,43641],"valid",[],"NV8"],[[43642,43643],"valid"],[[43644,43647],"valid"],[[43648,43714],"valid"],[[43715,43738],"disallowed"],[[43739,43741],"valid"],[[43742,43743],"valid",[],"NV8"],[[43744,43759],"valid"],[[43760,43761],"valid",[],"NV8"],[[43762,43766],"valid"],[[43767,43776],"disallowed"],[[43777,43782],"valid"],[[43783,43784],"disallowed"],[[43785,43790],"valid"],[[43791,43792],"disallowed"],[[43793,43798],"valid"],[[43799,43807],"disallowed"],[[43808,43814],"valid"],[[43815,43815],"disallowed"],[[43816,43822],"valid"],[[43823,43823],"disallowed"],[[43824,43866],"valid"],[[43867,43867],"valid",[],"NV8"],[[43868,43868],"mapped",[42791]],[[43869,43869],"mapped",[43831]],[[43870,43870],"mapped",[619]],[[43871,43871],"mapped",[43858]],[[43872,43875],"valid"],[[43876,43877],"valid"],[[43878,43887],"disallowed"],[[43888,43888],"mapped",[5024]],[[43889,43889],"mapped",[5025]],[[43890,43890],"mapped",[5026]],[[43891,43891],"mapped",[5027]],[[43892,43892],"mapped",[5028]],[[43893,43893],"mapped",[5029]],[[43894,43894],"mapped",[5030]],[[43895,43895],"mapped",[5031]],[[43896,43896],"mapped",[5032]],[[43897,43897],"mapped",[5033]],[[43898,43898],"mapped",[5034]],[[43899,43899],"mapped",[5035]],[[43900,43900],"mapped",[5036]],[[43901,43901],"mapped",[5037]],[[43902,43902],"mapped",[5038]],[[43903,43903],"mapped",[5039]],[[43904,43904],"mapped",[5040]],[[43905,43905],"mapped",[5041]],[[43906,43906],"mapped",[5042]],[[43907,43907],"mapped",[5043]],[[43908,43908],"mapped",[5044]],[[43909,43909],"mapped",[5045]],[[43910,43910],"mapped",[5046]],[[43911,43911],"mapped",[5047]],[[43912,43912],"mapped",[5048]],[[43913,43913],"mapped",[5049]],[[43914,43914],"mapped",[5050]],[[43915,43915],"mapped",[5051]],[[43916,43916],"mapped",[5052]],[[43917,43917],"mapped",[5053]],[[43918,43918],"mapped",[5054]],[[43919,43919],"mapped",[5055]],[[43920,43920],"mapped",[5056]],[[43921,43921],"mapped",[5057]],[[43922,43922],"mapped",[5058]],[[43923,43923],"mapped",[5059]],[[43924,43924],"mapped",[5060]],[[43925,43925],"mapped",[5061]],[[43926,43926],"mapped",[5062]],[[43927,43927],"mapped",[5063]],[[43928,43928],"mapped",[5064]],[[43929,43929],"mapped",[5065]],[[43930,43930],"mapped",[5066]],[[43931,43931],"mapped",[5067]],[[43932,43932],"mapped",[5068]],[[43933,43933],"mapped",[5069]],[[43934,43934],"mapped",[5070]],[[43935,43935],"mapped",[5071]],[[43936,43936],"mapped",[5072]],[[43937,43937],"mapped",[5073]],[[43938,43938],"mapped",[5074]],[[43939,43939],"mapped",[5075]],[[43940,43940],"mapped",[5076]],[[43941,43941],"mapped",[5077]],[[43942,43942],"mapped",[5078]],[[43943,43943],"mapped",[5079]],[[43944,43944],"mapped",[5080]],[[43945,43945],"mapped",[5081]],[[43946,43946],"mapped",[5082]],[[43947,43947],"mapped",[5083]],[[43948,43948],"mapped",[5084]],[[43949,43949],"mapped",[5085]],[[43950,43950],"mapped",[5086]],[[43951,43951],"mapped",[5087]],[[43952,43952],"mapped",[5088]],[[43953,43953],"mapped",[5089]],[[43954,43954],"mapped",[5090]],[[43955,43955],"mapped",[5091]],[[43956,43956],"mapped",[5092]],[[43957,43957],"mapped",[5093]],[[43958,43958],"mapped",[5094]],[[43959,43959],"mapped",[5095]],[[43960,43960],"mapped",[5096]],[[43961,43961],"mapped",[5097]],[[43962,43962],"mapped",[5098]],[[43963,43963],"mapped",[5099]],[[43964,43964],"mapped",[5100]],[[43965,43965],"mapped",[5101]],[[43966,43966],"mapped",[5102]],[[43967,43967],"mapped",[5103]],[[43968,44010],"valid"],[[44011,44011],"valid",[],"NV8"],[[44012,44013],"valid"],[[44014,44015],"disallowed"],[[44016,44025],"valid"],[[44026,44031],"disallowed"],[[44032,55203],"valid"],[[55204,55215],"disallowed"],[[55216,55238],"valid",[],"NV8"],[[55239,55242],"disallowed"],[[55243,55291],"valid",[],"NV8"],[[55292,55295],"disallowed"],[[55296,57343],"disallowed"],[[57344,63743],"disallowed"],[[63744,63744],"mapped",[35912]],[[63745,63745],"mapped",[26356]],[[63746,63746],"mapped",[36554]],[[63747,63747],"mapped",[36040]],[[63748,63748],"mapped",[28369]],[[63749,63749],"mapped",[20018]],[[63750,63750],"mapped",[21477]],[[63751,63752],"mapped",[40860]],[[63753,63753],"mapped",[22865]],[[63754,63754],"mapped",[37329]],[[63755,63755],"mapped",[21895]],[[63756,63756],"mapped",[22856]],[[63757,63757],"mapped",[25078]],[[63758,63758],"mapped",[30313]],[[63759,63759],"mapped",[32645]],[[63760,63760],"mapped",[34367]],[[63761,63761],"mapped",[34746]],[[63762,63762],"mapped",[35064]],[[63763,63763],"mapped",[37007]],[[63764,63764],"mapped",[27138]],[[63765,63765],"mapped",[27931]],[[63766,63766],"mapped",[28889]],[[63767,63767],"mapped",[29662]],[[63768,63768],"mapped",[33853]],[[63769,63769],"mapped",[37226]],[[63770,63770],"mapped",[39409]],[[63771,63771],"mapped",[20098]],[[63772,63772],"mapped",[21365]],[[63773,63773],"mapped",[27396]],[[63774,63774],"mapped",[29211]],[[63775,63775],"mapped",[34349]],[[63776,63776],"mapped",[40478]],[[63777,63777],"mapped",[23888]],[[63778,63778],"mapped",[28651]],[[63779,63779],"mapped",[34253]],[[63780,63780],"mapped",[35172]],[[63781,63781],"mapped",[25289]],[[63782,63782],"mapped",[33240]],[[63783,63783],"mapped",[34847]],[[63784,63784],"mapped",[24266]],[[63785,63785],"mapped",[26391]],[[63786,63786],"mapped",[28010]],[[63787,63787],"mapped",[29436]],[[63788,63788],"mapped",[37070]],[[63789,63789],"mapped",[20358]],[[63790,63790],"mapped",[20919]],[[63791,63791],"mapped",[21214]],[[63792,63792],"mapped",[25796]],[[63793,63793],"mapped",[27347]],[[63794,63794],"mapped",[29200]],[[63795,63795],"mapped",[30439]],[[63796,63796],"mapped",[32769]],[[63797,63797],"mapped",[34310]],[[63798,63798],"mapped",[34396]],[[63799,63799],"mapped",[36335]],[[63800,63800],"mapped",[38706]],[[63801,63801],"mapped",[39791]],[[63802,63802],"mapped",[40442]],[[63803,63803],"mapped",[30860]],[[63804,63804],"mapped",[31103]],[[63805,63805],"mapped",[32160]],[[63806,63806],"mapped",[33737]],[[63807,63807],"mapped",[37636]],[[63808,63808],"mapped",[40575]],[[63809,63809],"mapped",[35542]],[[63810,63810],"mapped",[22751]],[[63811,63811],"mapped",[24324]],[[63812,63812],"mapped",[31840]],[[63813,63813],"mapped",[32894]],[[63814,63814],"mapped",[29282]],[[63815,63815],"mapped",[30922]],[[63816,63816],"mapped",[36034]],[[63817,63817],"mapped",[38647]],[[63818,63818],"mapped",[22744]],[[63819,63819],"mapped",[23650]],[[63820,63820],"mapped",[27155]],[[63821,63821],"mapped",[28122]],[[63822,63822],"mapped",[28431]],[[63823,63823],"mapped",[32047]],[[63824,63824],"mapped",[32311]],[[63825,63825],"mapped",[38475]],[[63826,63826],"mapped",[21202]],[[63827,63827],"mapped",[32907]],[[63828,63828],"mapped",[20956]],[[63829,63829],"mapped",[20940]],[[63830,63830],"mapped",[31260]],[[63831,63831],"mapped",[32190]],[[63832,63832],"mapped",[33777]],[[63833,63833],"mapped",[38517]],[[63834,63834],"mapped",[35712]],[[63835,63835],"mapped",[25295]],[[63836,63836],"mapped",[27138]],[[63837,63837],"mapped",[35582]],[[63838,63838],"mapped",[20025]],[[63839,63839],"mapped",[23527]],[[63840,63840],"mapped",[24594]],[[63841,63841],"mapped",[29575]],[[63842,63842],"mapped",[30064]],[[63843,63843],"mapped",[21271]],[[63844,63844],"mapped",[30971]],[[63845,63845],"mapped",[20415]],[[63846,63846],"mapped",[24489]],[[63847,63847],"mapped",[19981]],[[63848,63848],"mapped",[27852]],[[63849,63849],"mapped",[25976]],[[63850,63850],"mapped",[32034]],[[63851,63851],"mapped",[21443]],[[63852,63852],"mapped",[22622]],[[63853,63853],"mapped",[30465]],[[63854,63854],"mapped",[33865]],[[63855,63855],"mapped",[35498]],[[63856,63856],"mapped",[27578]],[[63857,63857],"mapped",[36784]],[[63858,63858],"mapped",[27784]],[[63859,63859],"mapped",[25342]],[[63860,63860],"mapped",[33509]],[[63861,63861],"mapped",[25504]],[[63862,63862],"mapped",[30053]],[[63863,63863],"mapped",[20142]],[[63864,63864],"mapped",[20841]],[[63865,63865],"mapped",[20937]],[[63866,63866],"mapped",[26753]],[[63867,63867],"mapped",[31975]],[[63868,63868],"mapped",[33391]],[[63869,63869],"mapped",[35538]],[[63870,63870],"mapped",[37327]],[[63871,63871],"mapped",[21237]],[[63872,63872],"mapped",[21570]],[[63873,63873],"mapped",[22899]],[[63874,63874],"mapped",[24300]],[[63875,63875],"mapped",[26053]],[[63876,63876],"mapped",[28670]],[[63877,63877],"mapped",[31018]],[[63878,63878],"mapped",[38317]],[[63879,63879],"mapped",[39530]],[[63880,63880],"mapped",[40599]],[[63881,63881],"mapped",[40654]],[[63882,63882],"mapped",[21147]],[[63883,63883],"mapped",[26310]],[[63884,63884],"mapped",[27511]],[[63885,63885],"mapped",[36706]],[[63886,63886],"mapped",[24180]],[[63887,63887],"mapped",[24976]],[[63888,63888],"mapped",[25088]],[[63889,63889],"mapped",[25754]],[[63890,63890],"mapped",[28451]],[[63891,63891],"mapped",[29001]],[[63892,63892],"mapped",[29833]],[[63893,63893],"mapped",[31178]],[[63894,63894],"mapped",[32244]],[[63895,63895],"mapped",[32879]],[[63896,63896],"mapped",[36646]],[[63897,63897],"mapped",[34030]],[[63898,63898],"mapped",[36899]],[[63899,63899],"mapped",[37706]],[[63900,63900],"mapped",[21015]],[[63901,63901],"mapped",[21155]],[[63902,63902],"mapped",[21693]],[[63903,63903],"mapped",[28872]],[[63904,63904],"mapped",[35010]],[[63905,63905],"mapped",[35498]],[[63906,63906],"mapped",[24265]],[[63907,63907],"mapped",[24565]],[[63908,63908],"mapped",[25467]],[[63909,63909],"mapped",[27566]],[[63910,63910],"mapped",[31806]],[[63911,63911],"mapped",[29557]],[[63912,63912],"mapped",[20196]],[[63913,63913],"mapped",[22265]],[[63914,63914],"mapped",[23527]],[[63915,63915],"mapped",[23994]],[[63916,63916],"mapped",[24604]],[[63917,63917],"mapped",[29618]],[[63918,63918],"mapped",[29801]],[[63919,63919],"mapped",[32666]],[[63920,63920],"mapped",[32838]],[[63921,63921],"mapped",[37428]],[[63922,63922],"mapped",[38646]],[[63923,63923],"mapped",[38728]],[[63924,63924],"mapped",[38936]],[[63925,63925],"mapped",[20363]],[[63926,63926],"mapped",[31150]],[[63927,63927],"mapped",[37300]],[[63928,63928],"mapped",[38584]],[[63929,63929],"mapped",[24801]],[[63930,63930],"mapped",[20102]],[[63931,63931],"mapped",[20698]],[[63932,63932],"mapped",[23534]],[[63933,63933],"mapped",[23615]],[[63934,63934],"mapped",[26009]],[[63935,63935],"mapped",[27138]],[[63936,63936],"mapped",[29134]],[[63937,63937],"mapped",[30274]],[[63938,63938],"mapped",[34044]],[[63939,63939],"mapped",[36988]],[[63940,63940],"mapped",[40845]],[[63941,63941],"mapped",[26248]],[[63942,63942],"mapped",[38446]],[[63943,63943],"mapped",[21129]],[[63944,63944],"mapped",[26491]],[[63945,63945],"mapped",[26611]],[[63946,63946],"mapped",[27969]],[[63947,63947],"mapped",[28316]],[[63948,63948],"mapped",[29705]],[[63949,63949],"mapped",[30041]],[[63950,63950],"mapped",[30827]],[[63951,63951],"mapped",[32016]],[[63952,63952],"mapped",[39006]],[[63953,63953],"mapped",[20845]],[[63954,63954],"mapped",[25134]],[[63955,63955],"mapped",[38520]],[[63956,63956],"mapped",[20523]],[[63957,63957],"mapped",[23833]],[[63958,63958],"mapped",[28138]],[[63959,63959],"mapped",[36650]],[[63960,63960],"mapped",[24459]],[[63961,63961],"mapped",[24900]],[[63962,63962],"mapped",[26647]],[[63963,63963],"mapped",[29575]],[[63964,63964],"mapped",[38534]],[[63965,63965],"mapped",[21033]],[[63966,63966],"mapped",[21519]],[[63967,63967],"mapped",[23653]],[[63968,63968],"mapped",[26131]],[[63969,63969],"mapped",[26446]],[[63970,63970],"mapped",[26792]],[[63971,63971],"mapped",[27877]],[[63972,63972],"mapped",[29702]],[[63973,63973],"mapped",[30178]],[[63974,63974],"mapped",[32633]],[[63975,63975],"mapped",[35023]],[[63976,63976],"mapped",[35041]],[[63977,63977],"mapped",[37324]],[[63978,63978],"mapped",[38626]],[[63979,63979],"mapped",[21311]],[[63980,63980],"mapped",[28346]],[[63981,63981],"mapped",[21533]],[[63982,63982],"mapped",[29136]],[[63983,63983],"mapped",[29848]],[[63984,63984],"mapped",[34298]],[[63985,63985],"mapped",[38563]],[[63986,63986],"mapped",[40023]],[[63987,63987],"mapped",[40607]],[[63988,63988],"mapped",[26519]],[[63989,63989],"mapped",[28107]],[[63990,63990],"mapped",[33256]],[[63991,63991],"mapped",[31435]],[[63992,63992],"mapped",[31520]],[[63993,63993],"mapped",[31890]],[[63994,63994],"mapped",[29376]],[[63995,63995],"mapped",[28825]],[[63996,63996],"mapped",[35672]],[[63997,63997],"mapped",[20160]],[[63998,63998],"mapped",[33590]],[[63999,63999],"mapped",[21050]],[[64000,64000],"mapped",[20999]],[[64001,64001],"mapped",[24230]],[[64002,64002],"mapped",[25299]],[[64003,64003],"mapped",[31958]],[[64004,64004],"mapped",[23429]],[[64005,64005],"mapped",[27934]],[[64006,64006],"mapped",[26292]],[[64007,64007],"mapped",[36667]],[[64008,64008],"mapped",[34892]],[[64009,64009],"mapped",[38477]],[[64010,64010],"mapped",[35211]],[[64011,64011],"mapped",[24275]],[[64012,64012],"mapped",[20800]],[[64013,64013],"mapped",[21952]],[[64014,64015],"valid"],[[64016,64016],"mapped",[22618]],[[64017,64017],"valid"],[[64018,64018],"mapped",[26228]],[[64019,64020],"valid"],[[64021,64021],"mapped",[20958]],[[64022,64022],"mapped",[29482]],[[64023,64023],"mapped",[30410]],[[64024,64024],"mapped",[31036]],[[64025,64025],"mapped",[31070]],[[64026,64026],"mapped",[31077]],[[64027,64027],"mapped",[31119]],[[64028,64028],"mapped",[38742]],[[64029,64029],"mapped",[31934]],[[64030,64030],"mapped",[32701]],[[64031,64031],"valid"],[[64032,64032],"mapped",[34322]],[[64033,64033],"valid"],[[64034,64034],"mapped",[35576]],[[64035,64036],"valid"],[[64037,64037],"mapped",[36920]],[[64038,64038],"mapped",[37117]],[[64039,64041],"valid"],[[64042,64042],"mapped",[39151]],[[64043,64043],"mapped",[39164]],[[64044,64044],"mapped",[39208]],[[64045,64045],"mapped",[40372]],[[64046,64046],"mapped",[37086]],[[64047,64047],"mapped",[38583]],[[64048,64048],"mapped",[20398]],[[64049,64049],"mapped",[20711]],[[64050,64050],"mapped",[20813]],[[64051,64051],"mapped",[21193]],[[64052,64052],"mapped",[21220]],[[64053,64053],"mapped",[21329]],[[64054,64054],"mapped",[21917]],[[64055,64055],"mapped",[22022]],[[64056,64056],"mapped",[22120]],[[64057,64057],"mapped",[22592]],[[64058,64058],"mapped",[22696]],[[64059,64059],"mapped",[23652]],[[64060,64060],"mapped",[23662]],[[64061,64061],"mapped",[24724]],[[64062,64062],"mapped",[24936]],[[64063,64063],"mapped",[24974]],[[64064,64064],"mapped",[25074]],[[64065,64065],"mapped",[25935]],[[64066,64066],"mapped",[26082]],[[64067,64067],"mapped",[26257]],[[64068,64068],"mapped",[26757]],[[64069,64069],"mapped",[28023]],[[64070,64070],"mapped",[28186]],[[64071,64071],"mapped",[28450]],[[64072,64072],"mapped",[29038]],[[64073,64073],"mapped",[29227]],[[64074,64074],"mapped",[29730]],[[64075,64075],"mapped",[30865]],[[64076,64076],"mapped",[31038]],[[64077,64077],"mapped",[31049]],[[64078,64078],"mapped",[31048]],[[64079,64079],"mapped",[31056]],[[64080,64080],"mapped",[31062]],[[64081,64081],"mapped",[31069]],[[64082,64082],"mapped",[31117]],[[64083,64083],"mapped",[31118]],[[64084,64084],"mapped",[31296]],[[64085,64085],"mapped",[31361]],[[64086,64086],"mapped",[31680]],[[64087,64087],"mapped",[32244]],[[64088,64088],"mapped",[32265]],[[64089,64089],"mapped",[32321]],[[64090,64090],"mapped",[32626]],[[64091,64091],"mapped",[32773]],[[64092,64092],"mapped",[33261]],[[64093,64094],"mapped",[33401]],[[64095,64095],"mapped",[33879]],[[64096,64096],"mapped",[35088]],[[64097,64097],"mapped",[35222]],[[64098,64098],"mapped",[35585]],[[64099,64099],"mapped",[35641]],[[64100,64100],"mapped",[36051]],[[64101,64101],"mapped",[36104]],[[64102,64102],"mapped",[36790]],[[64103,64103],"mapped",[36920]],[[64104,64104],"mapped",[38627]],[[64105,64105],"mapped",[38911]],[[64106,64106],"mapped",[38971]],[[64107,64107],"mapped",[24693]],[[64108,64108],"mapped",[148206]],[[64109,64109],"mapped",[33304]],[[64110,64111],"disallowed"],[[64112,64112],"mapped",[20006]],[[64113,64113],"mapped",[20917]],[[64114,64114],"mapped",[20840]],[[64115,64115],"mapped",[20352]],[[64116,64116],"mapped",[20805]],[[64117,64117],"mapped",[20864]],[[64118,64118],"mapped",[21191]],[[64119,64119],"mapped",[21242]],[[64120,64120],"mapped",[21917]],[[64121,64121],"mapped",[21845]],[[64122,64122],"mapped",[21913]],[[64123,64123],"mapped",[21986]],[[64124,64124],"mapped",[22618]],[[64125,64125],"mapped",[22707]],[[64126,64126],"mapped",[22852]],[[64127,64127],"mapped",[22868]],[[64128,64128],"mapped",[23138]],[[64129,64129],"mapped",[23336]],[[64130,64130],"mapped",[24274]],[[64131,64131],"mapped",[24281]],[[64132,64132],"mapped",[24425]],[[64133,64133],"mapped",[24493]],[[64134,64134],"mapped",[24792]],[[64135,64135],"mapped",[24910]],[[64136,64136],"mapped",[24840]],[[64137,64137],"mapped",[24974]],[[64138,64138],"mapped",[24928]],[[64139,64139],"mapped",[25074]],[[64140,64140],"mapped",[25140]],[[64141,64141],"mapped",[25540]],[[64142,64142],"mapped",[25628]],[[64143,64143],"mapped",[25682]],[[64144,64144],"mapped",[25942]],[[64145,64145],"mapped",[26228]],[[64146,64146],"mapped",[26391]],[[64147,64147],"mapped",[26395]],[[64148,64148],"mapped",[26454]],[[64149,64149],"mapped",[27513]],[[64150,64150],"mapped",[27578]],[[64151,64151],"mapped",[27969]],[[64152,64152],"mapped",[28379]],[[64153,64153],"mapped",[28363]],[[64154,64154],"mapped",[28450]],[[64155,64155],"mapped",[28702]],[[64156,64156],"mapped",[29038]],[[64157,64157],"mapped",[30631]],[[64158,64158],"mapped",[29237]],[[64159,64159],"mapped",[29359]],[[64160,64160],"mapped",[29482]],[[64161,64161],"mapped",[29809]],[[64162,64162],"mapped",[29958]],[[64163,64163],"mapped",[30011]],[[64164,64164],"mapped",[30237]],[[64165,64165],"mapped",[30239]],[[64166,64166],"mapped",[30410]],[[64167,64167],"mapped",[30427]],[[64168,64168],"mapped",[30452]],[[64169,64169],"mapped",[30538]],[[64170,64170],"mapped",[30528]],[[64171,64171],"mapped",[30924]],[[64172,64172],"mapped",[31409]],[[64173,64173],"mapped",[31680]],[[64174,64174],"mapped",[31867]],[[64175,64175],"mapped",[32091]],[[64176,64176],"mapped",[32244]],[[64177,64177],"mapped",[32574]],[[64178,64178],"mapped",[32773]],[[64179,64179],"mapped",[33618]],[[64180,64180],"mapped",[33775]],[[64181,64181],"mapped",[34681]],[[64182,64182],"mapped",[35137]],[[64183,64183],"mapped",[35206]],[[64184,64184],"mapped",[35222]],[[64185,64185],"mapped",[35519]],[[64186,64186],"mapped",[35576]],[[64187,64187],"mapped",[35531]],[[64188,64188],"mapped",[35585]],[[64189,64189],"mapped",[35582]],[[64190,64190],"mapped",[35565]],[[64191,64191],"mapped",[35641]],[[64192,64192],"mapped",[35722]],[[64193,64193],"mapped",[36104]],[[64194,64194],"mapped",[36664]],[[64195,64195],"mapped",[36978]],[[64196,64196],"mapped",[37273]],[[64197,64197],"mapped",[37494]],[[64198,64198],"mapped",[38524]],[[64199,64199],"mapped",[38627]],[[64200,64200],"mapped",[38742]],[[64201,64201],"mapped",[38875]],[[64202,64202],"mapped",[38911]],[[64203,64203],"mapped",[38923]],[[64204,64204],"mapped",[38971]],[[64205,64205],"mapped",[39698]],[[64206,64206],"mapped",[40860]],[[64207,64207],"mapped",[141386]],[[64208,64208],"mapped",[141380]],[[64209,64209],"mapped",[144341]],[[64210,64210],"mapped",[15261]],[[64211,64211],"mapped",[16408]],[[64212,64212],"mapped",[16441]],[[64213,64213],"mapped",[152137]],[[64214,64214],"mapped",[154832]],[[64215,64215],"mapped",[163539]],[[64216,64216],"mapped",[40771]],[[64217,64217],"mapped",[40846]],[[64218,64255],"disallowed"],[[64256,64256],"mapped",[102,102]],[[64257,64257],"mapped",[102,105]],[[64258,64258],"mapped",[102,108]],[[64259,64259],"mapped",[102,102,105]],[[64260,64260],"mapped",[102,102,108]],[[64261,64262],"mapped",[115,116]],[[64263,64274],"disallowed"],[[64275,64275],"mapped",[1396,1398]],[[64276,64276],"mapped",[1396,1381]],[[64277,64277],"mapped",[1396,1387]],[[64278,64278],"mapped",[1406,1398]],[[64279,64279],"mapped",[1396,1389]],[[64280,64284],"disallowed"],[[64285,64285],"mapped",[1497,1460]],[[64286,64286],"valid"],[[64287,64287],"mapped",[1522,1463]],[[64288,64288],"mapped",[1506]],[[64289,64289],"mapped",[1488]],[[64290,64290],"mapped",[1491]],[[64291,64291],"mapped",[1492]],[[64292,64292],"mapped",[1499]],[[64293,64293],"mapped",[1500]],[[64294,64294],"mapped",[1501]],[[64295,64295],"mapped",[1512]],[[64296,64296],"mapped",[1514]],[[64297,64297],"disallowed_STD3_mapped",[43]],[[64298,64298],"mapped",[1513,1473]],[[64299,64299],"mapped",[1513,1474]],[[64300,64300],"mapped",[1513,1468,1473]],[[64301,64301],"mapped",[1513,1468,1474]],[[64302,64302],"mapped",[1488,1463]],[[64303,64303],"mapped",[1488,1464]],[[64304,64304],"mapped",[1488,1468]],[[64305,64305],"mapped",[1489,1468]],[[64306,64306],"mapped",[1490,1468]],[[64307,64307],"mapped",[1491,1468]],[[64308,64308],"mapped",[1492,1468]],[[64309,64309],"mapped",[1493,1468]],[[64310,64310],"mapped",[1494,1468]],[[64311,64311],"disallowed"],[[64312,64312],"mapped",[1496,1468]],[[64313,64313],"mapped",[1497,1468]],[[64314,64314],"mapped",[1498,1468]],[[64315,64315],"mapped",[1499,1468]],[[64316,64316],"mapped",[1500,1468]],[[64317,64317],"disallowed"],[[64318,64318],"mapped",[1502,1468]],[[64319,64319],"disallowed"],[[64320,64320],"mapped",[1504,1468]],[[64321,64321],"mapped",[1505,1468]],[[64322,64322],"disallowed"],[[64323,64323],"mapped",[1507,1468]],[[64324,64324],"mapped",[1508,1468]],[[64325,64325],"disallowed"],[[64326,64326],"mapped",[1510,1468]],[[64327,64327],"mapped",[1511,1468]],[[64328,64328],"mapped",[1512,1468]],[[64329,64329],"mapped",[1513,1468]],[[64330,64330],"mapped",[1514,1468]],[[64331,64331],"mapped",[1493,1465]],[[64332,64332],"mapped",[1489,1471]],[[64333,64333],"mapped",[1499,1471]],[[64334,64334],"mapped",[1508,1471]],[[64335,64335],"mapped",[1488,1500]],[[64336,64337],"mapped",[1649]],[[64338,64341],"mapped",[1659]],[[64342,64345],"mapped",[1662]],[[64346,64349],"mapped",[1664]],[[64350,64353],"mapped",[1658]],[[64354,64357],"mapped",[1663]],[[64358,64361],"mapped",[1657]],[[64362,64365],"mapped",[1700]],[[64366,64369],"mapped",[1702]],[[64370,64373],"mapped",[1668]],[[64374,64377],"mapped",[1667]],[[64378,64381],"mapped",[1670]],[[64382,64385],"mapped",[1671]],[[64386,64387],"mapped",[1677]],[[64388,64389],"mapped",[1676]],[[64390,64391],"mapped",[1678]],[[64392,64393],"mapped",[1672]],[[64394,64395],"mapped",[1688]],[[64396,64397],"mapped",[1681]],[[64398,64401],"mapped",[1705]],[[64402,64405],"mapped",[1711]],[[64406,64409],"mapped",[1715]],[[64410,64413],"mapped",[1713]],[[64414,64415],"mapped",[1722]],[[64416,64419],"mapped",[1723]],[[64420,64421],"mapped",[1728]],[[64422,64425],"mapped",[1729]],[[64426,64429],"mapped",[1726]],[[64430,64431],"mapped",[1746]],[[64432,64433],"mapped",[1747]],[[64434,64449],"valid",[],"NV8"],[[64450,64466],"disallowed"],[[64467,64470],"mapped",[1709]],[[64471,64472],"mapped",[1735]],[[64473,64474],"mapped",[1734]],[[64475,64476],"mapped",[1736]],[[64477,64477],"mapped",[1735,1652]],[[64478,64479],"mapped",[1739]],[[64480,64481],"mapped",[1733]],[[64482,64483],"mapped",[1737]],[[64484,64487],"mapped",[1744]],[[64488,64489],"mapped",[1609]],[[64490,64491],"mapped",[1574,1575]],[[64492,64493],"mapped",[1574,1749]],[[64494,64495],"mapped",[1574,1608]],[[64496,64497],"mapped",[1574,1735]],[[64498,64499],"mapped",[1574,1734]],[[64500,64501],"mapped",[1574,1736]],[[64502,64504],"mapped",[1574,1744]],[[64505,64507],"mapped",[1574,1609]],[[64508,64511],"mapped",[1740]],[[64512,64512],"mapped",[1574,1580]],[[64513,64513],"mapped",[1574,1581]],[[64514,64514],"mapped",[1574,1605]],[[64515,64515],"mapped",[1574,1609]],[[64516,64516],"mapped",[1574,1610]],[[64517,64517],"mapped",[1576,1580]],[[64518,64518],"mapped",[1576,1581]],[[64519,64519],"mapped",[1576,1582]],[[64520,64520],"mapped",[1576,1605]],[[64521,64521],"mapped",[1576,1609]],[[64522,64522],"mapped",[1576,1610]],[[64523,64523],"mapped",[1578,1580]],[[64524,64524],"mapped",[1578,1581]],[[64525,64525],"mapped",[1578,1582]],[[64526,64526],"mapped",[1578,1605]],[[64527,64527],"mapped",[1578,1609]],[[64528,64528],"mapped",[1578,1610]],[[64529,64529],"mapped",[1579,1580]],[[64530,64530],"mapped",[1579,1605]],[[64531,64531],"mapped",[1579,1609]],[[64532,64532],"mapped",[1579,1610]],[[64533,64533],"mapped",[1580,1581]],[[64534,64534],"mapped",[1580,1605]],[[64535,64535],"mapped",[1581,1580]],[[64536,64536],"mapped",[1581,1605]],[[64537,64537],"mapped",[1582,1580]],[[64538,64538],"mapped",[1582,1581]],[[64539,64539],"mapped",[1582,1605]],[[64540,64540],"mapped",[1587,1580]],[[64541,64541],"mapped",[1587,1581]],[[64542,64542],"mapped",[1587,1582]],[[64543,64543],"mapped",[1587,1605]],[[64544,64544],"mapped",[1589,1581]],[[64545,64545],"mapped",[1589,1605]],[[64546,64546],"mapped",[1590,1580]],[[64547,64547],"mapped",[1590,1581]],[[64548,64548],"mapped",[1590,1582]],[[64549,64549],"mapped",[1590,1605]],[[64550,64550],"mapped",[1591,1581]],[[64551,64551],"mapped",[1591,1605]],[[64552,64552],"mapped",[1592,1605]],[[64553,64553],"mapped",[1593,1580]],[[64554,64554],"mapped",[1593,1605]],[[64555,64555],"mapped",[1594,1580]],[[64556,64556],"mapped",[1594,1605]],[[64557,64557],"mapped",[1601,1580]],[[64558,64558],"mapped",[1601,1581]],[[64559,64559],"mapped",[1601,1582]],[[64560,64560],"mapped",[1601,1605]],[[64561,64561],"mapped",[1601,1609]],[[64562,64562],"mapped",[1601,1610]],[[64563,64563],"mapped",[1602,1581]],[[64564,64564],"mapped",[1602,1605]],[[64565,64565],"mapped",[1602,1609]],[[64566,64566],"mapped",[1602,1610]],[[64567,64567],"mapped",[1603,1575]],[[64568,64568],"mapped",[1603,1580]],[[64569,64569],"mapped",[1603,1581]],[[64570,64570],"mapped",[1603,1582]],[[64571,64571],"mapped",[1603,1604]],[[64572,64572],"mapped",[1603,1605]],[[64573,64573],"mapped",[1603,1609]],[[64574,64574],"mapped",[1603,1610]],[[64575,64575],"mapped",[1604,1580]],[[64576,64576],"mapped",[1604,1581]],[[64577,64577],"mapped",[1604,1582]],[[64578,64578],"mapped",[1604,1605]],[[64579,64579],"mapped",[1604,1609]],[[64580,64580],"mapped",[1604,1610]],[[64581,64581],"mapped",[1605,1580]],[[64582,64582],"mapped",[1605,1581]],[[64583,64583],"mapped",[1605,1582]],[[64584,64584],"mapped",[1605,1605]],[[64585,64585],"mapped",[1605,1609]],[[64586,64586],"mapped",[1605,1610]],[[64587,64587],"mapped",[1606,1580]],[[64588,64588],"mapped",[1606,1581]],[[64589,64589],"mapped",[1606,1582]],[[64590,64590],"mapped",[1606,1605]],[[64591,64591],"mapped",[1606,1609]],[[64592,64592],"mapped",[1606,1610]],[[64593,64593],"mapped",[1607,1580]],[[64594,64594],"mapped",[1607,1605]],[[64595,64595],"mapped",[1607,1609]],[[64596,64596],"mapped",[1607,1610]],[[64597,64597],"mapped",[1610,1580]],[[64598,64598],"mapped",[1610,1581]],[[64599,64599],"mapped",[1610,1582]],[[64600,64600],"mapped",[1610,1605]],[[64601,64601],"mapped",[1610,1609]],[[64602,64602],"mapped",[1610,1610]],[[64603,64603],"mapped",[1584,1648]],[[64604,64604],"mapped",[1585,1648]],[[64605,64605],"mapped",[1609,1648]],[[64606,64606],"disallowed_STD3_mapped",[32,1612,1617]],[[64607,64607],"disallowed_STD3_mapped",[32,1613,1617]],[[64608,64608],"disallowed_STD3_mapped",[32,1614,1617]],[[64609,64609],"disallowed_STD3_mapped",[32,1615,1617]],[[64610,64610],"disallowed_STD3_mapped",[32,1616,1617]],[[64611,64611],"disallowed_STD3_mapped",[32,1617,1648]],[[64612,64612],"mapped",[1574,1585]],[[64613,64613],"mapped",[1574,1586]],[[64614,64614],"mapped",[1574,1605]],[[64615,64615],"mapped",[1574,1606]],[[64616,64616],"mapped",[1574,1609]],[[64617,64617],"mapped",[1574,1610]],[[64618,64618],"mapped",[1576,1585]],[[64619,64619],"mapped",[1576,1586]],[[64620,64620],"mapped",[1576,1605]],[[64621,64621],"mapped",[1576,1606]],[[64622,64622],"mapped",[1576,1609]],[[64623,64623],"mapped",[1576,1610]],[[64624,64624],"mapped",[1578,1585]],[[64625,64625],"mapped",[1578,1586]],[[64626,64626],"mapped",[1578,1605]],[[64627,64627],"mapped",[1578,1606]],[[64628,64628],"mapped",[1578,1609]],[[64629,64629],"mapped",[1578,1610]],[[64630,64630],"mapped",[1579,1585]],[[64631,64631],"mapped",[1579,1586]],[[64632,64632],"mapped",[1579,1605]],[[64633,64633],"mapped",[1579,1606]],[[64634,64634],"mapped",[1579,1609]],[[64635,64635],"mapped",[1579,1610]],[[64636,64636],"mapped",[1601,1609]],[[64637,64637],"mapped",[1601,1610]],[[64638,64638],"mapped",[1602,1609]],[[64639,64639],"mapped",[1602,1610]],[[64640,64640],"mapped",[1603,1575]],[[64641,64641],"mapped",[1603,1604]],[[64642,64642],"mapped",[1603,1605]],[[64643,64643],"mapped",[1603,1609]],[[64644,64644],"mapped",[1603,1610]],[[64645,64645],"mapped",[1604,1605]],[[64646,64646],"mapped",[1604,1609]],[[64647,64647],"mapped",[1604,1610]],[[64648,64648],"mapped",[1605,1575]],[[64649,64649],"mapped",[1605,1605]],[[64650,64650],"mapped",[1606,1585]],[[64651,64651],"mapped",[1606,1586]],[[64652,64652],"mapped",[1606,1605]],[[64653,64653],"mapped",[1606,1606]],[[64654,64654],"mapped",[1606,1609]],[[64655,64655],"mapped",[1606,1610]],[[64656,64656],"mapped",[1609,1648]],[[64657,64657],"mapped",[1610,1585]],[[64658,64658],"mapped",[1610,1586]],[[64659,64659],"mapped",[1610,1605]],[[64660,64660],"mapped",[1610,1606]],[[64661,64661],"mapped",[1610,1609]],[[64662,64662],"mapped",[1610,1610]],[[64663,64663],"mapped",[1574,1580]],[[64664,64664],"mapped",[1574,1581]],[[64665,64665],"mapped",[1574,1582]],[[64666,64666],"mapped",[1574,1605]],[[64667,64667],"mapped",[1574,1607]],[[64668,64668],"mapped",[1576,1580]],[[64669,64669],"mapped",[1576,1581]],[[64670,64670],"mapped",[1576,1582]],[[64671,64671],"mapped",[1576,1605]],[[64672,64672],"mapped",[1576,1607]],[[64673,64673],"mapped",[1578,1580]],[[64674,64674],"mapped",[1578,1581]],[[64675,64675],"mapped",[1578,1582]],[[64676,64676],"mapped",[1578,1605]],[[64677,64677],"mapped",[1578,1607]],[[64678,64678],"mapped",[1579,1605]],[[64679,64679],"mapped",[1580,1581]],[[64680,64680],"mapped",[1580,1605]],[[64681,64681],"mapped",[1581,1580]],[[64682,64682],"mapped",[1581,1605]],[[64683,64683],"mapped",[1582,1580]],[[64684,64684],"mapped",[1582,1605]],[[64685,64685],"mapped",[1587,1580]],[[64686,64686],"mapped",[1587,1581]],[[64687,64687],"mapped",[1587,1582]],[[64688,64688],"mapped",[1587,1605]],[[64689,64689],"mapped",[1589,1581]],[[64690,64690],"mapped",[1589,1582]],[[64691,64691],"mapped",[1589,1605]],[[64692,64692],"mapped",[1590,1580]],[[64693,64693],"mapped",[1590,1581]],[[64694,64694],"mapped",[1590,1582]],[[64695,64695],"mapped",[1590,1605]],[[64696,64696],"mapped",[1591,1581]],[[64697,64697],"mapped",[1592,1605]],[[64698,64698],"mapped",[1593,1580]],[[64699,64699],"mapped",[1593,1605]],[[64700,64700],"mapped",[1594,1580]],[[64701,64701],"mapped",[1594,1605]],[[64702,64702],"mapped",[1601,1580]],[[64703,64703],"mapped",[1601,1581]],[[64704,64704],"mapped",[1601,1582]],[[64705,64705],"mapped",[1601,1605]],[[64706,64706],"mapped",[1602,1581]],[[64707,64707],"mapped",[1602,1605]],[[64708,64708],"mapped",[1603,1580]],[[64709,64709],"mapped",[1603,1581]],[[64710,64710],"mapped",[1603,1582]],[[64711,64711],"mapped",[1603,1604]],[[64712,64712],"mapped",[1603,1605]],[[64713,64713],"mapped",[1604,1580]],[[64714,64714],"mapped",[1604,1581]],[[64715,64715],"mapped",[1604,1582]],[[64716,64716],"mapped",[1604,1605]],[[64717,64717],"mapped",[1604,1607]],[[64718,64718],"mapped",[1605,1580]],[[64719,64719],"mapped",[1605,1581]],[[64720,64720],"mapped",[1605,1582]],[[64721,64721],"mapped",[1605,1605]],[[64722,64722],"mapped",[1606,1580]],[[64723,64723],"mapped",[1606,1581]],[[64724,64724],"mapped",[1606,1582]],[[64725,64725],"mapped",[1606,1605]],[[64726,64726],"mapped",[1606,1607]],[[64727,64727],"mapped",[1607,1580]],[[64728,64728],"mapped",[1607,1605]],[[64729,64729],"mapped",[1607,1648]],[[64730,64730],"mapped",[1610,1580]],[[64731,64731],"mapped",[1610,1581]],[[64732,64732],"mapped",[1610,1582]],[[64733,64733],"mapped",[1610,1605]],[[64734,64734],"mapped",[1610,1607]],[[64735,64735],"mapped",[1574,1605]],[[64736,64736],"mapped",[1574,1607]],[[64737,64737],"mapped",[1576,1605]],[[64738,64738],"mapped",[1576,1607]],[[64739,64739],"mapped",[1578,1605]],[[64740,64740],"mapped",[1578,1607]],[[64741,64741],"mapped",[1579,1605]],[[64742,64742],"mapped",[1579,1607]],[[64743,64743],"mapped",[1587,1605]],[[64744,64744],"mapped",[1587,1607]],[[64745,64745],"mapped",[1588,1605]],[[64746,64746],"mapped",[1588,1607]],[[64747,64747],"mapped",[1603,1604]],[[64748,64748],"mapped",[1603,1605]],[[64749,64749],"mapped",[1604,1605]],[[64750,64750],"mapped",[1606,1605]],[[64751,64751],"mapped",[1606,1607]],[[64752,64752],"mapped",[1610,1605]],[[64753,64753],"mapped",[1610,1607]],[[64754,64754],"mapped",[1600,1614,1617]],[[64755,64755],"mapped",[1600,1615,1617]],[[64756,64756],"mapped",[1600,1616,1617]],[[64757,64757],"mapped",[1591,1609]],[[64758,64758],"mapped",[1591,1610]],[[64759,64759],"mapped",[1593,1609]],[[64760,64760],"mapped",[1593,1610]],[[64761,64761],"mapped",[1594,1609]],[[64762,64762],"mapped",[1594,1610]],[[64763,64763],"mapped",[1587,1609]],[[64764,64764],"mapped",[1587,1610]],[[64765,64765],"mapped",[1588,1609]],[[64766,64766],"mapped",[1588,1610]],[[64767,64767],"mapped",[1581,1609]],[[64768,64768],"mapped",[1581,1610]],[[64769,64769],"mapped",[1580,1609]],[[64770,64770],"mapped",[1580,1610]],[[64771,64771],"mapped",[1582,1609]],[[64772,64772],"mapped",[1582,1610]],[[64773,64773],"mapped",[1589,1609]],[[64774,64774],"mapped",[1589,1610]],[[64775,64775],"mapped",[1590,1609]],[[64776,64776],"mapped",[1590,1610]],[[64777,64777],"mapped",[1588,1580]],[[64778,64778],"mapped",[1588,1581]],[[64779,64779],"mapped",[1588,1582]],[[64780,64780],"mapped",[1588,1605]],[[64781,64781],"mapped",[1588,1585]],[[64782,64782],"mapped",[1587,1585]],[[64783,64783],"mapped",[1589,1585]],[[64784,64784],"mapped",[1590,1585]],[[64785,64785],"mapped",[1591,1609]],[[64786,64786],"mapped",[1591,1610]],[[64787,64787],"mapped",[1593,1609]],[[64788,64788],"mapped",[1593,1610]],[[64789,64789],"mapped",[1594,1609]],[[64790,64790],"mapped",[1594,1610]],[[64791,64791],"mapped",[1587,1609]],[[64792,64792],"mapped",[1587,1610]],[[64793,64793],"mapped",[1588,1609]],[[64794,64794],"mapped",[1588,1610]],[[64795,64795],"mapped",[1581,1609]],[[64796,64796],"mapped",[1581,1610]],[[64797,64797],"mapped",[1580,1609]],[[64798,64798],"mapped",[1580,1610]],[[64799,64799],"mapped",[1582,1609]],[[64800,64800],"mapped",[1582,1610]],[[64801,64801],"mapped",[1589,1609]],[[64802,64802],"mapped",[1589,1610]],[[64803,64803],"mapped",[1590,1609]],[[64804,64804],"mapped",[1590,1610]],[[64805,64805],"mapped",[1588,1580]],[[64806,64806],"mapped",[1588,1581]],[[64807,64807],"mapped",[1588,1582]],[[64808,64808],"mapped",[1588,1605]],[[64809,64809],"mapped",[1588,1585]],[[64810,64810],"mapped",[1587,1585]],[[64811,64811],"mapped",[1589,1585]],[[64812,64812],"mapped",[1590,1585]],[[64813,64813],"mapped",[1588,1580]],[[64814,64814],"mapped",[1588,1581]],[[64815,64815],"mapped",[1588,1582]],[[64816,64816],"mapped",[1588,1605]],[[64817,64817],"mapped",[1587,1607]],[[64818,64818],"mapped",[1588,1607]],[[64819,64819],"mapped",[1591,1605]],[[64820,64820],"mapped",[1587,1580]],[[64821,64821],"mapped",[1587,1581]],[[64822,64822],"mapped",[1587,1582]],[[64823,64823],"mapped",[1588,1580]],[[64824,64824],"mapped",[1588,1581]],[[64825,64825],"mapped",[1588,1582]],[[64826,64826],"mapped",[1591,1605]],[[64827,64827],"mapped",[1592,1605]],[[64828,64829],"mapped",[1575,1611]],[[64830,64831],"valid",[],"NV8"],[[64832,64847],"disallowed"],[[64848,64848],"mapped",[1578,1580,1605]],[[64849,64850],"mapped",[1578,1581,1580]],[[64851,64851],"mapped",[1578,1581,1605]],[[64852,64852],"mapped",[1578,1582,1605]],[[64853,64853],"mapped",[1578,1605,1580]],[[64854,64854],"mapped",[1578,1605,1581]],[[64855,64855],"mapped",[1578,1605,1582]],[[64856,64857],"mapped",[1580,1605,1581]],[[64858,64858],"mapped",[1581,1605,1610]],[[64859,64859],"mapped",[1581,1605,1609]],[[64860,64860],"mapped",[1587,1581,1580]],[[64861,64861],"mapped",[1587,1580,1581]],[[64862,64862],"mapped",[1587,1580,1609]],[[64863,64864],"mapped",[1587,1605,1581]],[[64865,64865],"mapped",[1587,1605,1580]],[[64866,64867],"mapped",[1587,1605,1605]],[[64868,64869],"mapped",[1589,1581,1581]],[[64870,64870],"mapped",[1589,1605,1605]],[[64871,64872],"mapped",[1588,1581,1605]],[[64873,64873],"mapped",[1588,1580,1610]],[[64874,64875],"mapped",[1588,1605,1582]],[[64876,64877],"mapped",[1588,1605,1605]],[[64878,64878],"mapped",[1590,1581,1609]],[[64879,64880],"mapped",[1590,1582,1605]],[[64881,64882],"mapped",[1591,1605,1581]],[[64883,64883],"mapped",[1591,1605,1605]],[[64884,64884],"mapped",[1591,1605,1610]],[[64885,64885],"mapped",[1593,1580,1605]],[[64886,64887],"mapped",[1593,1605,1605]],[[64888,64888],"mapped",[1593,1605,1609]],[[64889,64889],"mapped",[1594,1605,1605]],[[64890,64890],"mapped",[1594,1605,1610]],[[64891,64891],"mapped",[1594,1605,1609]],[[64892,64893],"mapped",[1601,1582,1605]],[[64894,64894],"mapped",[1602,1605,1581]],[[64895,64895],"mapped",[1602,1605,1605]],[[64896,64896],"mapped",[1604,1581,1605]],[[64897,64897],"mapped",[1604,1581,1610]],[[64898,64898],"mapped",[1604,1581,1609]],[[64899,64900],"mapped",[1604,1580,1580]],[[64901,64902],"mapped",[1604,1582,1605]],[[64903,64904],"mapped",[1604,1605,1581]],[[64905,64905],"mapped",[1605,1581,1580]],[[64906,64906],"mapped",[1605,1581,1605]],[[64907,64907],"mapped",[1605,1581,1610]],[[64908,64908],"mapped",[1605,1580,1581]],[[64909,64909],"mapped",[1605,1580,1605]],[[64910,64910],"mapped",[1605,1582,1580]],[[64911,64911],"mapped",[1605,1582,1605]],[[64912,64913],"disallowed"],[[64914,64914],"mapped",[1605,1580,1582]],[[64915,64915],"mapped",[1607,1605,1580]],[[64916,64916],"mapped",[1607,1605,1605]],[[64917,64917],"mapped",[1606,1581,1605]],[[64918,64918],"mapped",[1606,1581,1609]],[[64919,64920],"mapped",[1606,1580,1605]],[[64921,64921],"mapped",[1606,1580,1609]],[[64922,64922],"mapped",[1606,1605,1610]],[[64923,64923],"mapped",[1606,1605,1609]],[[64924,64925],"mapped",[1610,1605,1605]],[[64926,64926],"mapped",[1576,1582,1610]],[[64927,64927],"mapped",[1578,1580,1610]],[[64928,64928],"mapped",[1578,1580,1609]],[[64929,64929],"mapped",[1578,1582,1610]],[[64930,64930],"mapped",[1578,1582,1609]],[[64931,64931],"mapped",[1578,1605,1610]],[[64932,64932],"mapped",[1578,1605,1609]],[[64933,64933],"mapped",[1580,1605,1610]],[[64934,64934],"mapped",[1580,1581,1609]],[[64935,64935],"mapped",[1580,1605,1609]],[[64936,64936],"mapped",[1587,1582,1609]],[[64937,64937],"mapped",[1589,1581,1610]],[[64938,64938],"mapped",[1588,1581,1610]],[[64939,64939],"mapped",[1590,1581,1610]],[[64940,64940],"mapped",[1604,1580,1610]],[[64941,64941],"mapped",[1604,1605,1610]],[[64942,64942],"mapped",[1610,1581,1610]],[[64943,64943],"mapped",[1610,1580,1610]],[[64944,64944],"mapped",[1610,1605,1610]],[[64945,64945],"mapped",[1605,1605,1610]],[[64946,64946],"mapped",[1602,1605,1610]],[[64947,64947],"mapped",[1606,1581,1610]],[[64948,64948],"mapped",[1602,1605,1581]],[[64949,64949],"mapped",[1604,1581,1605]],[[64950,64950],"mapped",[1593,1605,1610]],[[64951,64951],"mapped",[1603,1605,1610]],[[64952,64952],"mapped",[1606,1580,1581]],[[64953,64953],"mapped",[1605,1582,1610]],[[64954,64954],"mapped",[1604,1580,1605]],[[64955,64955],"mapped",[1603,1605,1605]],[[64956,64956],"mapped",[1604,1580,1605]],[[64957,64957],"mapped",[1606,1580,1581]],[[64958,64958],"mapped",[1580,1581,1610]],[[64959,64959],"mapped",[1581,1580,1610]],[[64960,64960],"mapped",[1605,1580,1610]],[[64961,64961],"mapped",[1601,1605,1610]],[[64962,64962],"mapped",[1576,1581,1610]],[[64963,64963],"mapped",[1603,1605,1605]],[[64964,64964],"mapped",[1593,1580,1605]],[[64965,64965],"mapped",[1589,1605,1605]],[[64966,64966],"mapped",[1587,1582,1610]],[[64967,64967],"mapped",[1606,1580,1610]],[[64968,64975],"disallowed"],[[64976,65007],"disallowed"],[[65008,65008],"mapped",[1589,1604,1746]],[[65009,65009],"mapped",[1602,1604,1746]],[[65010,65010],"mapped",[1575,1604,1604,1607]],[[65011,65011],"mapped",[1575,1603,1576,1585]],[[65012,65012],"mapped",[1605,1581,1605,1583]],[[65013,65013],"mapped",[1589,1604,1593,1605]],[[65014,65014],"mapped",[1585,1587,1608,1604]],[[65015,65015],"mapped",[1593,1604,1610,1607]],[[65016,65016],"mapped",[1608,1587,1604,1605]],[[65017,65017],"mapped",[1589,1604,1609]],[[65018,65018],"disallowed_STD3_mapped",[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605]],[[65019,65019],"disallowed_STD3_mapped",[1580,1604,32,1580,1604,1575,1604,1607]],[[65020,65020],"mapped",[1585,1740,1575,1604]],[[65021,65021],"valid",[],"NV8"],[[65022,65023],"disallowed"],[[65024,65039],"ignored"],[[65040,65040],"disallowed_STD3_mapped",[44]],[[65041,65041],"mapped",[12289]],[[65042,65042],"disallowed"],[[65043,65043],"disallowed_STD3_mapped",[58]],[[65044,65044],"disallowed_STD3_mapped",[59]],[[65045,65045],"disallowed_STD3_mapped",[33]],[[65046,65046],"disallowed_STD3_mapped",[63]],[[65047,65047],"mapped",[12310]],[[65048,65048],"mapped",[12311]],[[65049,65049],"disallowed"],[[65050,65055],"disallowed"],[[65056,65059],"valid"],[[65060,65062],"valid"],[[65063,65069],"valid"],[[65070,65071],"valid"],[[65072,65072],"disallowed"],[[65073,65073],"mapped",[8212]],[[65074,65074],"mapped",[8211]],[[65075,65076],"disallowed_STD3_mapped",[95]],[[65077,65077],"disallowed_STD3_mapped",[40]],[[65078,65078],"disallowed_STD3_mapped",[41]],[[65079,65079],"disallowed_STD3_mapped",[123]],[[65080,65080],"disallowed_STD3_mapped",[125]],[[65081,65081],"mapped",[12308]],[[65082,65082],"mapped",[12309]],[[65083,65083],"mapped",[12304]],[[65084,65084],"mapped",[12305]],[[65085,65085],"mapped",[12298]],[[65086,65086],"mapped",[12299]],[[65087,65087],"mapped",[12296]],[[65088,65088],"mapped",[12297]],[[65089,65089],"mapped",[12300]],[[65090,65090],"mapped",[12301]],[[65091,65091],"mapped",[12302]],[[65092,65092],"mapped",[12303]],[[65093,65094],"valid",[],"NV8"],[[65095,65095],"disallowed_STD3_mapped",[91]],[[65096,65096],"disallowed_STD3_mapped",[93]],[[65097,65100],"disallowed_STD3_mapped",[32,773]],[[65101,65103],"disallowed_STD3_mapped",[95]],[[65104,65104],"disallowed_STD3_mapped",[44]],[[65105,65105],"mapped",[12289]],[[65106,65106],"disallowed"],[[65107,65107],"disallowed"],[[65108,65108],"disallowed_STD3_mapped",[59]],[[65109,65109],"disallowed_STD3_mapped",[58]],[[65110,65110],"disallowed_STD3_mapped",[63]],[[65111,65111],"disallowed_STD3_mapped",[33]],[[65112,65112],"mapped",[8212]],[[65113,65113],"disallowed_STD3_mapped",[40]],[[65114,65114],"disallowed_STD3_mapped",[41]],[[65115,65115],"disallowed_STD3_mapped",[123]],[[65116,65116],"disallowed_STD3_mapped",[125]],[[65117,65117],"mapped",[12308]],[[65118,65118],"mapped",[12309]],[[65119,65119],"disallowed_STD3_mapped",[35]],[[65120,65120],"disallowed_STD3_mapped",[38]],[[65121,65121],"disallowed_STD3_mapped",[42]],[[65122,65122],"disallowed_STD3_mapped",[43]],[[65123,65123],"mapped",[45]],[[65124,65124],"disallowed_STD3_mapped",[60]],[[65125,65125],"disallowed_STD3_mapped",[62]],[[65126,65126],"disallowed_STD3_mapped",[61]],[[65127,65127],"disallowed"],[[65128,65128],"disallowed_STD3_mapped",[92]],[[65129,65129],"disallowed_STD3_mapped",[36]],[[65130,65130],"disallowed_STD3_mapped",[37]],[[65131,65131],"disallowed_STD3_mapped",[64]],[[65132,65135],"disallowed"],[[65136,65136],"disallowed_STD3_mapped",[32,1611]],[[65137,65137],"mapped",[1600,1611]],[[65138,65138],"disallowed_STD3_mapped",[32,1612]],[[65139,65139],"valid"],[[65140,65140],"disallowed_STD3_mapped",[32,1613]],[[65141,65141],"disallowed"],[[65142,65142],"disallowed_STD3_mapped",[32,1614]],[[65143,65143],"mapped",[1600,1614]],[[65144,65144],"disallowed_STD3_mapped",[32,1615]],[[65145,65145],"mapped",[1600,1615]],[[65146,65146],"disallowed_STD3_mapped",[32,1616]],[[65147,65147],"mapped",[1600,1616]],[[65148,65148],"disallowed_STD3_mapped",[32,1617]],[[65149,65149],"mapped",[1600,1617]],[[65150,65150],"disallowed_STD3_mapped",[32,1618]],[[65151,65151],"mapped",[1600,1618]],[[65152,65152],"mapped",[1569]],[[65153,65154],"mapped",[1570]],[[65155,65156],"mapped",[1571]],[[65157,65158],"mapped",[1572]],[[65159,65160],"mapped",[1573]],[[65161,65164],"mapped",[1574]],[[65165,65166],"mapped",[1575]],[[65167,65170],"mapped",[1576]],[[65171,65172],"mapped",[1577]],[[65173,65176],"mapped",[1578]],[[65177,65180],"mapped",[1579]],[[65181,65184],"mapped",[1580]],[[65185,65188],"mapped",[1581]],[[65189,65192],"mapped",[1582]],[[65193,65194],"mapped",[1583]],[[65195,65196],"mapped",[1584]],[[65197,65198],"mapped",[1585]],[[65199,65200],"mapped",[1586]],[[65201,65204],"mapped",[1587]],[[65205,65208],"mapped",[1588]],[[65209,65212],"mapped",[1589]],[[65213,65216],"mapped",[1590]],[[65217,65220],"mapped",[1591]],[[65221,65224],"mapped",[1592]],[[65225,65228],"mapped",[1593]],[[65229,65232],"mapped",[1594]],[[65233,65236],"mapped",[1601]],[[65237,65240],"mapped",[1602]],[[65241,65244],"mapped",[1603]],[[65245,65248],"mapped",[1604]],[[65249,65252],"mapped",[1605]],[[65253,65256],"mapped",[1606]],[[65257,65260],"mapped",[1607]],[[65261,65262],"mapped",[1608]],[[65263,65264],"mapped",[1609]],[[65265,65268],"mapped",[1610]],[[65269,65270],"mapped",[1604,1570]],[[65271,65272],"mapped",[1604,1571]],[[65273,65274],"mapped",[1604,1573]],[[65275,65276],"mapped",[1604,1575]],[[65277,65278],"disallowed"],[[65279,65279],"ignored"],[[65280,65280],"disallowed"],[[65281,65281],"disallowed_STD3_mapped",[33]],[[65282,65282],"disallowed_STD3_mapped",[34]],[[65283,65283],"disallowed_STD3_mapped",[35]],[[65284,65284],"disallowed_STD3_mapped",[36]],[[65285,65285],"disallowed_STD3_mapped",[37]],[[65286,65286],"disallowed_STD3_mapped",[38]],[[65287,65287],"disallowed_STD3_mapped",[39]],[[65288,65288],"disallowed_STD3_mapped",[40]],[[65289,65289],"disallowed_STD3_mapped",[41]],[[65290,65290],"disallowed_STD3_mapped",[42]],[[65291,65291],"disallowed_STD3_mapped",[43]],[[65292,65292],"disallowed_STD3_mapped",[44]],[[65293,65293],"mapped",[45]],[[65294,65294],"mapped",[46]],[[65295,65295],"disallowed_STD3_mapped",[47]],[[65296,65296],"mapped",[48]],[[65297,65297],"mapped",[49]],[[65298,65298],"mapped",[50]],[[65299,65299],"mapped",[51]],[[65300,65300],"mapped",[52]],[[65301,65301],"mapped",[53]],[[65302,65302],"mapped",[54]],[[65303,65303],"mapped",[55]],[[65304,65304],"mapped",[56]],[[65305,65305],"mapped",[57]],[[65306,65306],"disallowed_STD3_mapped",[58]],[[65307,65307],"disallowed_STD3_mapped",[59]],[[65308,65308],"disallowed_STD3_mapped",[60]],[[65309,65309],"disallowed_STD3_mapped",[61]],[[65310,65310],"disallowed_STD3_mapped",[62]],[[65311,65311],"disallowed_STD3_mapped",[63]],[[65312,65312],"disallowed_STD3_mapped",[64]],[[65313,65313],"mapped",[97]],[[65314,65314],"mapped",[98]],[[65315,65315],"mapped",[99]],[[65316,65316],"mapped",[100]],[[65317,65317],"mapped",[101]],[[65318,65318],"mapped",[102]],[[65319,65319],"mapped",[103]],[[65320,65320],"mapped",[104]],[[65321,65321],"mapped",[105]],[[65322,65322],"mapped",[106]],[[65323,65323],"mapped",[107]],[[65324,65324],"mapped",[108]],[[65325,65325],"mapped",[109]],[[65326,65326],"mapped",[110]],[[65327,65327],"mapped",[111]],[[65328,65328],"mapped",[112]],[[65329,65329],"mapped",[113]],[[65330,65330],"mapped",[114]],[[65331,65331],"mapped",[115]],[[65332,65332],"mapped",[116]],[[65333,65333],"mapped",[117]],[[65334,65334],"mapped",[118]],[[65335,65335],"mapped",[119]],[[65336,65336],"mapped",[120]],[[65337,65337],"mapped",[121]],[[65338,65338],"mapped",[122]],[[65339,65339],"disallowed_STD3_mapped",[91]],[[65340,65340],"disallowed_STD3_mapped",[92]],[[65341,65341],"disallowed_STD3_mapped",[93]],[[65342,65342],"disallowed_STD3_mapped",[94]],[[65343,65343],"disallowed_STD3_mapped",[95]],[[65344,65344],"disallowed_STD3_mapped",[96]],[[65345,65345],"mapped",[97]],[[65346,65346],"mapped",[98]],[[65347,65347],"mapped",[99]],[[65348,65348],"mapped",[100]],[[65349,65349],"mapped",[101]],[[65350,65350],"mapped",[102]],[[65351,65351],"mapped",[103]],[[65352,65352],"mapped",[104]],[[65353,65353],"mapped",[105]],[[65354,65354],"mapped",[106]],[[65355,65355],"mapped",[107]],[[65356,65356],"mapped",[108]],[[65357,65357],"mapped",[109]],[[65358,65358],"mapped",[110]],[[65359,65359],"mapped",[111]],[[65360,65360],"mapped",[112]],[[65361,65361],"mapped",[113]],[[65362,65362],"mapped",[114]],[[65363,65363],"mapped",[115]],[[65364,65364],"mapped",[116]],[[65365,65365],"mapped",[117]],[[65366,65366],"mapped",[118]],[[65367,65367],"mapped",[119]],[[65368,65368],"mapped",[120]],[[65369,65369],"mapped",[121]],[[65370,65370],"mapped",[122]],[[65371,65371],"disallowed_STD3_mapped",[123]],[[65372,65372],"disallowed_STD3_mapped",[124]],[[65373,65373],"disallowed_STD3_mapped",[125]],[[65374,65374],"disallowed_STD3_mapped",[126]],[[65375,65375],"mapped",[10629]],[[65376,65376],"mapped",[10630]],[[65377,65377],"mapped",[46]],[[65378,65378],"mapped",[12300]],[[65379,65379],"mapped",[12301]],[[65380,65380],"mapped",[12289]],[[65381,65381],"mapped",[12539]],[[65382,65382],"mapped",[12530]],[[65383,65383],"mapped",[12449]],[[65384,65384],"mapped",[12451]],[[65385,65385],"mapped",[12453]],[[65386,65386],"mapped",[12455]],[[65387,65387],"mapped",[12457]],[[65388,65388],"mapped",[12515]],[[65389,65389],"mapped",[12517]],[[65390,65390],"mapped",[12519]],[[65391,65391],"mapped",[12483]],[[65392,65392],"mapped",[12540]],[[65393,65393],"mapped",[12450]],[[65394,65394],"mapped",[12452]],[[65395,65395],"mapped",[12454]],[[65396,65396],"mapped",[12456]],[[65397,65397],"mapped",[12458]],[[65398,65398],"mapped",[12459]],[[65399,65399],"mapped",[12461]],[[65400,65400],"mapped",[12463]],[[65401,65401],"mapped",[12465]],[[65402,65402],"mapped",[12467]],[[65403,65403],"mapped",[12469]],[[65404,65404],"mapped",[12471]],[[65405,65405],"mapped",[12473]],[[65406,65406],"mapped",[12475]],[[65407,65407],"mapped",[12477]],[[65408,65408],"mapped",[12479]],[[65409,65409],"mapped",[12481]],[[65410,65410],"mapped",[12484]],[[65411,65411],"mapped",[12486]],[[65412,65412],"mapped",[12488]],[[65413,65413],"mapped",[12490]],[[65414,65414],"mapped",[12491]],[[65415,65415],"mapped",[12492]],[[65416,65416],"mapped",[12493]],[[65417,65417],"mapped",[12494]],[[65418,65418],"mapped",[12495]],[[65419,65419],"mapped",[12498]],[[65420,65420],"mapped",[12501]],[[65421,65421],"mapped",[12504]],[[65422,65422],"mapped",[12507]],[[65423,65423],"mapped",[12510]],[[65424,65424],"mapped",[12511]],[[65425,65425],"mapped",[12512]],[[65426,65426],"mapped",[12513]],[[65427,65427],"mapped",[12514]],[[65428,65428],"mapped",[12516]],[[65429,65429],"mapped",[12518]],[[65430,65430],"mapped",[12520]],[[65431,65431],"mapped",[12521]],[[65432,65432],"mapped",[12522]],[[65433,65433],"mapped",[12523]],[[65434,65434],"mapped",[12524]],[[65435,65435],"mapped",[12525]],[[65436,65436],"mapped",[12527]],[[65437,65437],"mapped",[12531]],[[65438,65438],"mapped",[12441]],[[65439,65439],"mapped",[12442]],[[65440,65440],"disallowed"],[[65441,65441],"mapped",[4352]],[[65442,65442],"mapped",[4353]],[[65443,65443],"mapped",[4522]],[[65444,65444],"mapped",[4354]],[[65445,65445],"mapped",[4524]],[[65446,65446],"mapped",[4525]],[[65447,65447],"mapped",[4355]],[[65448,65448],"mapped",[4356]],[[65449,65449],"mapped",[4357]],[[65450,65450],"mapped",[4528]],[[65451,65451],"mapped",[4529]],[[65452,65452],"mapped",[4530]],[[65453,65453],"mapped",[4531]],[[65454,65454],"mapped",[4532]],[[65455,65455],"mapped",[4533]],[[65456,65456],"mapped",[4378]],[[65457,65457],"mapped",[4358]],[[65458,65458],"mapped",[4359]],[[65459,65459],"mapped",[4360]],[[65460,65460],"mapped",[4385]],[[65461,65461],"mapped",[4361]],[[65462,65462],"mapped",[4362]],[[65463,65463],"mapped",[4363]],[[65464,65464],"mapped",[4364]],[[65465,65465],"mapped",[4365]],[[65466,65466],"mapped",[4366]],[[65467,65467],"mapped",[4367]],[[65468,65468],"mapped",[4368]],[[65469,65469],"mapped",[4369]],[[65470,65470],"mapped",[4370]],[[65471,65473],"disallowed"],[[65474,65474],"mapped",[4449]],[[65475,65475],"mapped",[4450]],[[65476,65476],"mapped",[4451]],[[65477,65477],"mapped",[4452]],[[65478,65478],"mapped",[4453]],[[65479,65479],"mapped",[4454]],[[65480,65481],"disallowed"],[[65482,65482],"mapped",[4455]],[[65483,65483],"mapped",[4456]],[[65484,65484],"mapped",[4457]],[[65485,65485],"mapped",[4458]],[[65486,65486],"mapped",[4459]],[[65487,65487],"mapped",[4460]],[[65488,65489],"disallowed"],[[65490,65490],"mapped",[4461]],[[65491,65491],"mapped",[4462]],[[65492,65492],"mapped",[4463]],[[65493,65493],"mapped",[4464]],[[65494,65494],"mapped",[4465]],[[65495,65495],"mapped",[4466]],[[65496,65497],"disallowed"],[[65498,65498],"mapped",[4467]],[[65499,65499],"mapped",[4468]],[[65500,65500],"mapped",[4469]],[[65501,65503],"disallowed"],[[65504,65504],"mapped",[162]],[[65505,65505],"mapped",[163]],[[65506,65506],"mapped",[172]],[[65507,65507],"disallowed_STD3_mapped",[32,772]],[[65508,65508],"mapped",[166]],[[65509,65509],"mapped",[165]],[[65510,65510],"mapped",[8361]],[[65511,65511],"disallowed"],[[65512,65512],"mapped",[9474]],[[65513,65513],"mapped",[8592]],[[65514,65514],"mapped",[8593]],[[65515,65515],"mapped",[8594]],[[65516,65516],"mapped",[8595]],[[65517,65517],"mapped",[9632]],[[65518,65518],"mapped",[9675]],[[65519,65528],"disallowed"],[[65529,65531],"disallowed"],[[65532,65532],"disallowed"],[[65533,65533],"disallowed"],[[65534,65535],"disallowed"],[[65536,65547],"valid"],[[65548,65548],"disallowed"],[[65549,65574],"valid"],[[65575,65575],"disallowed"],[[65576,65594],"valid"],[[65595,65595],"disallowed"],[[65596,65597],"valid"],[[65598,65598],"disallowed"],[[65599,65613],"valid"],[[65614,65615],"disallowed"],[[65616,65629],"valid"],[[65630,65663],"disallowed"],[[65664,65786],"valid"],[[65787,65791],"disallowed"],[[65792,65794],"valid",[],"NV8"],[[65795,65798],"disallowed"],[[65799,65843],"valid",[],"NV8"],[[65844,65846],"disallowed"],[[65847,65855],"valid",[],"NV8"],[[65856,65930],"valid",[],"NV8"],[[65931,65932],"valid",[],"NV8"],[[65933,65935],"disallowed"],[[65936,65947],"valid",[],"NV8"],[[65948,65951],"disallowed"],[[65952,65952],"valid",[],"NV8"],[[65953,65999],"disallowed"],[[66000,66044],"valid",[],"NV8"],[[66045,66045],"valid"],[[66046,66175],"disallowed"],[[66176,66204],"valid"],[[66205,66207],"disallowed"],[[66208,66256],"valid"],[[66257,66271],"disallowed"],[[66272,66272],"valid"],[[66273,66299],"valid",[],"NV8"],[[66300,66303],"disallowed"],[[66304,66334],"valid"],[[66335,66335],"valid"],[[66336,66339],"valid",[],"NV8"],[[66340,66351],"disallowed"],[[66352,66368],"valid"],[[66369,66369],"valid",[],"NV8"],[[66370,66377],"valid"],[[66378,66378],"valid",[],"NV8"],[[66379,66383],"disallowed"],[[66384,66426],"valid"],[[66427,66431],"disallowed"],[[66432,66461],"valid"],[[66462,66462],"disallowed"],[[66463,66463],"valid",[],"NV8"],[[66464,66499],"valid"],[[66500,66503],"disallowed"],[[66504,66511],"valid"],[[66512,66517],"valid",[],"NV8"],[[66518,66559],"disallowed"],[[66560,66560],"mapped",[66600]],[[66561,66561],"mapped",[66601]],[[66562,66562],"mapped",[66602]],[[66563,66563],"mapped",[66603]],[[66564,66564],"mapped",[66604]],[[66565,66565],"mapped",[66605]],[[66566,66566],"mapped",[66606]],[[66567,66567],"mapped",[66607]],[[66568,66568],"mapped",[66608]],[[66569,66569],"mapped",[66609]],[[66570,66570],"mapped",[66610]],[[66571,66571],"mapped",[66611]],[[66572,66572],"mapped",[66612]],[[66573,66573],"mapped",[66613]],[[66574,66574],"mapped",[66614]],[[66575,66575],"mapped",[66615]],[[66576,66576],"mapped",[66616]],[[66577,66577],"mapped",[66617]],[[66578,66578],"mapped",[66618]],[[66579,66579],"mapped",[66619]],[[66580,66580],"mapped",[66620]],[[66581,66581],"mapped",[66621]],[[66582,66582],"mapped",[66622]],[[66583,66583],"mapped",[66623]],[[66584,66584],"mapped",[66624]],[[66585,66585],"mapped",[66625]],[[66586,66586],"mapped",[66626]],[[66587,66587],"mapped",[66627]],[[66588,66588],"mapped",[66628]],[[66589,66589],"mapped",[66629]],[[66590,66590],"mapped",[66630]],[[66591,66591],"mapped",[66631]],[[66592,66592],"mapped",[66632]],[[66593,66593],"mapped",[66633]],[[66594,66594],"mapped",[66634]],[[66595,66595],"mapped",[66635]],[[66596,66596],"mapped",[66636]],[[66597,66597],"mapped",[66637]],[[66598,66598],"mapped",[66638]],[[66599,66599],"mapped",[66639]],[[66600,66637],"valid"],[[66638,66717],"valid"],[[66718,66719],"disallowed"],[[66720,66729],"valid"],[[66730,66815],"disallowed"],[[66816,66855],"valid"],[[66856,66863],"disallowed"],[[66864,66915],"valid"],[[66916,66926],"disallowed"],[[66927,66927],"valid",[],"NV8"],[[66928,67071],"disallowed"],[[67072,67382],"valid"],[[67383,67391],"disallowed"],[[67392,67413],"valid"],[[67414,67423],"disallowed"],[[67424,67431],"valid"],[[67432,67583],"disallowed"],[[67584,67589],"valid"],[[67590,67591],"disallowed"],[[67592,67592],"valid"],[[67593,67593],"disallowed"],[[67594,67637],"valid"],[[67638,67638],"disallowed"],[[67639,67640],"valid"],[[67641,67643],"disallowed"],[[67644,67644],"valid"],[[67645,67646],"disallowed"],[[67647,67647],"valid"],[[67648,67669],"valid"],[[67670,67670],"disallowed"],[[67671,67679],"valid",[],"NV8"],[[67680,67702],"valid"],[[67703,67711],"valid",[],"NV8"],[[67712,67742],"valid"],[[67743,67750],"disallowed"],[[67751,67759],"valid",[],"NV8"],[[67760,67807],"disallowed"],[[67808,67826],"valid"],[[67827,67827],"disallowed"],[[67828,67829],"valid"],[[67830,67834],"disallowed"],[[67835,67839],"valid",[],"NV8"],[[67840,67861],"valid"],[[67862,67865],"valid",[],"NV8"],[[67866,67867],"valid",[],"NV8"],[[67868,67870],"disallowed"],[[67871,67871],"valid",[],"NV8"],[[67872,67897],"valid"],[[67898,67902],"disallowed"],[[67903,67903],"valid",[],"NV8"],[[67904,67967],"disallowed"],[[67968,68023],"valid"],[[68024,68027],"disallowed"],[[68028,68029],"valid",[],"NV8"],[[68030,68031],"valid"],[[68032,68047],"valid",[],"NV8"],[[68048,68049],"disallowed"],[[68050,68095],"valid",[],"NV8"],[[68096,68099],"valid"],[[68100,68100],"disallowed"],[[68101,68102],"valid"],[[68103,68107],"disallowed"],[[68108,68115],"valid"],[[68116,68116],"disallowed"],[[68117,68119],"valid"],[[68120,68120],"disallowed"],[[68121,68147],"valid"],[[68148,68151],"disallowed"],[[68152,68154],"valid"],[[68155,68158],"disallowed"],[[68159,68159],"valid"],[[68160,68167],"valid",[],"NV8"],[[68168,68175],"disallowed"],[[68176,68184],"valid",[],"NV8"],[[68185,68191],"disallowed"],[[68192,68220],"valid"],[[68221,68223],"valid",[],"NV8"],[[68224,68252],"valid"],[[68253,68255],"valid",[],"NV8"],[[68256,68287],"disallowed"],[[68288,68295],"valid"],[[68296,68296],"valid",[],"NV8"],[[68297,68326],"valid"],[[68327,68330],"disallowed"],[[68331,68342],"valid",[],"NV8"],[[68343,68351],"disallowed"],[[68352,68405],"valid"],[[68406,68408],"disallowed"],[[68409,68415],"valid",[],"NV8"],[[68416,68437],"valid"],[[68438,68439],"disallowed"],[[68440,68447],"valid",[],"NV8"],[[68448,68466],"valid"],[[68467,68471],"disallowed"],[[68472,68479],"valid",[],"NV8"],[[68480,68497],"valid"],[[68498,68504],"disallowed"],[[68505,68508],"valid",[],"NV8"],[[68509,68520],"disallowed"],[[68521,68527],"valid",[],"NV8"],[[68528,68607],"disallowed"],[[68608,68680],"valid"],[[68681,68735],"disallowed"],[[68736,68736],"mapped",[68800]],[[68737,68737],"mapped",[68801]],[[68738,68738],"mapped",[68802]],[[68739,68739],"mapped",[68803]],[[68740,68740],"mapped",[68804]],[[68741,68741],"mapped",[68805]],[[68742,68742],"mapped",[68806]],[[68743,68743],"mapped",[68807]],[[68744,68744],"mapped",[68808]],[[68745,68745],"mapped",[68809]],[[68746,68746],"mapped",[68810]],[[68747,68747],"mapped",[68811]],[[68748,68748],"mapped",[68812]],[[68749,68749],"mapped",[68813]],[[68750,68750],"mapped",[68814]],[[68751,68751],"mapped",[68815]],[[68752,68752],"mapped",[68816]],[[68753,68753],"mapped",[68817]],[[68754,68754],"mapped",[68818]],[[68755,68755],"mapped",[68819]],[[68756,68756],"mapped",[68820]],[[68757,68757],"mapped",[68821]],[[68758,68758],"mapped",[68822]],[[68759,68759],"mapped",[68823]],[[68760,68760],"mapped",[68824]],[[68761,68761],"mapped",[68825]],[[68762,68762],"mapped",[68826]],[[68763,68763],"mapped",[68827]],[[68764,68764],"mapped",[68828]],[[68765,68765],"mapped",[68829]],[[68766,68766],"mapped",[68830]],[[68767,68767],"mapped",[68831]],[[68768,68768],"mapped",[68832]],[[68769,68769],"mapped",[68833]],[[68770,68770],"mapped",[68834]],[[68771,68771],"mapped",[68835]],[[68772,68772],"mapped",[68836]],[[68773,68773],"mapped",[68837]],[[68774,68774],"mapped",[68838]],[[68775,68775],"mapped",[68839]],[[68776,68776],"mapped",[68840]],[[68777,68777],"mapped",[68841]],[[68778,68778],"mapped",[68842]],[[68779,68779],"mapped",[68843]],[[68780,68780],"mapped",[68844]],[[68781,68781],"mapped",[68845]],[[68782,68782],"mapped",[68846]],[[68783,68783],"mapped",[68847]],[[68784,68784],"mapped",[68848]],[[68785,68785],"mapped",[68849]],[[68786,68786],"mapped",[68850]],[[68787,68799],"disallowed"],[[68800,68850],"valid"],[[68851,68857],"disallowed"],[[68858,68863],"valid",[],"NV8"],[[68864,69215],"disallowed"],[[69216,69246],"valid",[],"NV8"],[[69247,69631],"disallowed"],[[69632,69702],"valid"],[[69703,69709],"valid",[],"NV8"],[[69710,69713],"disallowed"],[[69714,69733],"valid",[],"NV8"],[[69734,69743],"valid"],[[69744,69758],"disallowed"],[[69759,69759],"valid"],[[69760,69818],"valid"],[[69819,69820],"valid",[],"NV8"],[[69821,69821],"disallowed"],[[69822,69825],"valid",[],"NV8"],[[69826,69839],"disallowed"],[[69840,69864],"valid"],[[69865,69871],"disallowed"],[[69872,69881],"valid"],[[69882,69887],"disallowed"],[[69888,69940],"valid"],[[69941,69941],"disallowed"],[[69942,69951],"valid"],[[69952,69955],"valid",[],"NV8"],[[69956,69967],"disallowed"],[[69968,70003],"valid"],[[70004,70005],"valid",[],"NV8"],[[70006,70006],"valid"],[[70007,70015],"disallowed"],[[70016,70084],"valid"],[[70085,70088],"valid",[],"NV8"],[[70089,70089],"valid",[],"NV8"],[[70090,70092],"valid"],[[70093,70093],"valid",[],"NV8"],[[70094,70095],"disallowed"],[[70096,70105],"valid"],[[70106,70106],"valid"],[[70107,70107],"valid",[],"NV8"],[[70108,70108],"valid"],[[70109,70111],"valid",[],"NV8"],[[70112,70112],"disallowed"],[[70113,70132],"valid",[],"NV8"],[[70133,70143],"disallowed"],[[70144,70161],"valid"],[[70162,70162],"disallowed"],[[70163,70199],"valid"],[[70200,70205],"valid",[],"NV8"],[[70206,70271],"disallowed"],[[70272,70278],"valid"],[[70279,70279],"disallowed"],[[70280,70280],"valid"],[[70281,70281],"disallowed"],[[70282,70285],"valid"],[[70286,70286],"disallowed"],[[70287,70301],"valid"],[[70302,70302],"disallowed"],[[70303,70312],"valid"],[[70313,70313],"valid",[],"NV8"],[[70314,70319],"disallowed"],[[70320,70378],"valid"],[[70379,70383],"disallowed"],[[70384,70393],"valid"],[[70394,70399],"disallowed"],[[70400,70400],"valid"],[[70401,70403],"valid"],[[70404,70404],"disallowed"],[[70405,70412],"valid"],[[70413,70414],"disallowed"],[[70415,70416],"valid"],[[70417,70418],"disallowed"],[[70419,70440],"valid"],[[70441,70441],"disallowed"],[[70442,70448],"valid"],[[70449,70449],"disallowed"],[[70450,70451],"valid"],[[70452,70452],"disallowed"],[[70453,70457],"valid"],[[70458,70459],"disallowed"],[[70460,70468],"valid"],[[70469,70470],"disallowed"],[[70471,70472],"valid"],[[70473,70474],"disallowed"],[[70475,70477],"valid"],[[70478,70479],"disallowed"],[[70480,70480],"valid"],[[70481,70486],"disallowed"],[[70487,70487],"valid"],[[70488,70492],"disallowed"],[[70493,70499],"valid"],[[70500,70501],"disallowed"],[[70502,70508],"valid"],[[70509,70511],"disallowed"],[[70512,70516],"valid"],[[70517,70783],"disallowed"],[[70784,70853],"valid"],[[70854,70854],"valid",[],"NV8"],[[70855,70855],"valid"],[[70856,70863],"disallowed"],[[70864,70873],"valid"],[[70874,71039],"disallowed"],[[71040,71093],"valid"],[[71094,71095],"disallowed"],[[71096,71104],"valid"],[[71105,71113],"valid",[],"NV8"],[[71114,71127],"valid",[],"NV8"],[[71128,71133],"valid"],[[71134,71167],"disallowed"],[[71168,71232],"valid"],[[71233,71235],"valid",[],"NV8"],[[71236,71236],"valid"],[[71237,71247],"disallowed"],[[71248,71257],"valid"],[[71258,71295],"disallowed"],[[71296,71351],"valid"],[[71352,71359],"disallowed"],[[71360,71369],"valid"],[[71370,71423],"disallowed"],[[71424,71449],"valid"],[[71450,71452],"disallowed"],[[71453,71467],"valid"],[[71468,71471],"disallowed"],[[71472,71481],"valid"],[[71482,71487],"valid",[],"NV8"],[[71488,71839],"disallowed"],[[71840,71840],"mapped",[71872]],[[71841,71841],"mapped",[71873]],[[71842,71842],"mapped",[71874]],[[71843,71843],"mapped",[71875]],[[71844,71844],"mapped",[71876]],[[71845,71845],"mapped",[71877]],[[71846,71846],"mapped",[71878]],[[71847,71847],"mapped",[71879]],[[71848,71848],"mapped",[71880]],[[71849,71849],"mapped",[71881]],[[71850,71850],"mapped",[71882]],[[71851,71851],"mapped",[71883]],[[71852,71852],"mapped",[71884]],[[71853,71853],"mapped",[71885]],[[71854,71854],"mapped",[71886]],[[71855,71855],"mapped",[71887]],[[71856,71856],"mapped",[71888]],[[71857,71857],"mapped",[71889]],[[71858,71858],"mapped",[71890]],[[71859,71859],"mapped",[71891]],[[71860,71860],"mapped",[71892]],[[71861,71861],"mapped",[71893]],[[71862,71862],"mapped",[71894]],[[71863,71863],"mapped",[71895]],[[71864,71864],"mapped",[71896]],[[71865,71865],"mapped",[71897]],[[71866,71866],"mapped",[71898]],[[71867,71867],"mapped",[71899]],[[71868,71868],"mapped",[71900]],[[71869,71869],"mapped",[71901]],[[71870,71870],"mapped",[71902]],[[71871,71871],"mapped",[71903]],[[71872,71913],"valid"],[[71914,71922],"valid",[],"NV8"],[[71923,71934],"disallowed"],[[71935,71935],"valid"],[[71936,72383],"disallowed"],[[72384,72440],"valid"],[[72441,73727],"disallowed"],[[73728,74606],"valid"],[[74607,74648],"valid"],[[74649,74649],"valid"],[[74650,74751],"disallowed"],[[74752,74850],"valid",[],"NV8"],[[74851,74862],"valid",[],"NV8"],[[74863,74863],"disallowed"],[[74864,74867],"valid",[],"NV8"],[[74868,74868],"valid",[],"NV8"],[[74869,74879],"disallowed"],[[74880,75075],"valid"],[[75076,77823],"disallowed"],[[77824,78894],"valid"],[[78895,82943],"disallowed"],[[82944,83526],"valid"],[[83527,92159],"disallowed"],[[92160,92728],"valid"],[[92729,92735],"disallowed"],[[92736,92766],"valid"],[[92767,92767],"disallowed"],[[92768,92777],"valid"],[[92778,92781],"disallowed"],[[92782,92783],"valid",[],"NV8"],[[92784,92879],"disallowed"],[[92880,92909],"valid"],[[92910,92911],"disallowed"],[[92912,92916],"valid"],[[92917,92917],"valid",[],"NV8"],[[92918,92927],"disallowed"],[[92928,92982],"valid"],[[92983,92991],"valid",[],"NV8"],[[92992,92995],"valid"],[[92996,92997],"valid",[],"NV8"],[[92998,93007],"disallowed"],[[93008,93017],"valid"],[[93018,93018],"disallowed"],[[93019,93025],"valid",[],"NV8"],[[93026,93026],"disallowed"],[[93027,93047],"valid"],[[93048,93052],"disallowed"],[[93053,93071],"valid"],[[93072,93951],"disallowed"],[[93952,94020],"valid"],[[94021,94031],"disallowed"],[[94032,94078],"valid"],[[94079,94094],"disallowed"],[[94095,94111],"valid"],[[94112,110591],"disallowed"],[[110592,110593],"valid"],[[110594,113663],"disallowed"],[[113664,113770],"valid"],[[113771,113775],"disallowed"],[[113776,113788],"valid"],[[113789,113791],"disallowed"],[[113792,113800],"valid"],[[113801,113807],"disallowed"],[[113808,113817],"valid"],[[113818,113819],"disallowed"],[[113820,113820],"valid",[],"NV8"],[[113821,113822],"valid"],[[113823,113823],"valid",[],"NV8"],[[113824,113827],"ignored"],[[113828,118783],"disallowed"],[[118784,119029],"valid",[],"NV8"],[[119030,119039],"disallowed"],[[119040,119078],"valid",[],"NV8"],[[119079,119080],"disallowed"],[[119081,119081],"valid",[],"NV8"],[[119082,119133],"valid",[],"NV8"],[[119134,119134],"mapped",[119127,119141]],[[119135,119135],"mapped",[119128,119141]],[[119136,119136],"mapped",[119128,119141,119150]],[[119137,119137],"mapped",[119128,119141,119151]],[[119138,119138],"mapped",[119128,119141,119152]],[[119139,119139],"mapped",[119128,119141,119153]],[[119140,119140],"mapped",[119128,119141,119154]],[[119141,119154],"valid",[],"NV8"],[[119155,119162],"disallowed"],[[119163,119226],"valid",[],"NV8"],[[119227,119227],"mapped",[119225,119141]],[[119228,119228],"mapped",[119226,119141]],[[119229,119229],"mapped",[119225,119141,119150]],[[119230,119230],"mapped",[119226,119141,119150]],[[119231,119231],"mapped",[119225,119141,119151]],[[119232,119232],"mapped",[119226,119141,119151]],[[119233,119261],"valid",[],"NV8"],[[119262,119272],"valid",[],"NV8"],[[119273,119295],"disallowed"],[[119296,119365],"valid",[],"NV8"],[[119366,119551],"disallowed"],[[119552,119638],"valid",[],"NV8"],[[119639,119647],"disallowed"],[[119648,119665],"valid",[],"NV8"],[[119666,119807],"disallowed"],[[119808,119808],"mapped",[97]],[[119809,119809],"mapped",[98]],[[119810,119810],"mapped",[99]],[[119811,119811],"mapped",[100]],[[119812,119812],"mapped",[101]],[[119813,119813],"mapped",[102]],[[119814,119814],"mapped",[103]],[[119815,119815],"mapped",[104]],[[119816,119816],"mapped",[105]],[[119817,119817],"mapped",[106]],[[119818,119818],"mapped",[107]],[[119819,119819],"mapped",[108]],[[119820,119820],"mapped",[109]],[[119821,119821],"mapped",[110]],[[119822,119822],"mapped",[111]],[[119823,119823],"mapped",[112]],[[119824,119824],"mapped",[113]],[[119825,119825],"mapped",[114]],[[119826,119826],"mapped",[115]],[[119827,119827],"mapped",[116]],[[119828,119828],"mapped",[117]],[[119829,119829],"mapped",[118]],[[119830,119830],"mapped",[119]],[[119831,119831],"mapped",[120]],[[119832,119832],"mapped",[121]],[[119833,119833],"mapped",[122]],[[119834,119834],"mapped",[97]],[[119835,119835],"mapped",[98]],[[119836,119836],"mapped",[99]],[[119837,119837],"mapped",[100]],[[119838,119838],"mapped",[101]],[[119839,119839],"mapped",[102]],[[119840,119840],"mapped",[103]],[[119841,119841],"mapped",[104]],[[119842,119842],"mapped",[105]],[[119843,119843],"mapped",[106]],[[119844,119844],"mapped",[107]],[[119845,119845],"mapped",[108]],[[119846,119846],"mapped",[109]],[[119847,119847],"mapped",[110]],[[119848,119848],"mapped",[111]],[[119849,119849],"mapped",[112]],[[119850,119850],"mapped",[113]],[[119851,119851],"mapped",[114]],[[119852,119852],"mapped",[115]],[[119853,119853],"mapped",[116]],[[119854,119854],"mapped",[117]],[[119855,119855],"mapped",[118]],[[119856,119856],"mapped",[119]],[[119857,119857],"mapped",[120]],[[119858,119858],"mapped",[121]],[[119859,119859],"mapped",[122]],[[119860,119860],"mapped",[97]],[[119861,119861],"mapped",[98]],[[119862,119862],"mapped",[99]],[[119863,119863],"mapped",[100]],[[119864,119864],"mapped",[101]],[[119865,119865],"mapped",[102]],[[119866,119866],"mapped",[103]],[[119867,119867],"mapped",[104]],[[119868,119868],"mapped",[105]],[[119869,119869],"mapped",[106]],[[119870,119870],"mapped",[107]],[[119871,119871],"mapped",[108]],[[119872,119872],"mapped",[109]],[[119873,119873],"mapped",[110]],[[119874,119874],"mapped",[111]],[[119875,119875],"mapped",[112]],[[119876,119876],"mapped",[113]],[[119877,119877],"mapped",[114]],[[119878,119878],"mapped",[115]],[[119879,119879],"mapped",[116]],[[119880,119880],"mapped",[117]],[[119881,119881],"mapped",[118]],[[119882,119882],"mapped",[119]],[[119883,119883],"mapped",[120]],[[119884,119884],"mapped",[121]],[[119885,119885],"mapped",[122]],[[119886,119886],"mapped",[97]],[[119887,119887],"mapped",[98]],[[119888,119888],"mapped",[99]],[[119889,119889],"mapped",[100]],[[119890,119890],"mapped",[101]],[[119891,119891],"mapped",[102]],[[119892,119892],"mapped",[103]],[[119893,119893],"disallowed"],[[119894,119894],"mapped",[105]],[[119895,119895],"mapped",[106]],[[119896,119896],"mapped",[107]],[[119897,119897],"mapped",[108]],[[119898,119898],"mapped",[109]],[[119899,119899],"mapped",[110]],[[119900,119900],"mapped",[111]],[[119901,119901],"mapped",[112]],[[119902,119902],"mapped",[113]],[[119903,119903],"mapped",[114]],[[119904,119904],"mapped",[115]],[[119905,119905],"mapped",[116]],[[119906,119906],"mapped",[117]],[[119907,119907],"mapped",[118]],[[119908,119908],"mapped",[119]],[[119909,119909],"mapped",[120]],[[119910,119910],"mapped",[121]],[[119911,119911],"mapped",[122]],[[119912,119912],"mapped",[97]],[[119913,119913],"mapped",[98]],[[119914,119914],"mapped",[99]],[[119915,119915],"mapped",[100]],[[119916,119916],"mapped",[101]],[[119917,119917],"mapped",[102]],[[119918,119918],"mapped",[103]],[[119919,119919],"mapped",[104]],[[119920,119920],"mapped",[105]],[[119921,119921],"mapped",[106]],[[119922,119922],"mapped",[107]],[[119923,119923],"mapped",[108]],[[119924,119924],"mapped",[109]],[[119925,119925],"mapped",[110]],[[119926,119926],"mapped",[111]],[[119927,119927],"mapped",[112]],[[119928,119928],"mapped",[113]],[[119929,119929],"mapped",[114]],[[119930,119930],"mapped",[115]],[[119931,119931],"mapped",[116]],[[119932,119932],"mapped",[117]],[[119933,119933],"mapped",[118]],[[119934,119934],"mapped",[119]],[[119935,119935],"mapped",[120]],[[119936,119936],"mapped",[121]],[[119937,119937],"mapped",[122]],[[119938,119938],"mapped",[97]],[[119939,119939],"mapped",[98]],[[119940,119940],"mapped",[99]],[[119941,119941],"mapped",[100]],[[119942,119942],"mapped",[101]],[[119943,119943],"mapped",[102]],[[119944,119944],"mapped",[103]],[[119945,119945],"mapped",[104]],[[119946,119946],"mapped",[105]],[[119947,119947],"mapped",[106]],[[119948,119948],"mapped",[107]],[[119949,119949],"mapped",[108]],[[119950,119950],"mapped",[109]],[[119951,119951],"mapped",[110]],[[119952,119952],"mapped",[111]],[[119953,119953],"mapped",[112]],[[119954,119954],"mapped",[113]],[[119955,119955],"mapped",[114]],[[119956,119956],"mapped",[115]],[[119957,119957],"mapped",[116]],[[119958,119958],"mapped",[117]],[[119959,119959],"mapped",[118]],[[119960,119960],"mapped",[119]],[[119961,119961],"mapped",[120]],[[119962,119962],"mapped",[121]],[[119963,119963],"mapped",[122]],[[119964,119964],"mapped",[97]],[[119965,119965],"disallowed"],[[119966,119966],"mapped",[99]],[[119967,119967],"mapped",[100]],[[119968,119969],"disallowed"],[[119970,119970],"mapped",[103]],[[119971,119972],"disallowed"],[[119973,119973],"mapped",[106]],[[119974,119974],"mapped",[107]],[[119975,119976],"disallowed"],[[119977,119977],"mapped",[110]],[[119978,119978],"mapped",[111]],[[119979,119979],"mapped",[112]],[[119980,119980],"mapped",[113]],[[119981,119981],"disallowed"],[[119982,119982],"mapped",[115]],[[119983,119983],"mapped",[116]],[[119984,119984],"mapped",[117]],[[119985,119985],"mapped",[118]],[[119986,119986],"mapped",[119]],[[119987,119987],"mapped",[120]],[[119988,119988],"mapped",[121]],[[119989,119989],"mapped",[122]],[[119990,119990],"mapped",[97]],[[119991,119991],"mapped",[98]],[[119992,119992],"mapped",[99]],[[119993,119993],"mapped",[100]],[[119994,119994],"disallowed"],[[119995,119995],"mapped",[102]],[[119996,119996],"disallowed"],[[119997,119997],"mapped",[104]],[[119998,119998],"mapped",[105]],[[119999,119999],"mapped",[106]],[[120000,120000],"mapped",[107]],[[120001,120001],"mapped",[108]],[[120002,120002],"mapped",[109]],[[120003,120003],"mapped",[110]],[[120004,120004],"disallowed"],[[120005,120005],"mapped",[112]],[[120006,120006],"mapped",[113]],[[120007,120007],"mapped",[114]],[[120008,120008],"mapped",[115]],[[120009,120009],"mapped",[116]],[[120010,120010],"mapped",[117]],[[120011,120011],"mapped",[118]],[[120012,120012],"mapped",[119]],[[120013,120013],"mapped",[120]],[[120014,120014],"mapped",[121]],[[120015,120015],"mapped",[122]],[[120016,120016],"mapped",[97]],[[120017,120017],"mapped",[98]],[[120018,120018],"mapped",[99]],[[120019,120019],"mapped",[100]],[[120020,120020],"mapped",[101]],[[120021,120021],"mapped",[102]],[[120022,120022],"mapped",[103]],[[120023,120023],"mapped",[104]],[[120024,120024],"mapped",[105]],[[120025,120025],"mapped",[106]],[[120026,120026],"mapped",[107]],[[120027,120027],"mapped",[108]],[[120028,120028],"mapped",[109]],[[120029,120029],"mapped",[110]],[[120030,120030],"mapped",[111]],[[120031,120031],"mapped",[112]],[[120032,120032],"mapped",[113]],[[120033,120033],"mapped",[114]],[[120034,120034],"mapped",[115]],[[120035,120035],"mapped",[116]],[[120036,120036],"mapped",[117]],[[120037,120037],"mapped",[118]],[[120038,120038],"mapped",[119]],[[120039,120039],"mapped",[120]],[[120040,120040],"mapped",[121]],[[120041,120041],"mapped",[122]],[[120042,120042],"mapped",[97]],[[120043,120043],"mapped",[98]],[[120044,120044],"mapped",[99]],[[120045,120045],"mapped",[100]],[[120046,120046],"mapped",[101]],[[120047,120047],"mapped",[102]],[[120048,120048],"mapped",[103]],[[120049,120049],"mapped",[104]],[[120050,120050],"mapped",[105]],[[120051,120051],"mapped",[106]],[[120052,120052],"mapped",[107]],[[120053,120053],"mapped",[108]],[[120054,120054],"mapped",[109]],[[120055,120055],"mapped",[110]],[[120056,120056],"mapped",[111]],[[120057,120057],"mapped",[112]],[[120058,120058],"mapped",[113]],[[120059,120059],"mapped",[114]],[[120060,120060],"mapped",[115]],[[120061,120061],"mapped",[116]],[[120062,120062],"mapped",[117]],[[120063,120063],"mapped",[118]],[[120064,120064],"mapped",[119]],[[120065,120065],"mapped",[120]],[[120066,120066],"mapped",[121]],[[120067,120067],"mapped",[122]],[[120068,120068],"mapped",[97]],[[120069,120069],"mapped",[98]],[[120070,120070],"disallowed"],[[120071,120071],"mapped",[100]],[[120072,120072],"mapped",[101]],[[120073,120073],"mapped",[102]],[[120074,120074],"mapped",[103]],[[120075,120076],"disallowed"],[[120077,120077],"mapped",[106]],[[120078,120078],"mapped",[107]],[[120079,120079],"mapped",[108]],[[120080,120080],"mapped",[109]],[[120081,120081],"mapped",[110]],[[120082,120082],"mapped",[111]],[[120083,120083],"mapped",[112]],[[120084,120084],"mapped",[113]],[[120085,120085],"disallowed"],[[120086,120086],"mapped",[115]],[[120087,120087],"mapped",[116]],[[120088,120088],"mapped",[117]],[[120089,120089],"mapped",[118]],[[120090,120090],"mapped",[119]],[[120091,120091],"mapped",[120]],[[120092,120092],"mapped",[121]],[[120093,120093],"disallowed"],[[120094,120094],"mapped",[97]],[[120095,120095],"mapped",[98]],[[120096,120096],"mapped",[99]],[[120097,120097],"mapped",[100]],[[120098,120098],"mapped",[101]],[[120099,120099],"mapped",[102]],[[120100,120100],"mapped",[103]],[[120101,120101],"mapped",[104]],[[120102,120102],"mapped",[105]],[[120103,120103],"mapped",[106]],[[120104,120104],"mapped",[107]],[[120105,120105],"mapped",[108]],[[120106,120106],"mapped",[109]],[[120107,120107],"mapped",[110]],[[120108,120108],"mapped",[111]],[[120109,120109],"mapped",[112]],[[120110,120110],"mapped",[113]],[[120111,120111],"mapped",[114]],[[120112,120112],"mapped",[115]],[[120113,120113],"mapped",[116]],[[120114,120114],"mapped",[117]],[[120115,120115],"mapped",[118]],[[120116,120116],"mapped",[119]],[[120117,120117],"mapped",[120]],[[120118,120118],"mapped",[121]],[[120119,120119],"mapped",[122]],[[120120,120120],"mapped",[97]],[[120121,120121],"mapped",[98]],[[120122,120122],"disallowed"],[[120123,120123],"mapped",[100]],[[120124,120124],"mapped",[101]],[[120125,120125],"mapped",[102]],[[120126,120126],"mapped",[103]],[[120127,120127],"disallowed"],[[120128,120128],"mapped",[105]],[[120129,120129],"mapped",[106]],[[120130,120130],"mapped",[107]],[[120131,120131],"mapped",[108]],[[120132,120132],"mapped",[109]],[[120133,120133],"disallowed"],[[120134,120134],"mapped",[111]],[[120135,120137],"disallowed"],[[120138,120138],"mapped",[115]],[[120139,120139],"mapped",[116]],[[120140,120140],"mapped",[117]],[[120141,120141],"mapped",[118]],[[120142,120142],"mapped",[119]],[[120143,120143],"mapped",[120]],[[120144,120144],"mapped",[121]],[[120145,120145],"disallowed"],[[120146,120146],"mapped",[97]],[[120147,120147],"mapped",[98]],[[120148,120148],"mapped",[99]],[[120149,120149],"mapped",[100]],[[120150,120150],"mapped",[101]],[[120151,120151],"mapped",[102]],[[120152,120152],"mapped",[103]],[[120153,120153],"mapped",[104]],[[120154,120154],"mapped",[105]],[[120155,120155],"mapped",[106]],[[120156,120156],"mapped",[107]],[[120157,120157],"mapped",[108]],[[120158,120158],"mapped",[109]],[[120159,120159],"mapped",[110]],[[120160,120160],"mapped",[111]],[[120161,120161],"mapped",[112]],[[120162,120162],"mapped",[113]],[[120163,120163],"mapped",[114]],[[120164,120164],"mapped",[115]],[[120165,120165],"mapped",[116]],[[120166,120166],"mapped",[117]],[[120167,120167],"mapped",[118]],[[120168,120168],"mapped",[119]],[[120169,120169],"mapped",[120]],[[120170,120170],"mapped",[121]],[[120171,120171],"mapped",[122]],[[120172,120172],"mapped",[97]],[[120173,120173],"mapped",[98]],[[120174,120174],"mapped",[99]],[[120175,120175],"mapped",[100]],[[120176,120176],"mapped",[101]],[[120177,120177],"mapped",[102]],[[120178,120178],"mapped",[103]],[[120179,120179],"mapped",[104]],[[120180,120180],"mapped",[105]],[[120181,120181],"mapped",[106]],[[120182,120182],"mapped",[107]],[[120183,120183],"mapped",[108]],[[120184,120184],"mapped",[109]],[[120185,120185],"mapped",[110]],[[120186,120186],"mapped",[111]],[[120187,120187],"mapped",[112]],[[120188,120188],"mapped",[113]],[[120189,120189],"mapped",[114]],[[120190,120190],"mapped",[115]],[[120191,120191],"mapped",[116]],[[120192,120192],"mapped",[117]],[[120193,120193],"mapped",[118]],[[120194,120194],"mapped",[119]],[[120195,120195],"mapped",[120]],[[120196,120196],"mapped",[121]],[[120197,120197],"mapped",[122]],[[120198,120198],"mapped",[97]],[[120199,120199],"mapped",[98]],[[120200,120200],"mapped",[99]],[[120201,120201],"mapped",[100]],[[120202,120202],"mapped",[101]],[[120203,120203],"mapped",[102]],[[120204,120204],"mapped",[103]],[[120205,120205],"mapped",[104]],[[120206,120206],"mapped",[105]],[[120207,120207],"mapped",[106]],[[120208,120208],"mapped",[107]],[[120209,120209],"mapped",[108]],[[120210,120210],"mapped",[109]],[[120211,120211],"mapped",[110]],[[120212,120212],"mapped",[111]],[[120213,120213],"mapped",[112]],[[120214,120214],"mapped",[113]],[[120215,120215],"mapped",[114]],[[120216,120216],"mapped",[115]],[[120217,120217],"mapped",[116]],[[120218,120218],"mapped",[117]],[[120219,120219],"mapped",[118]],[[120220,120220],"mapped",[119]],[[120221,120221],"mapped",[120]],[[120222,120222],"mapped",[121]],[[120223,120223],"mapped",[122]],[[120224,120224],"mapped",[97]],[[120225,120225],"mapped",[98]],[[120226,120226],"mapped",[99]],[[120227,120227],"mapped",[100]],[[120228,120228],"mapped",[101]],[[120229,120229],"mapped",[102]],[[120230,120230],"mapped",[103]],[[120231,120231],"mapped",[104]],[[120232,120232],"mapped",[105]],[[120233,120233],"mapped",[106]],[[120234,120234],"mapped",[107]],[[120235,120235],"mapped",[108]],[[120236,120236],"mapped",[109]],[[120237,120237],"mapped",[110]],[[120238,120238],"mapped",[111]],[[120239,120239],"mapped",[112]],[[120240,120240],"mapped",[113]],[[120241,120241],"mapped",[114]],[[120242,120242],"mapped",[115]],[[120243,120243],"mapped",[116]],[[120244,120244],"mapped",[117]],[[120245,120245],"mapped",[118]],[[120246,120246],"mapped",[119]],[[120247,120247],"mapped",[120]],[[120248,120248],"mapped",[121]],[[120249,120249],"mapped",[122]],[[120250,120250],"mapped",[97]],[[120251,120251],"mapped",[98]],[[120252,120252],"mapped",[99]],[[120253,120253],"mapped",[100]],[[120254,120254],"mapped",[101]],[[120255,120255],"mapped",[102]],[[120256,120256],"mapped",[103]],[[120257,120257],"mapped",[104]],[[120258,120258],"mapped",[105]],[[120259,120259],"mapped",[106]],[[120260,120260],"mapped",[107]],[[120261,120261],"mapped",[108]],[[120262,120262],"mapped",[109]],[[120263,120263],"mapped",[110]],[[120264,120264],"mapped",[111]],[[120265,120265],"mapped",[112]],[[120266,120266],"mapped",[113]],[[120267,120267],"mapped",[114]],[[120268,120268],"mapped",[115]],[[120269,120269],"mapped",[116]],[[120270,120270],"mapped",[117]],[[120271,120271],"mapped",[118]],[[120272,120272],"mapped",[119]],[[120273,120273],"mapped",[120]],[[120274,120274],"mapped",[121]],[[120275,120275],"mapped",[122]],[[120276,120276],"mapped",[97]],[[120277,120277],"mapped",[98]],[[120278,120278],"mapped",[99]],[[120279,120279],"mapped",[100]],[[120280,120280],"mapped",[101]],[[120281,120281],"mapped",[102]],[[120282,120282],"mapped",[103]],[[120283,120283],"mapped",[104]],[[120284,120284],"mapped",[105]],[[120285,120285],"mapped",[106]],[[120286,120286],"mapped",[107]],[[120287,120287],"mapped",[108]],[[120288,120288],"mapped",[109]],[[120289,120289],"mapped",[110]],[[120290,120290],"mapped",[111]],[[120291,120291],"mapped",[112]],[[120292,120292],"mapped",[113]],[[120293,120293],"mapped",[114]],[[120294,120294],"mapped",[115]],[[120295,120295],"mapped",[116]],[[120296,120296],"mapped",[117]],[[120297,120297],"mapped",[118]],[[120298,120298],"mapped",[119]],[[120299,120299],"mapped",[120]],[[120300,120300],"mapped",[121]],[[120301,120301],"mapped",[122]],[[120302,120302],"mapped",[97]],[[120303,120303],"mapped",[98]],[[120304,120304],"mapped",[99]],[[120305,120305],"mapped",[100]],[[120306,120306],"mapped",[101]],[[120307,120307],"mapped",[102]],[[120308,120308],"mapped",[103]],[[120309,120309],"mapped",[104]],[[120310,120310],"mapped",[105]],[[120311,120311],"mapped",[106]],[[120312,120312],"mapped",[107]],[[120313,120313],"mapped",[108]],[[120314,120314],"mapped",[109]],[[120315,120315],"mapped",[110]],[[120316,120316],"mapped",[111]],[[120317,120317],"mapped",[112]],[[120318,120318],"mapped",[113]],[[120319,120319],"mapped",[114]],[[120320,120320],"mapped",[115]],[[120321,120321],"mapped",[116]],[[120322,120322],"mapped",[117]],[[120323,120323],"mapped",[118]],[[120324,120324],"mapped",[119]],[[120325,120325],"mapped",[120]],[[120326,120326],"mapped",[121]],[[120327,120327],"mapped",[122]],[[120328,120328],"mapped",[97]],[[120329,120329],"mapped",[98]],[[120330,120330],"mapped",[99]],[[120331,120331],"mapped",[100]],[[120332,120332],"mapped",[101]],[[120333,120333],"mapped",[102]],[[120334,120334],"mapped",[103]],[[120335,120335],"mapped",[104]],[[120336,120336],"mapped",[105]],[[120337,120337],"mapped",[106]],[[120338,120338],"mapped",[107]],[[120339,120339],"mapped",[108]],[[120340,120340],"mapped",[109]],[[120341,120341],"mapped",[110]],[[120342,120342],"mapped",[111]],[[120343,120343],"mapped",[112]],[[120344,120344],"mapped",[113]],[[120345,120345],"mapped",[114]],[[120346,120346],"mapped",[115]],[[120347,120347],"mapped",[116]],[[120348,120348],"mapped",[117]],[[120349,120349],"mapped",[118]],[[120350,120350],"mapped",[119]],[[120351,120351],"mapped",[120]],[[120352,120352],"mapped",[121]],[[120353,120353],"mapped",[122]],[[120354,120354],"mapped",[97]],[[120355,120355],"mapped",[98]],[[120356,120356],"mapped",[99]],[[120357,120357],"mapped",[100]],[[120358,120358],"mapped",[101]],[[120359,120359],"mapped",[102]],[[120360,120360],"mapped",[103]],[[120361,120361],"mapped",[104]],[[120362,120362],"mapped",[105]],[[120363,120363],"mapped",[106]],[[120364,120364],"mapped",[107]],[[120365,120365],"mapped",[108]],[[120366,120366],"mapped",[109]],[[120367,120367],"mapped",[110]],[[120368,120368],"mapped",[111]],[[120369,120369],"mapped",[112]],[[120370,120370],"mapped",[113]],[[120371,120371],"mapped",[114]],[[120372,120372],"mapped",[115]],[[120373,120373],"mapped",[116]],[[120374,120374],"mapped",[117]],[[120375,120375],"mapped",[118]],[[120376,120376],"mapped",[119]],[[120377,120377],"mapped",[120]],[[120378,120378],"mapped",[121]],[[120379,120379],"mapped",[122]],[[120380,120380],"mapped",[97]],[[120381,120381],"mapped",[98]],[[120382,120382],"mapped",[99]],[[120383,120383],"mapped",[100]],[[120384,120384],"mapped",[101]],[[120385,120385],"mapped",[102]],[[120386,120386],"mapped",[103]],[[120387,120387],"mapped",[104]],[[120388,120388],"mapped",[105]],[[120389,120389],"mapped",[106]],[[120390,120390],"mapped",[107]],[[120391,120391],"mapped",[108]],[[120392,120392],"mapped",[109]],[[120393,120393],"mapped",[110]],[[120394,120394],"mapped",[111]],[[120395,120395],"mapped",[112]],[[120396,120396],"mapped",[113]],[[120397,120397],"mapped",[114]],[[120398,120398],"mapped",[115]],[[120399,120399],"mapped",[116]],[[120400,120400],"mapped",[117]],[[120401,120401],"mapped",[118]],[[120402,120402],"mapped",[119]],[[120403,120403],"mapped",[120]],[[120404,120404],"mapped",[121]],[[120405,120405],"mapped",[122]],[[120406,120406],"mapped",[97]],[[120407,120407],"mapped",[98]],[[120408,120408],"mapped",[99]],[[120409,120409],"mapped",[100]],[[120410,120410],"mapped",[101]],[[120411,120411],"mapped",[102]],[[120412,120412],"mapped",[103]],[[120413,120413],"mapped",[104]],[[120414,120414],"mapped",[105]],[[120415,120415],"mapped",[106]],[[120416,120416],"mapped",[107]],[[120417,120417],"mapped",[108]],[[120418,120418],"mapped",[109]],[[120419,120419],"mapped",[110]],[[120420,120420],"mapped",[111]],[[120421,120421],"mapped",[112]],[[120422,120422],"mapped",[113]],[[120423,120423],"mapped",[114]],[[120424,120424],"mapped",[115]],[[120425,120425],"mapped",[116]],[[120426,120426],"mapped",[117]],[[120427,120427],"mapped",[118]],[[120428,120428],"mapped",[119]],[[120429,120429],"mapped",[120]],[[120430,120430],"mapped",[121]],[[120431,120431],"mapped",[122]],[[120432,120432],"mapped",[97]],[[120433,120433],"mapped",[98]],[[120434,120434],"mapped",[99]],[[120435,120435],"mapped",[100]],[[120436,120436],"mapped",[101]],[[120437,120437],"mapped",[102]],[[120438,120438],"mapped",[103]],[[120439,120439],"mapped",[104]],[[120440,120440],"mapped",[105]],[[120441,120441],"mapped",[106]],[[120442,120442],"mapped",[107]],[[120443,120443],"mapped",[108]],[[120444,120444],"mapped",[109]],[[120445,120445],"mapped",[110]],[[120446,120446],"mapped",[111]],[[120447,120447],"mapped",[112]],[[120448,120448],"mapped",[113]],[[120449,120449],"mapped",[114]],[[120450,120450],"mapped",[115]],[[120451,120451],"mapped",[116]],[[120452,120452],"mapped",[117]],[[120453,120453],"mapped",[118]],[[120454,120454],"mapped",[119]],[[120455,120455],"mapped",[120]],[[120456,120456],"mapped",[121]],[[120457,120457],"mapped",[122]],[[120458,120458],"mapped",[97]],[[120459,120459],"mapped",[98]],[[120460,120460],"mapped",[99]],[[120461,120461],"mapped",[100]],[[120462,120462],"mapped",[101]],[[120463,120463],"mapped",[102]],[[120464,120464],"mapped",[103]],[[120465,120465],"mapped",[104]],[[120466,120466],"mapped",[105]],[[120467,120467],"mapped",[106]],[[120468,120468],"mapped",[107]],[[120469,120469],"mapped",[108]],[[120470,120470],"mapped",[109]],[[120471,120471],"mapped",[110]],[[120472,120472],"mapped",[111]],[[120473,120473],"mapped",[112]],[[120474,120474],"mapped",[113]],[[120475,120475],"mapped",[114]],[[120476,120476],"mapped",[115]],[[120477,120477],"mapped",[116]],[[120478,120478],"mapped",[117]],[[120479,120479],"mapped",[118]],[[120480,120480],"mapped",[119]],[[120481,120481],"mapped",[120]],[[120482,120482],"mapped",[121]],[[120483,120483],"mapped",[122]],[[120484,120484],"mapped",[305]],[[120485,120485],"mapped",[567]],[[120486,120487],"disallowed"],[[120488,120488],"mapped",[945]],[[120489,120489],"mapped",[946]],[[120490,120490],"mapped",[947]],[[120491,120491],"mapped",[948]],[[120492,120492],"mapped",[949]],[[120493,120493],"mapped",[950]],[[120494,120494],"mapped",[951]],[[120495,120495],"mapped",[952]],[[120496,120496],"mapped",[953]],[[120497,120497],"mapped",[954]],[[120498,120498],"mapped",[955]],[[120499,120499],"mapped",[956]],[[120500,120500],"mapped",[957]],[[120501,120501],"mapped",[958]],[[120502,120502],"mapped",[959]],[[120503,120503],"mapped",[960]],[[120504,120504],"mapped",[961]],[[120505,120505],"mapped",[952]],[[120506,120506],"mapped",[963]],[[120507,120507],"mapped",[964]],[[120508,120508],"mapped",[965]],[[120509,120509],"mapped",[966]],[[120510,120510],"mapped",[967]],[[120511,120511],"mapped",[968]],[[120512,120512],"mapped",[969]],[[120513,120513],"mapped",[8711]],[[120514,120514],"mapped",[945]],[[120515,120515],"mapped",[946]],[[120516,120516],"mapped",[947]],[[120517,120517],"mapped",[948]],[[120518,120518],"mapped",[949]],[[120519,120519],"mapped",[950]],[[120520,120520],"mapped",[951]],[[120521,120521],"mapped",[952]],[[120522,120522],"mapped",[953]],[[120523,120523],"mapped",[954]],[[120524,120524],"mapped",[955]],[[120525,120525],"mapped",[956]],[[120526,120526],"mapped",[957]],[[120527,120527],"mapped",[958]],[[120528,120528],"mapped",[959]],[[120529,120529],"mapped",[960]],[[120530,120530],"mapped",[961]],[[120531,120532],"mapped",[963]],[[120533,120533],"mapped",[964]],[[120534,120534],"mapped",[965]],[[120535,120535],"mapped",[966]],[[120536,120536],"mapped",[967]],[[120537,120537],"mapped",[968]],[[120538,120538],"mapped",[969]],[[120539,120539],"mapped",[8706]],[[120540,120540],"mapped",[949]],[[120541,120541],"mapped",[952]],[[120542,120542],"mapped",[954]],[[120543,120543],"mapped",[966]],[[120544,120544],"mapped",[961]],[[120545,120545],"mapped",[960]],[[120546,120546],"mapped",[945]],[[120547,120547],"mapped",[946]],[[120548,120548],"mapped",[947]],[[120549,120549],"mapped",[948]],[[120550,120550],"mapped",[949]],[[120551,120551],"mapped",[950]],[[120552,120552],"mapped",[951]],[[120553,120553],"mapped",[952]],[[120554,120554],"mapped",[953]],[[120555,120555],"mapped",[954]],[[120556,120556],"mapped",[955]],[[120557,120557],"mapped",[956]],[[120558,120558],"mapped",[957]],[[120559,120559],"mapped",[958]],[[120560,120560],"mapped",[959]],[[120561,120561],"mapped",[960]],[[120562,120562],"mapped",[961]],[[120563,120563],"mapped",[952]],[[120564,120564],"mapped",[963]],[[120565,120565],"mapped",[964]],[[120566,120566],"mapped",[965]],[[120567,120567],"mapped",[966]],[[120568,120568],"mapped",[967]],[[120569,120569],"mapped",[968]],[[120570,120570],"mapped",[969]],[[120571,120571],"mapped",[8711]],[[120572,120572],"mapped",[945]],[[120573,120573],"mapped",[946]],[[120574,120574],"mapped",[947]],[[120575,120575],"mapped",[948]],[[120576,120576],"mapped",[949]],[[120577,120577],"mapped",[950]],[[120578,120578],"mapped",[951]],[[120579,120579],"mapped",[952]],[[120580,120580],"mapped",[953]],[[120581,120581],"mapped",[954]],[[120582,120582],"mapped",[955]],[[120583,120583],"mapped",[956]],[[120584,120584],"mapped",[957]],[[120585,120585],"mapped",[958]],[[120586,120586],"mapped",[959]],[[120587,120587],"mapped",[960]],[[120588,120588],"mapped",[961]],[[120589,120590],"mapped",[963]],[[120591,120591],"mapped",[964]],[[120592,120592],"mapped",[965]],[[120593,120593],"mapped",[966]],[[120594,120594],"mapped",[967]],[[120595,120595],"mapped",[968]],[[120596,120596],"mapped",[969]],[[120597,120597],"mapped",[8706]],[[120598,120598],"mapped",[949]],[[120599,120599],"mapped",[952]],[[120600,120600],"mapped",[954]],[[120601,120601],"mapped",[966]],[[120602,120602],"mapped",[961]],[[120603,120603],"mapped",[960]],[[120604,120604],"mapped",[945]],[[120605,120605],"mapped",[946]],[[120606,120606],"mapped",[947]],[[120607,120607],"mapped",[948]],[[120608,120608],"mapped",[949]],[[120609,120609],"mapped",[950]],[[120610,120610],"mapped",[951]],[[120611,120611],"mapped",[952]],[[120612,120612],"mapped",[953]],[[120613,120613],"mapped",[954]],[[120614,120614],"mapped",[955]],[[120615,120615],"mapped",[956]],[[120616,120616],"mapped",[957]],[[120617,120617],"mapped",[958]],[[120618,120618],"mapped",[959]],[[120619,120619],"mapped",[960]],[[120620,120620],"mapped",[961]],[[120621,120621],"mapped",[952]],[[120622,120622],"mapped",[963]],[[120623,120623],"mapped",[964]],[[120624,120624],"mapped",[965]],[[120625,120625],"mapped",[966]],[[120626,120626],"mapped",[967]],[[120627,120627],"mapped",[968]],[[120628,120628],"mapped",[969]],[[120629,120629],"mapped",[8711]],[[120630,120630],"mapped",[945]],[[120631,120631],"mapped",[946]],[[120632,120632],"mapped",[947]],[[120633,120633],"mapped",[948]],[[120634,120634],"mapped",[949]],[[120635,120635],"mapped",[950]],[[120636,120636],"mapped",[951]],[[120637,120637],"mapped",[952]],[[120638,120638],"mapped",[953]],[[120639,120639],"mapped",[954]],[[120640,120640],"mapped",[955]],[[120641,120641],"mapped",[956]],[[120642,120642],"mapped",[957]],[[120643,120643],"mapped",[958]],[[120644,120644],"mapped",[959]],[[120645,120645],"mapped",[960]],[[120646,120646],"mapped",[961]],[[120647,120648],"mapped",[963]],[[120649,120649],"mapped",[964]],[[120650,120650],"mapped",[965]],[[120651,120651],"mapped",[966]],[[120652,120652],"mapped",[967]],[[120653,120653],"mapped",[968]],[[120654,120654],"mapped",[969]],[[120655,120655],"mapped",[8706]],[[120656,120656],"mapped",[949]],[[120657,120657],"mapped",[952]],[[120658,120658],"mapped",[954]],[[120659,120659],"mapped",[966]],[[120660,120660],"mapped",[961]],[[120661,120661],"mapped",[960]],[[120662,120662],"mapped",[945]],[[120663,120663],"mapped",[946]],[[120664,120664],"mapped",[947]],[[120665,120665],"mapped",[948]],[[120666,120666],"mapped",[949]],[[120667,120667],"mapped",[950]],[[120668,120668],"mapped",[951]],[[120669,120669],"mapped",[952]],[[120670,120670],"mapped",[953]],[[120671,120671],"mapped",[954]],[[120672,120672],"mapped",[955]],[[120673,120673],"mapped",[956]],[[120674,120674],"mapped",[957]],[[120675,120675],"mapped",[958]],[[120676,120676],"mapped",[959]],[[120677,120677],"mapped",[960]],[[120678,120678],"mapped",[961]],[[120679,120679],"mapped",[952]],[[120680,120680],"mapped",[963]],[[120681,120681],"mapped",[964]],[[120682,120682],"mapped",[965]],[[120683,120683],"mapped",[966]],[[120684,120684],"mapped",[967]],[[120685,120685],"mapped",[968]],[[120686,120686],"mapped",[969]],[[120687,120687],"mapped",[8711]],[[120688,120688],"mapped",[945]],[[120689,120689],"mapped",[946]],[[120690,120690],"mapped",[947]],[[120691,120691],"mapped",[948]],[[120692,120692],"mapped",[949]],[[120693,120693],"mapped",[950]],[[120694,120694],"mapped",[951]],[[120695,120695],"mapped",[952]],[[120696,120696],"mapped",[953]],[[120697,120697],"mapped",[954]],[[120698,120698],"mapped",[955]],[[120699,120699],"mapped",[956]],[[120700,120700],"mapped",[957]],[[120701,120701],"mapped",[958]],[[120702,120702],"mapped",[959]],[[120703,120703],"mapped",[960]],[[120704,120704],"mapped",[961]],[[120705,120706],"mapped",[963]],[[120707,120707],"mapped",[964]],[[120708,120708],"mapped",[965]],[[120709,120709],"mapped",[966]],[[120710,120710],"mapped",[967]],[[120711,120711],"mapped",[968]],[[120712,120712],"mapped",[969]],[[120713,120713],"mapped",[8706]],[[120714,120714],"mapped",[949]],[[120715,120715],"mapped",[952]],[[120716,120716],"mapped",[954]],[[120717,120717],"mapped",[966]],[[120718,120718],"mapped",[961]],[[120719,120719],"mapped",[960]],[[120720,120720],"mapped",[945]],[[120721,120721],"mapped",[946]],[[120722,120722],"mapped",[947]],[[120723,120723],"mapped",[948]],[[120724,120724],"mapped",[949]],[[120725,120725],"mapped",[950]],[[120726,120726],"mapped",[951]],[[120727,120727],"mapped",[952]],[[120728,120728],"mapped",[953]],[[120729,120729],"mapped",[954]],[[120730,120730],"mapped",[955]],[[120731,120731],"mapped",[956]],[[120732,120732],"mapped",[957]],[[120733,120733],"mapped",[958]],[[120734,120734],"mapped",[959]],[[120735,120735],"mapped",[960]],[[120736,120736],"mapped",[961]],[[120737,120737],"mapped",[952]],[[120738,120738],"mapped",[963]],[[120739,120739],"mapped",[964]],[[120740,120740],"mapped",[965]],[[120741,120741],"mapped",[966]],[[120742,120742],"mapped",[967]],[[120743,120743],"mapped",[968]],[[120744,120744],"mapped",[969]],[[120745,120745],"mapped",[8711]],[[120746,120746],"mapped",[945]],[[120747,120747],"mapped",[946]],[[120748,120748],"mapped",[947]],[[120749,120749],"mapped",[948]],[[120750,120750],"mapped",[949]],[[120751,120751],"mapped",[950]],[[120752,120752],"mapped",[951]],[[120753,120753],"mapped",[952]],[[120754,120754],"mapped",[953]],[[120755,120755],"mapped",[954]],[[120756,120756],"mapped",[955]],[[120757,120757],"mapped",[956]],[[120758,120758],"mapped",[957]],[[120759,120759],"mapped",[958]],[[120760,120760],"mapped",[959]],[[120761,120761],"mapped",[960]],[[120762,120762],"mapped",[961]],[[120763,120764],"mapped",[963]],[[120765,120765],"mapped",[964]],[[120766,120766],"mapped",[965]],[[120767,120767],"mapped",[966]],[[120768,120768],"mapped",[967]],[[120769,120769],"mapped",[968]],[[120770,120770],"mapped",[969]],[[120771,120771],"mapped",[8706]],[[120772,120772],"mapped",[949]],[[120773,120773],"mapped",[952]],[[120774,120774],"mapped",[954]],[[120775,120775],"mapped",[966]],[[120776,120776],"mapped",[961]],[[120777,120777],"mapped",[960]],[[120778,120779],"mapped",[989]],[[120780,120781],"disallowed"],[[120782,120782],"mapped",[48]],[[120783,120783],"mapped",[49]],[[120784,120784],"mapped",[50]],[[120785,120785],"mapped",[51]],[[120786,120786],"mapped",[52]],[[120787,120787],"mapped",[53]],[[120788,120788],"mapped",[54]],[[120789,120789],"mapped",[55]],[[120790,120790],"mapped",[56]],[[120791,120791],"mapped",[57]],[[120792,120792],"mapped",[48]],[[120793,120793],"mapped",[49]],[[120794,120794],"mapped",[50]],[[120795,120795],"mapped",[51]],[[120796,120796],"mapped",[52]],[[120797,120797],"mapped",[53]],[[120798,120798],"mapped",[54]],[[120799,120799],"mapped",[55]],[[120800,120800],"mapped",[56]],[[120801,120801],"mapped",[57]],[[120802,120802],"mapped",[48]],[[120803,120803],"mapped",[49]],[[120804,120804],"mapped",[50]],[[120805,120805],"mapped",[51]],[[120806,120806],"mapped",[52]],[[120807,120807],"mapped",[53]],[[120808,120808],"mapped",[54]],[[120809,120809],"mapped",[55]],[[120810,120810],"mapped",[56]],[[120811,120811],"mapped",[57]],[[120812,120812],"mapped",[48]],[[120813,120813],"mapped",[49]],[[120814,120814],"mapped",[50]],[[120815,120815],"mapped",[51]],[[120816,120816],"mapped",[52]],[[120817,120817],"mapped",[53]],[[120818,120818],"mapped",[54]],[[120819,120819],"mapped",[55]],[[120820,120820],"mapped",[56]],[[120821,120821],"mapped",[57]],[[120822,120822],"mapped",[48]],[[120823,120823],"mapped",[49]],[[120824,120824],"mapped",[50]],[[120825,120825],"mapped",[51]],[[120826,120826],"mapped",[52]],[[120827,120827],"mapped",[53]],[[120828,120828],"mapped",[54]],[[120829,120829],"mapped",[55]],[[120830,120830],"mapped",[56]],[[120831,120831],"mapped",[57]],[[120832,121343],"valid",[],"NV8"],[[121344,121398],"valid"],[[121399,121402],"valid",[],"NV8"],[[121403,121452],"valid"],[[121453,121460],"valid",[],"NV8"],[[121461,121461],"valid"],[[121462,121475],"valid",[],"NV8"],[[121476,121476],"valid"],[[121477,121483],"valid",[],"NV8"],[[121484,121498],"disallowed"],[[121499,121503],"valid"],[[121504,121504],"disallowed"],[[121505,121519],"valid"],[[121520,124927],"disallowed"],[[124928,125124],"valid"],[[125125,125126],"disallowed"],[[125127,125135],"valid",[],"NV8"],[[125136,125142],"valid"],[[125143,126463],"disallowed"],[[126464,126464],"mapped",[1575]],[[126465,126465],"mapped",[1576]],[[126466,126466],"mapped",[1580]],[[126467,126467],"mapped",[1583]],[[126468,126468],"disallowed"],[[126469,126469],"mapped",[1608]],[[126470,126470],"mapped",[1586]],[[126471,126471],"mapped",[1581]],[[126472,126472],"mapped",[1591]],[[126473,126473],"mapped",[1610]],[[126474,126474],"mapped",[1603]],[[126475,126475],"mapped",[1604]],[[126476,126476],"mapped",[1605]],[[126477,126477],"mapped",[1606]],[[126478,126478],"mapped",[1587]],[[126479,126479],"mapped",[1593]],[[126480,126480],"mapped",[1601]],[[126481,126481],"mapped",[1589]],[[126482,126482],"mapped",[1602]],[[126483,126483],"mapped",[1585]],[[126484,126484],"mapped",[1588]],[[126485,126485],"mapped",[1578]],[[126486,126486],"mapped",[1579]],[[126487,126487],"mapped",[1582]],[[126488,126488],"mapped",[1584]],[[126489,126489],"mapped",[1590]],[[126490,126490],"mapped",[1592]],[[126491,126491],"mapped",[1594]],[[126492,126492],"mapped",[1646]],[[126493,126493],"mapped",[1722]],[[126494,126494],"mapped",[1697]],[[126495,126495],"mapped",[1647]],[[126496,126496],"disallowed"],[[126497,126497],"mapped",[1576]],[[126498,126498],"mapped",[1580]],[[126499,126499],"disallowed"],[[126500,126500],"mapped",[1607]],[[126501,126502],"disallowed"],[[126503,126503],"mapped",[1581]],[[126504,126504],"disallowed"],[[126505,126505],"mapped",[1610]],[[126506,126506],"mapped",[1603]],[[126507,126507],"mapped",[1604]],[[126508,126508],"mapped",[1605]],[[126509,126509],"mapped",[1606]],[[126510,126510],"mapped",[1587]],[[126511,126511],"mapped",[1593]],[[126512,126512],"mapped",[1601]],[[126513,126513],"mapped",[1589]],[[126514,126514],"mapped",[1602]],[[126515,126515],"disallowed"],[[126516,126516],"mapped",[1588]],[[126517,126517],"mapped",[1578]],[[126518,126518],"mapped",[1579]],[[126519,126519],"mapped",[1582]],[[126520,126520],"disallowed"],[[126521,126521],"mapped",[1590]],[[126522,126522],"disallowed"],[[126523,126523],"mapped",[1594]],[[126524,126529],"disallowed"],[[126530,126530],"mapped",[1580]],[[126531,126534],"disallowed"],[[126535,126535],"mapped",[1581]],[[126536,126536],"disallowed"],[[126537,126537],"mapped",[1610]],[[126538,126538],"disallowed"],[[126539,126539],"mapped",[1604]],[[126540,126540],"disallowed"],[[126541,126541],"mapped",[1606]],[[126542,126542],"mapped",[1587]],[[126543,126543],"mapped",[1593]],[[126544,126544],"disallowed"],[[126545,126545],"mapped",[1589]],[[126546,126546],"mapped",[1602]],[[126547,126547],"disallowed"],[[126548,126548],"mapped",[1588]],[[126549,126550],"disallowed"],[[126551,126551],"mapped",[1582]],[[126552,126552],"disallowed"],[[126553,126553],"mapped",[1590]],[[126554,126554],"disallowed"],[[126555,126555],"mapped",[1594]],[[126556,126556],"disallowed"],[[126557,126557],"mapped",[1722]],[[126558,126558],"disallowed"],[[126559,126559],"mapped",[1647]],[[126560,126560],"disallowed"],[[126561,126561],"mapped",[1576]],[[126562,126562],"mapped",[1580]],[[126563,126563],"disallowed"],[[126564,126564],"mapped",[1607]],[[126565,126566],"disallowed"],[[126567,126567],"mapped",[1581]],[[126568,126568],"mapped",[1591]],[[126569,126569],"mapped",[1610]],[[126570,126570],"mapped",[1603]],[[126571,126571],"disallowed"],[[126572,126572],"mapped",[1605]],[[126573,126573],"mapped",[1606]],[[126574,126574],"mapped",[1587]],[[126575,126575],"mapped",[1593]],[[126576,126576],"mapped",[1601]],[[126577,126577],"mapped",[1589]],[[126578,126578],"mapped",[1602]],[[126579,126579],"disallowed"],[[126580,126580],"mapped",[1588]],[[126581,126581],"mapped",[1578]],[[126582,126582],"mapped",[1579]],[[126583,126583],"mapped",[1582]],[[126584,126584],"disallowed"],[[126585,126585],"mapped",[1590]],[[126586,126586],"mapped",[1592]],[[126587,126587],"mapped",[1594]],[[126588,126588],"mapped",[1646]],[[126589,126589],"disallowed"],[[126590,126590],"mapped",[1697]],[[126591,126591],"disallowed"],[[126592,126592],"mapped",[1575]],[[126593,126593],"mapped",[1576]],[[126594,126594],"mapped",[1580]],[[126595,126595],"mapped",[1583]],[[126596,126596],"mapped",[1607]],[[126597,126597],"mapped",[1608]],[[126598,126598],"mapped",[1586]],[[126599,126599],"mapped",[1581]],[[126600,126600],"mapped",[1591]],[[126601,126601],"mapped",[1610]],[[126602,126602],"disallowed"],[[126603,126603],"mapped",[1604]],[[126604,126604],"mapped",[1605]],[[126605,126605],"mapped",[1606]],[[126606,126606],"mapped",[1587]],[[126607,126607],"mapped",[1593]],[[126608,126608],"mapped",[1601]],[[126609,126609],"mapped",[1589]],[[126610,126610],"mapped",[1602]],[[126611,126611],"mapped",[1585]],[[126612,126612],"mapped",[1588]],[[126613,126613],"mapped",[1578]],[[126614,126614],"mapped",[1579]],[[126615,126615],"mapped",[1582]],[[126616,126616],"mapped",[1584]],[[126617,126617],"mapped",[1590]],[[126618,126618],"mapped",[1592]],[[126619,126619],"mapped",[1594]],[[126620,126624],"disallowed"],[[126625,126625],"mapped",[1576]],[[126626,126626],"mapped",[1580]],[[126627,126627],"mapped",[1583]],[[126628,126628],"disallowed"],[[126629,126629],"mapped",[1608]],[[126630,126630],"mapped",[1586]],[[126631,126631],"mapped",[1581]],[[126632,126632],"mapped",[1591]],[[126633,126633],"mapped",[1610]],[[126634,126634],"disallowed"],[[126635,126635],"mapped",[1604]],[[126636,126636],"mapped",[1605]],[[126637,126637],"mapped",[1606]],[[126638,126638],"mapped",[1587]],[[126639,126639],"mapped",[1593]],[[126640,126640],"mapped",[1601]],[[126641,126641],"mapped",[1589]],[[126642,126642],"mapped",[1602]],[[126643,126643],"mapped",[1585]],[[126644,126644],"mapped",[1588]],[[126645,126645],"mapped",[1578]],[[126646,126646],"mapped",[1579]],[[126647,126647],"mapped",[1582]],[[126648,126648],"mapped",[1584]],[[126649,126649],"mapped",[1590]],[[126650,126650],"mapped",[1592]],[[126651,126651],"mapped",[1594]],[[126652,126703],"disallowed"],[[126704,126705],"valid",[],"NV8"],[[126706,126975],"disallowed"],[[126976,127019],"valid",[],"NV8"],[[127020,127023],"disallowed"],[[127024,127123],"valid",[],"NV8"],[[127124,127135],"disallowed"],[[127136,127150],"valid",[],"NV8"],[[127151,127152],"disallowed"],[[127153,127166],"valid",[],"NV8"],[[127167,127167],"valid",[],"NV8"],[[127168,127168],"disallowed"],[[127169,127183],"valid",[],"NV8"],[[127184,127184],"disallowed"],[[127185,127199],"valid",[],"NV8"],[[127200,127221],"valid",[],"NV8"],[[127222,127231],"disallowed"],[[127232,127232],"disallowed"],[[127233,127233],"disallowed_STD3_mapped",[48,44]],[[127234,127234],"disallowed_STD3_mapped",[49,44]],[[127235,127235],"disallowed_STD3_mapped",[50,44]],[[127236,127236],"disallowed_STD3_mapped",[51,44]],[[127237,127237],"disallowed_STD3_mapped",[52,44]],[[127238,127238],"disallowed_STD3_mapped",[53,44]],[[127239,127239],"disallowed_STD3_mapped",[54,44]],[[127240,127240],"disallowed_STD3_mapped",[55,44]],[[127241,127241],"disallowed_STD3_mapped",[56,44]],[[127242,127242],"disallowed_STD3_mapped",[57,44]],[[127243,127244],"valid",[],"NV8"],[[127245,127247],"disallowed"],[[127248,127248],"disallowed_STD3_mapped",[40,97,41]],[[127249,127249],"disallowed_STD3_mapped",[40,98,41]],[[127250,127250],"disallowed_STD3_mapped",[40,99,41]],[[127251,127251],"disallowed_STD3_mapped",[40,100,41]],[[127252,127252],"disallowed_STD3_mapped",[40,101,41]],[[127253,127253],"disallowed_STD3_mapped",[40,102,41]],[[127254,127254],"disallowed_STD3_mapped",[40,103,41]],[[127255,127255],"disallowed_STD3_mapped",[40,104,41]],[[127256,127256],"disallowed_STD3_mapped",[40,105,41]],[[127257,127257],"disallowed_STD3_mapped",[40,106,41]],[[127258,127258],"disallowed_STD3_mapped",[40,107,41]],[[127259,127259],"disallowed_STD3_mapped",[40,108,41]],[[127260,127260],"disallowed_STD3_mapped",[40,109,41]],[[127261,127261],"disallowed_STD3_mapped",[40,110,41]],[[127262,127262],"disallowed_STD3_mapped",[40,111,41]],[[127263,127263],"disallowed_STD3_mapped",[40,112,41]],[[127264,127264],"disallowed_STD3_mapped",[40,113,41]],[[127265,127265],"disallowed_STD3_mapped",[40,114,41]],[[127266,127266],"disallowed_STD3_mapped",[40,115,41]],[[127267,127267],"disallowed_STD3_mapped",[40,116,41]],[[127268,127268],"disallowed_STD3_mapped",[40,117,41]],[[127269,127269],"disallowed_STD3_mapped",[40,118,41]],[[127270,127270],"disallowed_STD3_mapped",[40,119,41]],[[127271,127271],"disallowed_STD3_mapped",[40,120,41]],[[127272,127272],"disallowed_STD3_mapped",[40,121,41]],[[127273,127273],"disallowed_STD3_mapped",[40,122,41]],[[127274,127274],"mapped",[12308,115,12309]],[[127275,127275],"mapped",[99]],[[127276,127276],"mapped",[114]],[[127277,127277],"mapped",[99,100]],[[127278,127278],"mapped",[119,122]],[[127279,127279],"disallowed"],[[127280,127280],"mapped",[97]],[[127281,127281],"mapped",[98]],[[127282,127282],"mapped",[99]],[[127283,127283],"mapped",[100]],[[127284,127284],"mapped",[101]],[[127285,127285],"mapped",[102]],[[127286,127286],"mapped",[103]],[[127287,127287],"mapped",[104]],[[127288,127288],"mapped",[105]],[[127289,127289],"mapped",[106]],[[127290,127290],"mapped",[107]],[[127291,127291],"mapped",[108]],[[127292,127292],"mapped",[109]],[[127293,127293],"mapped",[110]],[[127294,127294],"mapped",[111]],[[127295,127295],"mapped",[112]],[[127296,127296],"mapped",[113]],[[127297,127297],"mapped",[114]],[[127298,127298],"mapped",[115]],[[127299,127299],"mapped",[116]],[[127300,127300],"mapped",[117]],[[127301,127301],"mapped",[118]],[[127302,127302],"mapped",[119]],[[127303,127303],"mapped",[120]],[[127304,127304],"mapped",[121]],[[127305,127305],"mapped",[122]],[[127306,127306],"mapped",[104,118]],[[127307,127307],"mapped",[109,118]],[[127308,127308],"mapped",[115,100]],[[127309,127309],"mapped",[115,115]],[[127310,127310],"mapped",[112,112,118]],[[127311,127311],"mapped",[119,99]],[[127312,127318],"valid",[],"NV8"],[[127319,127319],"valid",[],"NV8"],[[127320,127326],"valid",[],"NV8"],[[127327,127327],"valid",[],"NV8"],[[127328,127337],"valid",[],"NV8"],[[127338,127338],"mapped",[109,99]],[[127339,127339],"mapped",[109,100]],[[127340,127343],"disallowed"],[[127344,127352],"valid",[],"NV8"],[[127353,127353],"valid",[],"NV8"],[[127354,127354],"valid",[],"NV8"],[[127355,127356],"valid",[],"NV8"],[[127357,127358],"valid",[],"NV8"],[[127359,127359],"valid",[],"NV8"],[[127360,127369],"valid",[],"NV8"],[[127370,127373],"valid",[],"NV8"],[[127374,127375],"valid",[],"NV8"],[[127376,127376],"mapped",[100,106]],[[127377,127386],"valid",[],"NV8"],[[127387,127461],"disallowed"],[[127462,127487],"valid",[],"NV8"],[[127488,127488],"mapped",[12411,12363]],[[127489,127489],"mapped",[12467,12467]],[[127490,127490],"mapped",[12469]],[[127491,127503],"disallowed"],[[127504,127504],"mapped",[25163]],[[127505,127505],"mapped",[23383]],[[127506,127506],"mapped",[21452]],[[127507,127507],"mapped",[12487]],[[127508,127508],"mapped",[20108]],[[127509,127509],"mapped",[22810]],[[127510,127510],"mapped",[35299]],[[127511,127511],"mapped",[22825]],[[127512,127512],"mapped",[20132]],[[127513,127513],"mapped",[26144]],[[127514,127514],"mapped",[28961]],[[127515,127515],"mapped",[26009]],[[127516,127516],"mapped",[21069]],[[127517,127517],"mapped",[24460]],[[127518,127518],"mapped",[20877]],[[127519,127519],"mapped",[26032]],[[127520,127520],"mapped",[21021]],[[127521,127521],"mapped",[32066]],[[127522,127522],"mapped",[29983]],[[127523,127523],"mapped",[36009]],[[127524,127524],"mapped",[22768]],[[127525,127525],"mapped",[21561]],[[127526,127526],"mapped",[28436]],[[127527,127527],"mapped",[25237]],[[127528,127528],"mapped",[25429]],[[127529,127529],"mapped",[19968]],[[127530,127530],"mapped",[19977]],[[127531,127531],"mapped",[36938]],[[127532,127532],"mapped",[24038]],[[127533,127533],"mapped",[20013]],[[127534,127534],"mapped",[21491]],[[127535,127535],"mapped",[25351]],[[127536,127536],"mapped",[36208]],[[127537,127537],"mapped",[25171]],[[127538,127538],"mapped",[31105]],[[127539,127539],"mapped",[31354]],[[127540,127540],"mapped",[21512]],[[127541,127541],"mapped",[28288]],[[127542,127542],"mapped",[26377]],[[127543,127543],"mapped",[26376]],[[127544,127544],"mapped",[30003]],[[127545,127545],"mapped",[21106]],[[127546,127546],"mapped",[21942]],[[127547,127551],"disallowed"],[[127552,127552],"mapped",[12308,26412,12309]],[[127553,127553],"mapped",[12308,19977,12309]],[[127554,127554],"mapped",[12308,20108,12309]],[[127555,127555],"mapped",[12308,23433,12309]],[[127556,127556],"mapped",[12308,28857,12309]],[[127557,127557],"mapped",[12308,25171,12309]],[[127558,127558],"mapped",[12308,30423,12309]],[[127559,127559],"mapped",[12308,21213,12309]],[[127560,127560],"mapped",[12308,25943,12309]],[[127561,127567],"disallowed"],[[127568,127568],"mapped",[24471]],[[127569,127569],"mapped",[21487]],[[127570,127743],"disallowed"],[[127744,127776],"valid",[],"NV8"],[[127777,127788],"valid",[],"NV8"],[[127789,127791],"valid",[],"NV8"],[[127792,127797],"valid",[],"NV8"],[[127798,127798],"valid",[],"NV8"],[[127799,127868],"valid",[],"NV8"],[[127869,127869],"valid",[],"NV8"],[[127870,127871],"valid",[],"NV8"],[[127872,127891],"valid",[],"NV8"],[[127892,127903],"valid",[],"NV8"],[[127904,127940],"valid",[],"NV8"],[[127941,127941],"valid",[],"NV8"],[[127942,127946],"valid",[],"NV8"],[[127947,127950],"valid",[],"NV8"],[[127951,127955],"valid",[],"NV8"],[[127956,127967],"valid",[],"NV8"],[[127968,127984],"valid",[],"NV8"],[[127985,127991],"valid",[],"NV8"],[[127992,127999],"valid",[],"NV8"],[[128000,128062],"valid",[],"NV8"],[[128063,128063],"valid",[],"NV8"],[[128064,128064],"valid",[],"NV8"],[[128065,128065],"valid",[],"NV8"],[[128066,128247],"valid",[],"NV8"],[[128248,128248],"valid",[],"NV8"],[[128249,128252],"valid",[],"NV8"],[[128253,128254],"valid",[],"NV8"],[[128255,128255],"valid",[],"NV8"],[[128256,128317],"valid",[],"NV8"],[[128318,128319],"valid",[],"NV8"],[[128320,128323],"valid",[],"NV8"],[[128324,128330],"valid",[],"NV8"],[[128331,128335],"valid",[],"NV8"],[[128336,128359],"valid",[],"NV8"],[[128360,128377],"valid",[],"NV8"],[[128378,128378],"disallowed"],[[128379,128419],"valid",[],"NV8"],[[128420,128420],"disallowed"],[[128421,128506],"valid",[],"NV8"],[[128507,128511],"valid",[],"NV8"],[[128512,128512],"valid",[],"NV8"],[[128513,128528],"valid",[],"NV8"],[[128529,128529],"valid",[],"NV8"],[[128530,128532],"valid",[],"NV8"],[[128533,128533],"valid",[],"NV8"],[[128534,128534],"valid",[],"NV8"],[[128535,128535],"valid",[],"NV8"],[[128536,128536],"valid",[],"NV8"],[[128537,128537],"valid",[],"NV8"],[[128538,128538],"valid",[],"NV8"],[[128539,128539],"valid",[],"NV8"],[[128540,128542],"valid",[],"NV8"],[[128543,128543],"valid",[],"NV8"],[[128544,128549],"valid",[],"NV8"],[[128550,128551],"valid",[],"NV8"],[[128552,128555],"valid",[],"NV8"],[[128556,128556],"valid",[],"NV8"],[[128557,128557],"valid",[],"NV8"],[[128558,128559],"valid",[],"NV8"],[[128560,128563],"valid",[],"NV8"],[[128564,128564],"valid",[],"NV8"],[[128565,128576],"valid",[],"NV8"],[[128577,128578],"valid",[],"NV8"],[[128579,128580],"valid",[],"NV8"],[[128581,128591],"valid",[],"NV8"],[[128592,128639],"valid",[],"NV8"],[[128640,128709],"valid",[],"NV8"],[[128710,128719],"valid",[],"NV8"],[[128720,128720],"valid",[],"NV8"],[[128721,128735],"disallowed"],[[128736,128748],"valid",[],"NV8"],[[128749,128751],"disallowed"],[[128752,128755],"valid",[],"NV8"],[[128756,128767],"disallowed"],[[128768,128883],"valid",[],"NV8"],[[128884,128895],"disallowed"],[[128896,128980],"valid",[],"NV8"],[[128981,129023],"disallowed"],[[129024,129035],"valid",[],"NV8"],[[129036,129039],"disallowed"],[[129040,129095],"valid",[],"NV8"],[[129096,129103],"disallowed"],[[129104,129113],"valid",[],"NV8"],[[129114,129119],"disallowed"],[[129120,129159],"valid",[],"NV8"],[[129160,129167],"disallowed"],[[129168,129197],"valid",[],"NV8"],[[129198,129295],"disallowed"],[[129296,129304],"valid",[],"NV8"],[[129305,129407],"disallowed"],[[129408,129412],"valid",[],"NV8"],[[129413,129471],"disallowed"],[[129472,129472],"valid",[],"NV8"],[[129473,131069],"disallowed"],[[131070,131071],"disallowed"],[[131072,173782],"valid"],[[173783,173823],"disallowed"],[[173824,177972],"valid"],[[177973,177983],"disallowed"],[[177984,178205],"valid"],[[178206,178207],"disallowed"],[[178208,183969],"valid"],[[183970,194559],"disallowed"],[[194560,194560],"mapped",[20029]],[[194561,194561],"mapped",[20024]],[[194562,194562],"mapped",[20033]],[[194563,194563],"mapped",[131362]],[[194564,194564],"mapped",[20320]],[[194565,194565],"mapped",[20398]],[[194566,194566],"mapped",[20411]],[[194567,194567],"mapped",[20482]],[[194568,194568],"mapped",[20602]],[[194569,194569],"mapped",[20633]],[[194570,194570],"mapped",[20711]],[[194571,194571],"mapped",[20687]],[[194572,194572],"mapped",[13470]],[[194573,194573],"mapped",[132666]],[[194574,194574],"mapped",[20813]],[[194575,194575],"mapped",[20820]],[[194576,194576],"mapped",[20836]],[[194577,194577],"mapped",[20855]],[[194578,194578],"mapped",[132380]],[[194579,194579],"mapped",[13497]],[[194580,194580],"mapped",[20839]],[[194581,194581],"mapped",[20877]],[[194582,194582],"mapped",[132427]],[[194583,194583],"mapped",[20887]],[[194584,194584],"mapped",[20900]],[[194585,194585],"mapped",[20172]],[[194586,194586],"mapped",[20908]],[[194587,194587],"mapped",[20917]],[[194588,194588],"mapped",[168415]],[[194589,194589],"mapped",[20981]],[[194590,194590],"mapped",[20995]],[[194591,194591],"mapped",[13535]],[[194592,194592],"mapped",[21051]],[[194593,194593],"mapped",[21062]],[[194594,194594],"mapped",[21106]],[[194595,194595],"mapped",[21111]],[[194596,194596],"mapped",[13589]],[[194597,194597],"mapped",[21191]],[[194598,194598],"mapped",[21193]],[[194599,194599],"mapped",[21220]],[[194600,194600],"mapped",[21242]],[[194601,194601],"mapped",[21253]],[[194602,194602],"mapped",[21254]],[[194603,194603],"mapped",[21271]],[[194604,194604],"mapped",[21321]],[[194605,194605],"mapped",[21329]],[[194606,194606],"mapped",[21338]],[[194607,194607],"mapped",[21363]],[[194608,194608],"mapped",[21373]],[[194609,194611],"mapped",[21375]],[[194612,194612],"mapped",[133676]],[[194613,194613],"mapped",[28784]],[[194614,194614],"mapped",[21450]],[[194615,194615],"mapped",[21471]],[[194616,194616],"mapped",[133987]],[[194617,194617],"mapped",[21483]],[[194618,194618],"mapped",[21489]],[[194619,194619],"mapped",[21510]],[[194620,194620],"mapped",[21662]],[[194621,194621],"mapped",[21560]],[[194622,194622],"mapped",[21576]],[[194623,194623],"mapped",[21608]],[[194624,194624],"mapped",[21666]],[[194625,194625],"mapped",[21750]],[[194626,194626],"mapped",[21776]],[[194627,194627],"mapped",[21843]],[[194628,194628],"mapped",[21859]],[[194629,194630],"mapped",[21892]],[[194631,194631],"mapped",[21913]],[[194632,194632],"mapped",[21931]],[[194633,194633],"mapped",[21939]],[[194634,194634],"mapped",[21954]],[[194635,194635],"mapped",[22294]],[[194636,194636],"mapped",[22022]],[[194637,194637],"mapped",[22295]],[[194638,194638],"mapped",[22097]],[[194639,194639],"mapped",[22132]],[[194640,194640],"mapped",[20999]],[[194641,194641],"mapped",[22766]],[[194642,194642],"mapped",[22478]],[[194643,194643],"mapped",[22516]],[[194644,194644],"mapped",[22541]],[[194645,194645],"mapped",[22411]],[[194646,194646],"mapped",[22578]],[[194647,194647],"mapped",[22577]],[[194648,194648],"mapped",[22700]],[[194649,194649],"mapped",[136420]],[[194650,194650],"mapped",[22770]],[[194651,194651],"mapped",[22775]],[[194652,194652],"mapped",[22790]],[[194653,194653],"mapped",[22810]],[[194654,194654],"mapped",[22818]],[[194655,194655],"mapped",[22882]],[[194656,194656],"mapped",[136872]],[[194657,194657],"mapped",[136938]],[[194658,194658],"mapped",[23020]],[[194659,194659],"mapped",[23067]],[[194660,194660],"mapped",[23079]],[[194661,194661],"mapped",[23000]],[[194662,194662],"mapped",[23142]],[[194663,194663],"mapped",[14062]],[[194664,194664],"disallowed"],[[194665,194665],"mapped",[23304]],[[194666,194667],"mapped",[23358]],[[194668,194668],"mapped",[137672]],[[194669,194669],"mapped",[23491]],[[194670,194670],"mapped",[23512]],[[194671,194671],"mapped",[23527]],[[194672,194672],"mapped",[23539]],[[194673,194673],"mapped",[138008]],[[194674,194674],"mapped",[23551]],[[194675,194675],"mapped",[23558]],[[194676,194676],"disallowed"],[[194677,194677],"mapped",[23586]],[[194678,194678],"mapped",[14209]],[[194679,194679],"mapped",[23648]],[[194680,194680],"mapped",[23662]],[[194681,194681],"mapped",[23744]],[[194682,194682],"mapped",[23693]],[[194683,194683],"mapped",[138724]],[[194684,194684],"mapped",[23875]],[[194685,194685],"mapped",[138726]],[[194686,194686],"mapped",[23918]],[[194687,194687],"mapped",[23915]],[[194688,194688],"mapped",[23932]],[[194689,194689],"mapped",[24033]],[[194690,194690],"mapped",[24034]],[[194691,194691],"mapped",[14383]],[[194692,194692],"mapped",[24061]],[[194693,194693],"mapped",[24104]],[[194694,194694],"mapped",[24125]],[[194695,194695],"mapped",[24169]],[[194696,194696],"mapped",[14434]],[[194697,194697],"mapped",[139651]],[[194698,194698],"mapped",[14460]],[[194699,194699],"mapped",[24240]],[[194700,194700],"mapped",[24243]],[[194701,194701],"mapped",[24246]],[[194702,194702],"mapped",[24266]],[[194703,194703],"mapped",[172946]],[[194704,194704],"mapped",[24318]],[[194705,194706],"mapped",[140081]],[[194707,194707],"mapped",[33281]],[[194708,194709],"mapped",[24354]],[[194710,194710],"mapped",[14535]],[[194711,194711],"mapped",[144056]],[[194712,194712],"mapped",[156122]],[[194713,194713],"mapped",[24418]],[[194714,194714],"mapped",[24427]],[[194715,194715],"mapped",[14563]],[[194716,194716],"mapped",[24474]],[[194717,194717],"mapped",[24525]],[[194718,194718],"mapped",[24535]],[[194719,194719],"mapped",[24569]],[[194720,194720],"mapped",[24705]],[[194721,194721],"mapped",[14650]],[[194722,194722],"mapped",[14620]],[[194723,194723],"mapped",[24724]],[[194724,194724],"mapped",[141012]],[[194725,194725],"mapped",[24775]],[[194726,194726],"mapped",[24904]],[[194727,194727],"mapped",[24908]],[[194728,194728],"mapped",[24910]],[[194729,194729],"mapped",[24908]],[[194730,194730],"mapped",[24954]],[[194731,194731],"mapped",[24974]],[[194732,194732],"mapped",[25010]],[[194733,194733],"mapped",[24996]],[[194734,194734],"mapped",[25007]],[[194735,194735],"mapped",[25054]],[[194736,194736],"mapped",[25074]],[[194737,194737],"mapped",[25078]],[[194738,194738],"mapped",[25104]],[[194739,194739],"mapped",[25115]],[[194740,194740],"mapped",[25181]],[[194741,194741],"mapped",[25265]],[[194742,194742],"mapped",[25300]],[[194743,194743],"mapped",[25424]],[[194744,194744],"mapped",[142092]],[[194745,194745],"mapped",[25405]],[[194746,194746],"mapped",[25340]],[[194747,194747],"mapped",[25448]],[[194748,194748],"mapped",[25475]],[[194749,194749],"mapped",[25572]],[[194750,194750],"mapped",[142321]],[[194751,194751],"mapped",[25634]],[[194752,194752],"mapped",[25541]],[[194753,194753],"mapped",[25513]],[[194754,194754],"mapped",[14894]],[[194755,194755],"mapped",[25705]],[[194756,194756],"mapped",[25726]],[[194757,194757],"mapped",[25757]],[[194758,194758],"mapped",[25719]],[[194759,194759],"mapped",[14956]],[[194760,194760],"mapped",[25935]],[[194761,194761],"mapped",[25964]],[[194762,194762],"mapped",[143370]],[[194763,194763],"mapped",[26083]],[[194764,194764],"mapped",[26360]],[[194765,194765],"mapped",[26185]],[[194766,194766],"mapped",[15129]],[[194767,194767],"mapped",[26257]],[[194768,194768],"mapped",[15112]],[[194769,194769],"mapped",[15076]],[[194770,194770],"mapped",[20882]],[[194771,194771],"mapped",[20885]],[[194772,194772],"mapped",[26368]],[[194773,194773],"mapped",[26268]],[[194774,194774],"mapped",[32941]],[[194775,194775],"mapped",[17369]],[[194776,194776],"mapped",[26391]],[[194777,194777],"mapped",[26395]],[[194778,194778],"mapped",[26401]],[[194779,194779],"mapped",[26462]],[[194780,194780],"mapped",[26451]],[[194781,194781],"mapped",[144323]],[[194782,194782],"mapped",[15177]],[[194783,194783],"mapped",[26618]],[[194784,194784],"mapped",[26501]],[[194785,194785],"mapped",[26706]],[[194786,194786],"mapped",[26757]],[[194787,194787],"mapped",[144493]],[[194788,194788],"mapped",[26766]],[[194789,194789],"mapped",[26655]],[[194790,194790],"mapped",[26900]],[[194791,194791],"mapped",[15261]],[[194792,194792],"mapped",[26946]],[[194793,194793],"mapped",[27043]],[[194794,194794],"mapped",[27114]],[[194795,194795],"mapped",[27304]],[[194796,194796],"mapped",[145059]],[[194797,194797],"mapped",[27355]],[[194798,194798],"mapped",[15384]],[[194799,194799],"mapped",[27425]],[[194800,194800],"mapped",[145575]],[[194801,194801],"mapped",[27476]],[[194802,194802],"mapped",[15438]],[[194803,194803],"mapped",[27506]],[[194804,194804],"mapped",[27551]],[[194805,194805],"mapped",[27578]],[[194806,194806],"mapped",[27579]],[[194807,194807],"mapped",[146061]],[[194808,194808],"mapped",[138507]],[[194809,194809],"mapped",[146170]],[[194810,194810],"mapped",[27726]],[[194811,194811],"mapped",[146620]],[[194812,194812],"mapped",[27839]],[[194813,194813],"mapped",[27853]],[[194814,194814],"mapped",[27751]],[[194815,194815],"mapped",[27926]],[[194816,194816],"mapped",[27966]],[[194817,194817],"mapped",[28023]],[[194818,194818],"mapped",[27969]],[[194819,194819],"mapped",[28009]],[[194820,194820],"mapped",[28024]],[[194821,194821],"mapped",[28037]],[[194822,194822],"mapped",[146718]],[[194823,194823],"mapped",[27956]],[[194824,194824],"mapped",[28207]],[[194825,194825],"mapped",[28270]],[[194826,194826],"mapped",[15667]],[[194827,194827],"mapped",[28363]],[[194828,194828],"mapped",[28359]],[[194829,194829],"mapped",[147153]],[[194830,194830],"mapped",[28153]],[[194831,194831],"mapped",[28526]],[[194832,194832],"mapped",[147294]],[[194833,194833],"mapped",[147342]],[[194834,194834],"mapped",[28614]],[[194835,194835],"mapped",[28729]],[[194836,194836],"mapped",[28702]],[[194837,194837],"mapped",[28699]],[[194838,194838],"mapped",[15766]],[[194839,194839],"mapped",[28746]],[[194840,194840],"mapped",[28797]],[[194841,194841],"mapped",[28791]],[[194842,194842],"mapped",[28845]],[[194843,194843],"mapped",[132389]],[[194844,194844],"mapped",[28997]],[[194845,194845],"mapped",[148067]],[[194846,194846],"mapped",[29084]],[[194847,194847],"disallowed"],[[194848,194848],"mapped",[29224]],[[194849,194849],"mapped",[29237]],[[194850,194850],"mapped",[29264]],[[194851,194851],"mapped",[149000]],[[194852,194852],"mapped",[29312]],[[194853,194853],"mapped",[29333]],[[194854,194854],"mapped",[149301]],[[194855,194855],"mapped",[149524]],[[194856,194856],"mapped",[29562]],[[194857,194857],"mapped",[29579]],[[194858,194858],"mapped",[16044]],[[194859,194859],"mapped",[29605]],[[194860,194861],"mapped",[16056]],[[194862,194862],"mapped",[29767]],[[194863,194863],"mapped",[29788]],[[194864,194864],"mapped",[29809]],[[194865,194865],"mapped",[29829]],[[194866,194866],"mapped",[29898]],[[194867,194867],"mapped",[16155]],[[194868,194868],"mapped",[29988]],[[194869,194869],"mapped",[150582]],[[194870,194870],"mapped",[30014]],[[194871,194871],"mapped",[150674]],[[194872,194872],"mapped",[30064]],[[194873,194873],"mapped",[139679]],[[194874,194874],"mapped",[30224]],[[194875,194875],"mapped",[151457]],[[194876,194876],"mapped",[151480]],[[194877,194877],"mapped",[151620]],[[194878,194878],"mapped",[16380]],[[194879,194879],"mapped",[16392]],[[194880,194880],"mapped",[30452]],[[194881,194881],"mapped",[151795]],[[194882,194882],"mapped",[151794]],[[194883,194883],"mapped",[151833]],[[194884,194884],"mapped",[151859]],[[194885,194885],"mapped",[30494]],[[194886,194887],"mapped",[30495]],[[194888,194888],"mapped",[30538]],[[194889,194889],"mapped",[16441]],[[194890,194890],"mapped",[30603]],[[194891,194891],"mapped",[16454]],[[194892,194892],"mapped",[16534]],[[194893,194893],"mapped",[152605]],[[194894,194894],"mapped",[30798]],[[194895,194895],"mapped",[30860]],[[194896,194896],"mapped",[30924]],[[194897,194897],"mapped",[16611]],[[194898,194898],"mapped",[153126]],[[194899,194899],"mapped",[31062]],[[194900,194900],"mapped",[153242]],[[194901,194901],"mapped",[153285]],[[194902,194902],"mapped",[31119]],[[194903,194903],"mapped",[31211]],[[194904,194904],"mapped",[16687]],[[194905,194905],"mapped",[31296]],[[194906,194906],"mapped",[31306]],[[194907,194907],"mapped",[31311]],[[194908,194908],"mapped",[153980]],[[194909,194910],"mapped",[154279]],[[194911,194911],"disallowed"],[[194912,194912],"mapped",[16898]],[[194913,194913],"mapped",[154539]],[[194914,194914],"mapped",[31686]],[[194915,194915],"mapped",[31689]],[[194916,194916],"mapped",[16935]],[[194917,194917],"mapped",[154752]],[[194918,194918],"mapped",[31954]],[[194919,194919],"mapped",[17056]],[[194920,194920],"mapped",[31976]],[[194921,194921],"mapped",[31971]],[[194922,194922],"mapped",[32000]],[[194923,194923],"mapped",[155526]],[[194924,194924],"mapped",[32099]],[[194925,194925],"mapped",[17153]],[[194926,194926],"mapped",[32199]],[[194927,194927],"mapped",[32258]],[[194928,194928],"mapped",[32325]],[[194929,194929],"mapped",[17204]],[[194930,194930],"mapped",[156200]],[[194931,194931],"mapped",[156231]],[[194932,194932],"mapped",[17241]],[[194933,194933],"mapped",[156377]],[[194934,194934],"mapped",[32634]],[[194935,194935],"mapped",[156478]],[[194936,194936],"mapped",[32661]],[[194937,194937],"mapped",[32762]],[[194938,194938],"mapped",[32773]],[[194939,194939],"mapped",[156890]],[[194940,194940],"mapped",[156963]],[[194941,194941],"mapped",[32864]],[[194942,194942],"mapped",[157096]],[[194943,194943],"mapped",[32880]],[[194944,194944],"mapped",[144223]],[[194945,194945],"mapped",[17365]],[[194946,194946],"mapped",[32946]],[[194947,194947],"mapped",[33027]],[[194948,194948],"mapped",[17419]],[[194949,194949],"mapped",[33086]],[[194950,194950],"mapped",[23221]],[[194951,194951],"mapped",[157607]],[[194952,194952],"mapped",[157621]],[[194953,194953],"mapped",[144275]],[[194954,194954],"mapped",[144284]],[[194955,194955],"mapped",[33281]],[[194956,194956],"mapped",[33284]],[[194957,194957],"mapped",[36766]],[[194958,194958],"mapped",[17515]],[[194959,194959],"mapped",[33425]],[[194960,194960],"mapped",[33419]],[[194961,194961],"mapped",[33437]],[[194962,194962],"mapped",[21171]],[[194963,194963],"mapped",[33457]],[[194964,194964],"mapped",[33459]],[[194965,194965],"mapped",[33469]],[[194966,194966],"mapped",[33510]],[[194967,194967],"mapped",[158524]],[[194968,194968],"mapped",[33509]],[[194969,194969],"mapped",[33565]],[[194970,194970],"mapped",[33635]],[[194971,194971],"mapped",[33709]],[[194972,194972],"mapped",[33571]],[[194973,194973],"mapped",[33725]],[[194974,194974],"mapped",[33767]],[[194975,194975],"mapped",[33879]],[[194976,194976],"mapped",[33619]],[[194977,194977],"mapped",[33738]],[[194978,194978],"mapped",[33740]],[[194979,194979],"mapped",[33756]],[[194980,194980],"mapped",[158774]],[[194981,194981],"mapped",[159083]],[[194982,194982],"mapped",[158933]],[[194983,194983],"mapped",[17707]],[[194984,194984],"mapped",[34033]],[[194985,194985],"mapped",[34035]],[[194986,194986],"mapped",[34070]],[[194987,194987],"mapped",[160714]],[[194988,194988],"mapped",[34148]],[[194989,194989],"mapped",[159532]],[[194990,194990],"mapped",[17757]],[[194991,194991],"mapped",[17761]],[[194992,194992],"mapped",[159665]],[[194993,194993],"mapped",[159954]],[[194994,194994],"mapped",[17771]],[[194995,194995],"mapped",[34384]],[[194996,194996],"mapped",[34396]],[[194997,194997],"mapped",[34407]],[[194998,194998],"mapped",[34409]],[[194999,194999],"mapped",[34473]],[[195000,195000],"mapped",[34440]],[[195001,195001],"mapped",[34574]],[[195002,195002],"mapped",[34530]],[[195003,195003],"mapped",[34681]],[[195004,195004],"mapped",[34600]],[[195005,195005],"mapped",[34667]],[[195006,195006],"mapped",[34694]],[[195007,195007],"disallowed"],[[195008,195008],"mapped",[34785]],[[195009,195009],"mapped",[34817]],[[195010,195010],"mapped",[17913]],[[195011,195011],"mapped",[34912]],[[195012,195012],"mapped",[34915]],[[195013,195013],"mapped",[161383]],[[195014,195014],"mapped",[35031]],[[195015,195015],"mapped",[35038]],[[195016,195016],"mapped",[17973]],[[195017,195017],"mapped",[35066]],[[195018,195018],"mapped",[13499]],[[195019,195019],"mapped",[161966]],[[195020,195020],"mapped",[162150]],[[195021,195021],"mapped",[18110]],[[195022,195022],"mapped",[18119]],[[195023,195023],"mapped",[35488]],[[195024,195024],"mapped",[35565]],[[195025,195025],"mapped",[35722]],[[195026,195026],"mapped",[35925]],[[195027,195027],"mapped",[162984]],[[195028,195028],"mapped",[36011]],[[195029,195029],"mapped",[36033]],[[195030,195030],"mapped",[36123]],[[195031,195031],"mapped",[36215]],[[195032,195032],"mapped",[163631]],[[195033,195033],"mapped",[133124]],[[195034,195034],"mapped",[36299]],[[195035,195035],"mapped",[36284]],[[195036,195036],"mapped",[36336]],[[195037,195037],"mapped",[133342]],[[195038,195038],"mapped",[36564]],[[195039,195039],"mapped",[36664]],[[195040,195040],"mapped",[165330]],[[195041,195041],"mapped",[165357]],[[195042,195042],"mapped",[37012]],[[195043,195043],"mapped",[37105]],[[195044,195044],"mapped",[37137]],[[195045,195045],"mapped",[165678]],[[195046,195046],"mapped",[37147]],[[195047,195047],"mapped",[37432]],[[195048,195048],"mapped",[37591]],[[195049,195049],"mapped",[37592]],[[195050,195050],"mapped",[37500]],[[195051,195051],"mapped",[37881]],[[195052,195052],"mapped",[37909]],[[195053,195053],"mapped",[166906]],[[195054,195054],"mapped",[38283]],[[195055,195055],"mapped",[18837]],[[195056,195056],"mapped",[38327]],[[195057,195057],"mapped",[167287]],[[195058,195058],"mapped",[18918]],[[195059,195059],"mapped",[38595]],[[195060,195060],"mapped",[23986]],[[195061,195061],"mapped",[38691]],[[195062,195062],"mapped",[168261]],[[195063,195063],"mapped",[168474]],[[195064,195064],"mapped",[19054]],[[195065,195065],"mapped",[19062]],[[195066,195066],"mapped",[38880]],[[195067,195067],"mapped",[168970]],[[195068,195068],"mapped",[19122]],[[195069,195069],"mapped",[169110]],[[195070,195071],"mapped",[38923]],[[195072,195072],"mapped",[38953]],[[195073,195073],"mapped",[169398]],[[195074,195074],"mapped",[39138]],[[195075,195075],"mapped",[19251]],[[195076,195076],"mapped",[39209]],[[195077,195077],"mapped",[39335]],[[195078,195078],"mapped",[39362]],[[195079,195079],"mapped",[39422]],[[195080,195080],"mapped",[19406]],[[195081,195081],"mapped",[170800]],[[195082,195082],"mapped",[39698]],[[195083,195083],"mapped",[40000]],[[195084,195084],"mapped",[40189]],[[195085,195085],"mapped",[19662]],[[195086,195086],"mapped",[19693]],[[195087,195087],"mapped",[40295]],[[195088,195088],"mapped",[172238]],[[195089,195089],"mapped",[19704]],[[195090,195090],"mapped",[172293]],[[195091,195091],"mapped",[172558]],[[195092,195092],"mapped",[172689]],[[195093,195093],"mapped",[40635]],[[195094,195094],"mapped",[19798]],[[195095,195095],"mapped",[40697]],[[195096,195096],"mapped",[40702]],[[195097,195097],"mapped",[40709]],[[195098,195098],"mapped",[40719]],[[195099,195099],"mapped",[40726]],[[195100,195100],"mapped",[40763]],[[195101,195101],"mapped",[173568]],[[195102,196605],"disallowed"],[[196606,196607],"disallowed"],[[196608,262141],"disallowed"],[[262142,262143],"disallowed"],[[262144,327677],"disallowed"],[[327678,327679],"disallowed"],[[327680,393213],"disallowed"],[[393214,393215],"disallowed"],[[393216,458749],"disallowed"],[[458750,458751],"disallowed"],[[458752,524285],"disallowed"],[[524286,524287],"disallowed"],[[524288,589821],"disallowed"],[[589822,589823],"disallowed"],[[589824,655357],"disallowed"],[[655358,655359],"disallowed"],[[655360,720893],"disallowed"],[[720894,720895],"disallowed"],[[720896,786429],"disallowed"],[[786430,786431],"disallowed"],[[786432,851965],"disallowed"],[[851966,851967],"disallowed"],[[851968,917501],"disallowed"],[[917502,917503],"disallowed"],[[917504,917504],"disallowed"],[[917505,917505],"disallowed"],[[917506,917535],"disallowed"],[[917536,917631],"disallowed"],[[917632,917759],"disallowed"],[[917760,917999],"ignored"],[[918000,983037],"disallowed"],[[983038,983039],"disallowed"],[[983040,1048573],"disallowed"],[[1048574,1048575],"disallowed"],[[1048576,1114109],"disallowed"],[[1114110,1114111],"disallowed"]]')}},__webpack_module_cache__={},webpackQueues,webpackExports,webpackError,resolveQueue,leafPrototypes,getProto,installedChunks;function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var a=__webpack_module_cache__[e]={id:e,loaded:!1,exports:{}};return __webpack_modules__[e](a,a.exports,__webpack_require__),a.loaded=!0,a.exports}__webpack_require__.m=__webpack_modules__,__webpack_require__.amdO={},webpackQueues="function"==typeof Symbol?Symbol("webpack queues"):"__webpack_queues__",webpackExports="function"==typeof Symbol?Symbol("webpack exports"):"__webpack_exports__",webpackError="function"==typeof Symbol?Symbol("webpack error"):"__webpack_error__",resolveQueue=e=>{e&&e.d<1&&(e.d=1,e.forEach((e=>e.r--)),e.forEach((e=>e.r--?e.r++:e())))},__webpack_require__.a=(e,t,a)=>{var n;a&&((n=[]).d=-1);var r,i,o,p=new Set,s=e.exports,d=new Promise(((e,t)=>{o=t,i=e}));d[webpackExports]=s,d[webpackQueues]=e=>(n&&e(n),p.forEach(e),d.catch((e=>{}))),e.exports=d,t((e=>{var t;r=(e=>e.map((e=>{if(null!==e&&"object"==typeof e){if(e[webpackQueues])return e;if(e.then){var t=[];t.d=0,e.then((e=>{a[webpackExports]=e,resolveQueue(t)}),(e=>{a[webpackError]=e,resolveQueue(t)}));var a={};return a[webpackQueues]=e=>e(t),a}}var n={};return n[webpackQueues]=e=>{},n[webpackExports]=e,n})))(e);var a=()=>r.map((e=>{if(e[webpackError])throw e[webpackError];return e[webpackExports]})),i=new Promise((e=>{(t=()=>e(a)).r=0;var i=e=>e!==n&&!p.has(e)&&(p.add(e),e&&!e.d&&(t.r++,e.push(t)));r.map((e=>e[webpackQueues](i)))}));return t.r?i:a()}),(e=>(e?o(d[webpackError]=e):i(s),resolveQueue(n)))),n&&n.d<0&&(n.d=0)},getProto=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,__webpack_require__.t=function(e,t){if(1&t&&(e=this(e)),8&t)return e;if("object"==typeof e&&e){if(4&t&&e.__esModule)return e;if(16&t&&"function"==typeof e.then)return e}var a=Object.create(null);__webpack_require__.r(a);var n={};leafPrototypes=leafPrototypes||[null,getProto({}),getProto([]),getProto(getProto)];for(var r=2&t&&e;"object"==typeof r&&!~leafPrototypes.indexOf(r);r=getProto(r))Object.getOwnPropertyNames(r).forEach((t=>n[t]=()=>e[t]));return n.default=()=>e,__webpack_require__.d(a,n),a},__webpack_require__.d=(e,t)=>{for(var a in t)__webpack_require__.o(t,a)&&!__webpack_require__.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},__webpack_require__.f={},__webpack_require__.e=e=>Promise.all(Object.keys(__webpack_require__.f).reduce(((t,a)=>(__webpack_require__.f[a](e,t),t)),[])),__webpack_require__.u=e=>e+".interact.bundle.js",__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},__webpack_require__.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),installedChunks={792:1},__webpack_require__.f.require=(e,t)=>{installedChunks[e]||(e=>{var t=e.modules,a=e.ids,n=e.runtime;for(var r in t)__webpack_require__.o(t,r)&&(__webpack_require__.m[r]=t[r]);n&&n(__webpack_require__);for(var i=0;i<a.length;i++)installedChunks[a[i]]=1})(require("./"+__webpack_require__.u(e)))};var __webpack_exports__=__webpack_require__(148)})();